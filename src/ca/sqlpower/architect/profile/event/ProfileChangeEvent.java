/*
 * Copyright (c) 2008, SQL Power Group Inc.
 *
 * This file is part of Power*Architect.
 *
 * Power*Architect is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * Power*Architect is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>. 
 */
package ca.sqlpower.architect.profile.event;

import java.util.ArrayList;
import java.util.Collections;
import java.util.EventObject;
import java.util.List;

import ca.sqlpower.architect.profile.ProfileManager;
import ca.sqlpower.architect.profile.ProfileResult;
import ca.sqlpower.sqlobject.SQLObject;

/**
 * The ProfileChangeEvent represents a change in the contents of a
 * particular ProfileManager.  The profile manager that underwent
 * the change is the source of this event.
 */
public class ProfileChangeEvent extends EventObject {

    /**
     * The list of profile results that has been added or removed from
     * the source manager.
     */
    final List<ProfileResult> profileResultList;
    
    /**
     * Creates a profile change event for the given list of profile objects.
     * The given list is copied, so it is safe to modify the list you pass
     * in after creating this event.
     * 
     * @param source The profile manager that gained or lost a profile.
     * @param prList The list of profiles gained or lost.  This list will be
     * copied, not referenced directly.
     */
    public ProfileChangeEvent(ProfileManager source, List<? extends ProfileResult> prList) {
        super(source);
        this.profileResultList = Collections.unmodifiableList(new ArrayList<ProfileResult>(prList));
    }

    /**
     * Returns the list of profile results that were either added or removed.
     * The list is not modifiable.
     */
    public List<ProfileResult> getProfileResults() {
        return profileResultList;
    }

    /**
     * Returns the ProfileManager that this event was generated by.
     */
    @Override
    public ProfileManager getSource() {
        return (ProfileManager) super.getSource();
    }
    
    /**
     * Returns a string representation of each profile result in this event.
     */
    @Override
    public String toString() { 
        StringBuffer buf = new StringBuffer();
        buf.append("ProfileChangeEvent(source = ").append(source);
        for (ProfileResult<SQLObject> pr: profileResultList) {
            String name;
            SQLObject profiledObject = pr.getProfiledObject();        
            name = profiledObject !=null? profiledObject.getName()
                :"unknown profiled object";
            
            buf.append(String.format(" [%s, %s]", name, pr));
        }
        buf.append(" )");
        return buf.toString();
    }
    
}
