<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.0//EN" 
	"http://www.oasis-open.org/docbook/xml/simple/1.0/sdocbook.dtd">

<book id="architect-user-guide" lang="en">

	<bookinfo>

		<!-- $Id$ -->

		<title id="book">Power*Architect User Guide</title>

		<mediaobject>
			<imageobject id="architect_logo">
				<imagedata fileref="doc/images/architect_logo.png"
					format="PNG" width="4in" />
			</imageobject>
		</mediaobject>

		<corpauthor>
			<!-- Whether or not this link is underlined depends on the stylesheet, not the DocBook markup -->
			<ulink url="http://www.sqlpower.ca/">
				SQL Power Group Inc.
			</ulink>
		</corpauthor>

		<date>Last Modified</date>

		<copyright>
			<year>2008</year>
			<holder>SQL Power Group Inc.</holder>
		</copyright>

	</bookinfo>

	<chapter id="intro">

		<title>Introduction</title>

		<section id="intro.about_pa">

			<title>About Power*Architect</title>

			<para>
				Power*Architect from SQL Power Group is a visual data
				modeling tool designed for data architects, DBAs,
				analysts, designers, and other professionals. Quickly
				design every aspect of your data model using diagrams
				and a hierarchical view of your model structure. Your
				data model remains platform-independent, allowing you to
				maintain a single database schema that works well with
				multiple database platforms.
			</para>

			<para>
				Power*Architect is also well-suited to data warehouse
				and data mart design. You can open multiple source
				databases concurrently, then drag and drop objects (such
				as schemas, tables, and columns) into Power*Architect's
				data modeling playpen to create a new model. After
				fine-tuning the data model in the playpen, you can
				forward engineer the data model into new database on
				platforms such as Oracle, SQL Server, DB2, PostgreSQL,
				or MySQL. Power*Architect also creates ETL (Extract,
				Transform, Load) procedures you can use with Pentaho's
				popular open source Kettle ETL tool to populate the new
				database.
			</para>

			<para>
				Power*Architect provides you with a variety of tools to
				view and compare data structures and mappings. For
				example, you can compare the structure of any two
				databases, highlighting the differences and similarities
				and generating the required DDL statements to
				synchronize them. You can also create a visual mapping
				report listing the source tables used in your data
				model, or create an easy-to-read profile summarizing the
				data contained in a database.
			</para>

			<para>
				Whether you're building or maintaining a data model,
				Power*Architect provides the tools to help you design
				your model in a fraction of the time.
			</para>

		</section>

		<section id="intro.audience">

			<title>About This Guide</title>

			<para>
				The Power*Architect User Guide provides step-by-step
				instructions for using Power*Architect and covers all of
				Power*Architect's features and capabilities.
			</para>

			<para>
				The guide assumes you are familiar with basic database
				operations and terminology (please refer to
				<xref linkend="glossary" />
				for a list of some common database terms). If you plan
				to use Kettle jobs, the guide assumes you have some
				knowledge about ETL (Extract, Transform, Load)
				procedures. If you are looking for more information
				about ETL, two books you may want to try are
				<emphasis>Building the Data Warehouse</emphasis>
				by W. H. Inmon and
				<emphasis>
					The Data Warehouse Toolkit: The Complete Dimensional
					Modeling
				</emphasis>
				by Ralph Kimball and Margy Ross.
			</para>

		</section>

		<section id="intro.pa_licence">

			<title>Power*Architect Licensing and Distribution</title>

			<para>
				Power*Architect is free and open source software,
				meaning that the source code is readily available.
				Everyone is free to inspect, comment on, and modify
				Power*Architect's source code. Anyone who modifies the
				program code is invited (but not required) to contribute
				their changes back to the project. All contributions are
				subject to review and acceptance by the Power*Architect
				team. We always welcome suggestions from Power*Architect
				users, in the spirit of making the application easier to
				use and providing the features that matter the most to
				you.
			</para>

			<para>
				Power*Architect is distributed to the public under the
				New BSD License. There is a large body of software
				already available under this license, so its terms are
				already well understood.
			</para>

			<section id="intro.pa_licence.full">

				<title>Power*Architect Licence</title>

				<para>Copyright (c) 2008, SQL Power Group Inc.</para>

				<para>All rights reserved.</para>

				<para>
					Redistribution and use in source and binary forms,
					with or without modification, are permitted provided
					that the following conditions are met:
				</para>

				<itemizedlist>

					<listitem>
						<para>
							Redistributions of source code must retain
							the above copyright notice, this list of
							conditions and the following disclaimer.
						</para>
					</listitem>

					<listitem>
						<para>
							Redistributions in binary form must
							reproduce the above copyright notice, this
							list of conditions and the following
							disclaimer in the documentation and/or other
							materials provided with the distribution.
						</para>
					</listitem>

					<listitem>
						<para>
							Neither the name of SQL Power Group Inc. nor
							the names of its contributors may be used to
							endorse or promote products derived from
							this software without specific prior written
							permission.
						</para>
					</listitem>

				</itemizedlist>

				<para>
					THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS
					AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
					WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
					IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
					FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
					SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
					FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
					EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
					NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
					SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
					INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
					LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
					TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
					ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
					ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
				</para>

			</section>

		</section>

	</chapter>

	<chapter id="getting_started">

		<title>Getting Started</title>

		<para>
			To get started using Power*Architect, begin by reading
			<xref linkend="getting_started.user_interface" />
			. This section gives you a quick introduction to the main
			Power*Architect areas, the playpen and the database tree.
			You may then want to work through the hands-on
			<xref linkend="getting_started.example" />
			. This example shows you how to create a simple data model,
			set up a database connection, and forward engineer your
			model to any database you choose.
		</para>

		<para>
			Power*Architect contains many features, and you may choose
			to use some or all of these features depending on what you
			are trying to accomplish. Please see the following sections
			for an overview of typical activities you would perform with
			Power*Architect.
		</para>


		<itemizedlist>

			<listitem>
				<para>
					<xref linkend="getting_started.data_model" />
				</para>
			</listitem>

			<listitem>
				<para>
					<xref linkend="getting_started.analyze" />
				</para>
			</listitem>

			<listitem>
				<para>
					<xref linkend="getting_started.copy_data" />
				</para>
			</listitem>

			<listitem>
				<para>
					<xref linkend="getting_started.advanced" />
				</para>
			</listitem>

			<listitem>
				<para>
					<xref linkend="getting_started.preferences" />
				</para>
			</listitem>


		</itemizedlist>
		<section id="getting_started.data_model">

			<title>About Data Models</title>

			<para>
				As a general guideline, you would typically follow these
				steps to create and use a data model:
			</para>

			<orderedlist>

				<listitem>
					<para>
						Create a data model using the playpen. You can
						do this by creating a data model from scratch,
						reverse engineering an existing database, or by
						using a combination of these two methods.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref linkend="data_model" />
							</para>
						</listitem>

						<listitem>
							<para>
								<xref linkend="reverse_engineering" />
							</para>
						</listitem>

					</itemizedlist>


				</listitem>

				<listitem>
					<para>
						Forward engineer your data model to create the
						data structure in a new database. To use forward
						engineering, you must first set up a database
						type and connection for the target database.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref linkend="forward_engineer" />
							</para>
						</listitem>

						<listitem>
							<para>
								<xref linkend="setup_database" />
							</para>
						</listitem>

					</itemizedlist>


				</listitem>

				<listitem>
					<para>
						Use a Kettle job to copy data into your new
						database.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref linkend="copy_data.kettle_job" />
							</para>
						</listitem>

					</itemizedlist>

				</listitem>

			</orderedlist>

		</section>

		<section id="getting_started.analyze">

			<title>About Data Structure Analysis</title>

			<para>
				You can use Power*Architect's many data structure
				analysis features to view information about a data model
				or database. You can:
			</para>

			<itemizedlist>

				<listitem>
					<para>
						Compare two data models to view the differences
						and similarities. Generate and run a SQL script
						to update an older database to match a newer
						data model.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref linkend="analysis.compare_dm" />
							</para>
						</listitem>

					</itemizedlist>


				</listitem>

				<listitem>
					<para>
						View a profile of the data in a database table.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref linkend="analysis.profiling" />
							</para>
						</listitem>

					</itemizedlist>


				</listitem>

				<listitem>
					<para>
						Create a report listing the source tables used
						for the tables in your Power*Architect data
						model.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref
									linkend="analysis.visual_mapping_report" />
							</para>
						</listitem>

					</itemizedlist>

				</listitem>

				<listitem>
					<para>
						Export the source-to-target column mappings
						between a source database and your
						Power*Architect data model.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref linkend="analysis.etl_export_csv" />
							</para>
						</listitem>

					</itemizedlist>

				</listitem>

			</itemizedlist>

		</section>


		<section id="getting_started.copy_data">

			<title>Copying and Transforming Data</title>

			<para>
				Power*Architect provides two methods (one basic, one
				complex) for copying data between databases. You can:
			</para>

			<itemizedlist>

				<listitem>
					<para>
						Copy data across database platforms to create a
						verbatim copy of an existing database.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref
									linkend="copy_data.copy_table_data" />
							</para>
						</listitem>

					</itemizedlist>

				</listitem>

				<listitem>
					<para>
						Create multiple transformations based on a data
						model.
					</para>

					<para>For more information, see:</para>


					<itemizedlist>

						<listitem>
							<para>
								<xref linkend="copy_data.kettle_job" />
							</para>
						</listitem>

					</itemizedlist>

				</listitem>

			</itemizedlist>

		</section>

		<section id="getting_started.advanced">

			<title>About Advanced Features</title>

			<para>
				Power*Architect contains a tool, called SQLRunner, that
				allows you to work at the raw SQL command level. This
				feature should only be used by advanced users.
			</para>

			<para>For more information, see:</para>


			<itemizedlist>

				<listitem>
					<para>
						<xref linkend="SQLRunner" />
					</para>
				</listitem>

			</itemizedlist>

		</section>

		<section id="getting_started.preferences">

			<title>About System Preferences</title>

			<para>
				You can set project and user preferences for
				Power*Architect.
			</para>

			<para>For more information, see:</para>


			<itemizedlist>

				<listitem>
					<para>
						<xref linkend="system_settings" />
					</para>
				</listitem>

			</itemizedlist>

		</section>

		<section id="getting_started.user_interface">

			<title>
				Understanding the Power*Architect User Interface
			</title>

			<para>
				Each data model you create in Power*Architect is saved
				as a separate project. When you open a project, the data
				model information is shown in Power*Architect's two main
				areas: the database tree and the playpen.
			</para>

			<para>
				<inlinemediaobject>
					<imageobject>
						<imagedata fileref="doc/images/basicui.png"
							format="PNG" width="5.5in"/>
					</imageobject>
				</inlinemediaobject>
			</para>


			<section
				id="getting_started.user_interface.database_tree">

				<title>About the Database Tree</title>

				<para>
					The database tree contains a hierarchical view of
					your project. The hierarchy includes:
				</para>

				<itemizedlist>

					<listitem>
						<para>
							The objects in your data model (tables,
							columns, keys, indices, etc.).
						</para>
					</listitem>

					<listitem>
						<para>
							The database connections you've added to the
							project.
						</para>
					</listitem>

					<listitem>
						<para>
							Any objects you've obtained through reverse
							engineering an existing database. You can
							drag these objects into the playpen to add
							them to the data model you're building in
							Power*Architect. (Large objects may take
							some time to load in the playpen.)
						</para>
					</listitem>

				</itemizedlist>

				<para>
					You can expand the branches in the tree to view
					objects and can often right-click an object to
					perform actions. The following icons are used in the
					database tree to identify the object type.
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/Database16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Database
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/Catalog16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Catalogue
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/Schema16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Schema
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/Owner16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Owner
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/Table16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Table
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/Column16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Column
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/Index_key16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Primary Key
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/ExportedKey16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Exported Key
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/ImportedKey16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Imported Key
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/Index16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Index
				</para>

				<para>
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/Index_unique16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					Unique Index
				</para>

			</section>


			<section id="getting_started.user_interface.playpen">

				<title>About the Playpen</title>

				<para>
					The playpen is your main work area in
					Power*Architect, where you create and modify your
					data model. You can use the playpen to experiment
					and manipulate tables and relationships. Your
					changes are not saved until you decide to save them.
				</para>

				<para>
					Your data model can includes tables, columns,
					indices, and relationships. You can create these
					objects in Power*Architect or obtain them by reverse
					engineering an existing database. For more
					information on working in the playpen, see
					<xref linkend="data_model" />
					.
				</para>

			</section>

			<section
				id="getting_started.user_interface.os_differences">

				<title>
					Using Power*Architect on Different Operating Systems
				</title>

				<para>
					Power*Architect supports multiple operating systems,
					such as Windows, Macintosh and Linux.
					Power*Architect works the same on all operating
					systems, with a few minor exceptions:
				</para>

				<itemizedlist>

					<listitem>
						<para>
							On Windows and Linux, CTRL is used as the
							accelerator key. On Macintosh, CMD is the
							accelerator key.
						</para>
					</listitem>

					<listitem>
						<para>
							On Windows and Linux, the Power*Architect
							menu bar is shown below the Power*Architect
							title bar. On Macintosh, the menu bar is
							shown at the top of the Power*Architect
							window.
						</para>
					</listitem>

				</itemizedlist>

			</section>


		</section>




		<section id="getting_started.example">

			<title>Example - Creating a Data Model</title>

			<para>
				This section will show you how to set up a simple
				database "from scratch", just to get you started using
				the tools, without modifying any live data. If you
				follow the example literally, you will create a trivial
				"customer and orders database".
			</para>

			<para>
				Important: You must create the target database needed in
				this example. You can use standard vendor-specific
				database tools to create the database.
			</para>

			<section
				id="getting_started.example.setting_up_databases">

				<title>Setting Up Databases</title>

				<orderedlist>

					<listitem>

						<para>
							Setup Driver. Select File-&gt;User
							Preferences and select the JDBC Drivers tab.
							Select the database connection type you wish
							to use from the list on the left. If there
							is already a driver for the connection type
							you wish to use, click OK and go on to the
							next step. Otherwise, click the Add button,
							navigate to where you have the driver Jar
							file installed, and click OK.
						</para>

					</listitem>

					<listitem>

						<para>
							Create a Connection. In the Database Tree
							section of the main window, right click and
							choose Add Source Connection-&gt;New
							Connection. For this example you can use a
							name like SampleDB, for both the Connection
							Name and the Database name (these names do
							not have to be the same, but we&apos;ll keep
							them the same for simplicity). If you select
							the JDBC Driver before you type the database
							name, then as you type the Database name, it
							will be added to the DB URL, so you
							don&apos;t have to type it an extra time.
							Fill in all the fields and click OK.
						</para>

					</listitem>

				</orderedlist>

			</section>

			<section
				id="getting_started.example.designing_a_database">

				<title>Designing a Database</title>

				<para>
					You are now ready to design some tables. For this
					example, we will create the Customer and Orders
					table shown here.
				</para>

				<orderedlist>

					<listitem>

						<para>
							Click the New Table icon at the right side.
							The cursor will change to a crosshair. Move
							the cursor near the left of the Playpen
							area, and click. A "New Table" will appear.
						</para>

					</listitem>

					<listitem>

						<para>
							Double-click the title, and the Table
							Properties Dialog will appear. Rename this
							table to Customers.
						</para>

					</listitem>

					<listitem>

						<para>
							Click the Insert Column icon, and a "New
							Column" will appear. When the new column is
							created a property window will appear for
							it. Rename the column to customer_id and
							make it part of the primary key.
						</para>

					</listitem>

					<listitem>

						<para>
							Insert additional columns for Firstname,
							Lastname, Address, City, Province, Country
							Code
							<footnote>
								<para>
									There is an ISO standard, ISO-3166,
									which specifies a two-letter code
									(and a rarely-used three letter
									code) for every country of the
									world: us for the United States, ca
									for Canada, and so on. Some
									developers like to use these in the
									Country field of a database, as we
									are doing here.
								</para>
							</footnote>
							and Postal Code. The table should look
							something like the following:
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/SimpleExample1.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

					</listitem>

					<listitem>

						<para>
							Create a second table, and name it Orders.
						</para>

					</listitem>

					<listitem>

						<para>
							Create columns named order_id (in the
							primary key), Quantity, Total Amount, and
							customer_id. Your project should now look
							something like the following:
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/SimpleExample2.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>
					</listitem>

					<listitem>

						<para>
							We need a relationship between these tables.
							An order should have a foreign key that
							refers to the customer. Click the "New
							Non-Identifying Relationship" icon. Select
							the Customers table, then the Orders table,
							and a link will be drawn as shown. Click
							this link and the keys that take part in the
							relationship will be highlighted in red.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/SimpleExample3.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>
					</listitem>

				</orderedlist>

			</section>

			<section id="getting_started.example.forward_engineer">

				<title>Forward Engineer</title>

				<orderedlist>

					<listitem>

						<para>
							If you&apos;re happy with the database
							layout (you can always change it later),
							it&apos;s time to create the database. Click
							on the Forward Engineer button. You should
							see a window similar to the following:
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/SimpleExample4.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>
					</listitem>

					<listitem>
						<para>
							Set the "Create in" database to be the
							source connection we defined earlier. Set
							the database type to be the type that was
							set in the user preferences. Fill in the
							remaining fields based on the database type
							that was selected and press ok. You should
							see a window similar to:
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/SimpleExample5.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>
					</listitem>

					<listitem>

						<para>
							If this looks plausible, click Execute, and
							the tables and their relationship will be
							created. Congratulations! You have now
							created a simple database using the visual
							tools in Power*Architect.
						</para>

					</listitem>

				</orderedlist>

			</section>

			<section
				id="getting_started.example.comparing_data_models">

				<title>Comparing Data Models</title>

				<para>
					Suppose that after using this database, you realize
					that there should be a "shipping amount" field in
					the Order table (we never promised this would be
					completely realistic example).
				</para>

				<orderedlist>

					<listitem>

						<para>
							Select the Order table by clicking on its
							title.
						</para>

					</listitem>

					<listitem>

						<para>
							Click the Insert Column field and, as
							before, rename the New Column, this time to
							Shipping_Amount. Change its type to
							Decimal(10,2).
						</para>

					</listitem>

					<listitem>

						<para>
							Now we need to compare two different Data
							Models, the original database and the
							current project. Click the Compare DM icon.
							Set the "Older" to Physical Database
							SampleDB (you may need to change the Schema
							to Public). Set the "Newer" to "Current
							Project" (since it is now newer than the
							database you created in Step 6). Set the
							output format to SQL.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/SimpleExample6.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>
					</listitem>

					<listitem>

						<para>
							Click Start. You should see the SQL Preview
							window again, but this time with just an ADD
							for the column you just added:
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/example_10.png" format="PNG" width="4in" />
							</imageobject>
						</mediaobject>
					</listitem>

					<listitem>

						<para>
							Click Execute, and the new column will be
							added to your database table.
						</para>

					</listitem>

				</orderedlist>

				<para>
					When you exit the program, it will ask to save your
					project. Since you might want to alter this in
					future, to experiment with some of the other tools
					without damaging any live data, you may wish to save
					the Project file.
				</para>

				<para>
					The remainder of this document provides a more
					comprehensive explanation of the various functions
					that Power*Architect offers.
				</para>

			</section>

		</section>

	</chapter>

	<chapter id="data_model">

		<title>Creating a Data Model</title>

		<para>

			Use the Power*Architect playpen to create a data model
			diagram that includes tables, columns, indices, and
			relationships. Before you begin, be sure to read
			<xref linkend="getting_started" />
			, which explains how to use the playpen and the database
			tree.

		</para>

		<para>

			When you create a data model in Power*Architect, the model
			is saved in its own project. The project contains the data
			model diagram in the playpen and the database tree. You can
			have multiple projects (and therefore multiple data models)
			open in Power*Architect at once. Each project opens in a
			separate window.

		</para>

		<section id="data_model.tables">

			<title>Working with Tables</title>

			<section id="data_model.tables.new">

				<title>Creating New Tables</title>

				<para>

					To create a new table:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Click

							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/new_table16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							in the side toolbar. The cursor changes to a
							+.

						</para>

						<para>

							Note: To cancel creating a new table, press
							ESC.

						</para>

						<para>

							Alternate methods:

						</para>

						<itemizedlist>

							<listitem>
								<para>
									Right-click in the playpen, then
									click New Table.
								</para>
							</listitem>

							<listitem>
								<para>
									Place the cursor over the playpen,
									then press T.
								</para>
							</listitem>

						</itemizedlist>

					</listitem>

					<listitem>
						<para>
							Click in the playpen where you want to
							create the table. The Table Properties
							dialog box appears.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/table_props.png" format="PNG" width="4in" />
							</imageobject>
						</mediaobject>


					</listitem>

					<listitem>

						<para>

							Enter the following information:

						</para>

						<informaltable frame="all">

							<tgroup cols="2">

								<thead>

									<row>

										<entry>

											<para>

												In this field ...

											</para>

										</entry>

										<entry>

											<para>

												Do this ...

											</para>

										</entry>

									</row>

								</thead>

								<tbody>

									<row>

										<entry>

											<para>

												Table Name

											</para>

										</entry>

										<entry>

											<para>

												Enter a table name.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Primary Key Name

											</para>

										</entry>

										<entry>

											<para>

												You cannot enter a
												primary key name until
												you have added columns
												to the table and defined
												the primary key. The
												primary key name is used
												when you forward
												engineer the data model.

												For more information,
												see
												<xref
													linkend="data_model.columns.new" />
												.

											</para>

											<para>

												Note: Primary key names
												are not used when
												forward engineering to a
												MySQL database (MySQL
												does not support custom
												primary key names).

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Remarks

											</para>

										</entry>

										<entry>

											<para>

												Enter a description of
												the table. When you
												forward engineer the
												data model, the remarks
												will be included as
												comments in the
												database.

											</para>

										</entry>

									</row>

								</tbody>

							</tgroup>

						</informaltable>

					</listitem>

					<listitem>

						<para>

							Click OK.

						</para>

					</listitem>

				</orderedlist>

			</section>

			<section id="data_model.tables.modify">

				<title>Modifying Tables</title>

				<para>

					To modify a table:

				</para>

				<itemizedlist>

					<listitem>

						<para>

							Click a table in the playpen, then click

							<inlinemediaobject>

								<imageobject>

									<imagedata
										fileref="src/icons/edit_column16.png" format="PNG" />

								</imageobject>

							</inlinemediaobject>

							in the side toolbar.

						</para>

						<para>

							The Table Properties dialog box appears.

						</para>

						<mediaobject>

							<imageobject>

								<imagedata
									fileref="doc/images/Table_Properties.png" format="PNG"
									width="4in" />

							</imageobject>

						</mediaobject>

					</listitem>

				</itemizedlist>

				<para>Alternate methods:</para>

				<itemizedlist>

					<listitem>

						<para>

							Right-click a table in the playpen, then
							click Table Properties.

						</para>

					</listitem>

					<listitem>

						<para>

							Click a table in the playpen, then press
							Enter.

						</para>

					</listitem>

					<listitem>

						<para>

							Modify the table properties as required. For
							a description of the properties, see
							<xref linkend="data_model.tables.new" />
							.

						</para>

					</listitem>

					<listitem>

						<para>

							Click OK.

						</para>

					</listitem>

				</itemizedlist>

			</section>

		</section>

		<section id="data_model.columns">

			<title>Working with Columns</title>

			<section id="data_model.columns.new">

				<title>Creating New Columns</title>

				<para>

					When you create a column, you can choose where the
					new column is inserted in the table.

				</para>

				<para>

					To add a column to a table:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Click a table in the playpen. The location
							you click determines where the column will
							be inserted in the table.

						</para>

						<itemizedlist>

							<listitem>

								<para>

									If you click the table name or if
									the table does not contain any
									columns, the new column is added to
									the end of the column list.

								</para>

							</listitem>

							<listitem>

								<para>

									If you click an existing column, the
									new column is added above the
									selected column.

								</para>

							</listitem>

							<listitem>

								<para>

									If you click a column in the primary
									key, the new column is added within
									the primary key.

								</para>

							</listitem>

						</itemizedlist>

					</listitem>

					<listitem>

						<para>

							Click

							<inlinemediaobject>

								<imageobject>

									<imagedata
										fileref="src/icons/new_column16.png" format="PNG" />

								</imageobject>

							</inlinemediaobject>

							in the side toolbar. The Column Properties
							dialog box appears.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/column_props.png" format="PNG" width="4in" />
							</imageobject>
						</mediaobject>


						<para>

							Alternate methods:

						</para>

						<itemizedlist>

							<listitem>

								<para>

									Right-click a table, then click New
									Column.

								</para>

							</listitem>

							<listitem>

								<para>

									Click a table, then press C.

								</para>

							</listitem>

						</itemizedlist>

					</listitem>

					<listitem>

						<para>

							You can enter the following information:

						</para>

						<informaltable frame="all">

							<tgroup cols="2">

								<thead>

									<row>

										<entry>

											<para>

												In this field ...

											</para>

										</entry>

										<entry>

											<para>

												Do this ...

											</para>

										</entry>

									</row>

								</thead>

								<tbody>

									<row>

										<entry>

											<para>

												Name

											</para>

										</entry>

										<entry>

											<para>

												Enter the column name.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Type

											</para>

										</entry>

										<entry>

											<para>

												Select the type of data
												the column holds.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Precision

											</para>

										</entry>

										<entry>

											<para>

												Set the data precision.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Scale

											</para>

										</entry>

										<entry>

											<para>

												Set the scale.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												In Primary Key

											</para>

										</entry>

										<entry>

											<para>

												Select the check box if
												the column is in the
												primary key.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Allows Nulls

											</para>

										</entry>

										<entry>

											<para>

												Select the check box if
												the column handles null
												information.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Auto Increment

											</para>

										</entry>

										<entry>

											<para>

												Select the check box if
												auto increment is
												allowed.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Sequence Name

											</para>

										</entry>

										<entry>

											<para>

												When Power*Architect
												creates a table in a
												database platform that
												uses sequences (such as
												Oracle or PostgreSQL),
												Power*Architect creates
												a sequence for each
												auto-increment column in
												the table. Enter the
												name to use for the
												sequence.

											</para>

											<para>

												Note: This option is
												only available if you
												have selected the Auto
												Increment option for the
												column.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Remarks

											</para>

										</entry>

										<entry>

											<para>

												Enter comments about the
												column. When you forward
												engineer the data model,
												the remarks will be
												included as comments in
												the database.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Default Value

											</para>

										</entry>

										<entry>

											<para>

												Enter a default value
												for the column.

											</para>

											<para>

												Note: Power*Architect
												does not validate the
												default value, so ensure
												you use a valid format.

												The following examples
												show valid formats for
												different data types:

											</para>

											<itemizedlist>

												<listitem>

													<para>
														'word' for a
														String
													</para>

												</listitem>

												<listitem>

													<para>
														{d '2007-12-10'}
														for a Date
													</para>

												</listitem>

												<listitem>

													<para>
														{t '5:38:00'}
														for a Time
													</para>

												</listitem>

												<listitem>

													<para>
														{ts '2007-12-10
														5:38:00'} for a
														Timestamp
													</para>

												</listitem>

											</itemizedlist>

										</entry>

									</row>

								</tbody>

							</tgroup>

						</informaltable>

					</listitem>

					<listitem>

						<para>

							Click OK.

						</para>

					</listitem>

				</orderedlist>

			</section>

			<section id="data_model.columns.modify">

				<title>Modifying Columns</title>

				<para>

					To modify a column:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Click a column, then click

							<inlinemediaobject>

								<imageobject>

									<imagedata
										fileref="src/icons/edit_column16.png" format="PNG" />

								</imageobject>

							</inlinemediaobject>

							in the side toolbar.

						</para>

						<para>

							Alternate methods:

						</para>

						<itemizedlist>

							<listitem>

								<para>

									Right-click a column, then click
									Column Properties.

								</para>

							</listitem>

							<listitem>

								<para>

									Click a column, then press ENTER.

								</para>

							</listitem>

						</itemizedlist>

						<para>

							The Column Properties dialog box appears.

						</para>

						<mediaobject>

							<imageobject>

								<imagedata
									fileref="doc/images/Column_properties.png" format="PNG"
									width="4in" />

							</imageobject>

						</mediaobject>

						<para>

							If you added this column to your data model
							using reverse engineering, the source
							database and table from which the column
							originated are shown at the top of the
							Column Properties dialog box.

						</para>

					</listitem>

					<listitem>

						<para>

							Modify the column properties as required.
							For a description of the properties, see
							<xref linkend="data_model.columns.new" />
							.

						</para>

					</listitem>

					<listitem>

						<para>

							Click OK.

						</para>

					</listitem>

				</orderedlist>

			</section>

			<section id="data_model.columns.move">

				<title>Moving Columns</title>

				<para>

					You can move a column from one table to another or
					rearrange columns within a table.

				</para>

				<itemizedlist>

					<listitem>

						<para>

							To move a column, click the column and drag
							it to a new location.

						</para>

					</listitem>

					<listitem>

						<para>

							To move multiple columns, use CTRL+click to
							select the columns, then drag them to a new
							location.

						</para>

					</listitem>

				</itemizedlist>

				<para>

					Note: You can also add or remove columns from the
					primary key. For more information, see
					<xref linkend="data_model.primary_keys" />
					.

				</para>

			</section>

		</section>

		<section id="data_model.primary_keys">

			<title>Working with Primary Keys</title>

			<para>

				After adding one or more columns to a table, you can
				define the column(s) used for the primary key.

			</para>

			<para>

				To add a primary key:

			</para>

			<orderedlist>

				<listitem>

					<para>

						Select one or more columns.

					</para>

				</listitem>

				<listitem>

					<para>

						Drag the column(s) to the primary key area in
						the table.

					</para>

				</listitem>

			</orderedlist>

			<mediaobject>
				<imageobject>
					<imagedata fileref="doc/images/pk_add.png"
						format="PNG" width="4in" />
				</imageobject>
			</mediaobject>

			<para>

				To remove a primary key:

			</para>

			<orderedlist>

				<listitem>

					<para>

						Select the column(s) in the primary key area.

					</para>

				</listitem>

				<listitem>

					<para>

						Drag the column(s) from the primary key area to
						the table's column list.

					</para>

				</listitem>

			</orderedlist>

			<para>

				Note: You can change the primary key name for the table.
				For more information, see
				<xref linkend="data_model.tables.modify" />
				.

			</para>

		</section>

		<section id="data_model.relationships">

			<title>Working with Relationships</title>

			<section id="data_model.relationships.about">

				<title>
					About Identifying and Non-Identifying Relationships
				</title>

				<para>

					You can create relationships between tables. For
					example, a typical one-to-many relationship might
					describe how invoices and invoice line items relate
					to each other. The relationship might indicate that
					the invoice_line table is a child of the invoice
					table, and every row in the invoice_line table
					relates to exactly one row in the invoice table.

				</para>

				<para>

					You can create identifying and non-identifying
					relationships:

				</para>

				<itemizedlist>

					<listitem>

						<para>

							In an identifying relationship, the child
							table cannot be uniquely identified without
							the parent.

						</para>

					</listitem>

					<listitem>

						<para>

							In a non-identifying relationship, the child
							can be identified independently of the
							parent.

						</para>

					</listitem>

				</itemizedlist>

				<para>

					You could choose to create the invoice and invoice
					line relationship from the previous example as
					either an identifying or non-identifying
					relationship.

				</para>

				<itemizedlist>

					<listitem>

						<para>

							If you create an identifying relationship,
							an invoice line cannot be uniquely
							identified without also knowing the invoice
							number it belongs to. For example, assume
							that invoice line numbers always start at 0
							or 1 within each invoice. The same line
							numbers will appear in different invoices -
							each invoice will have a line 0, line 1,
							line 2, etc.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/exp_id_relationship.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>


					</listitem>

					<listitem>

						<para>

							If you create a non-identifying
							relationship, an invoice can be uniquely
							identified without knowing the invoice
							number it belongs to. For example, assume
							each invoice line has its own unique
							identifier (invoice_line_id). In this
							example, invoice_line_id is referred to as a
							"surrogate key," because it's just a made-up
							number which has no special meaning in terms
							of the invoice line.

						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/exp_nonid_relationship.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

						<para>

							For this relationship, you would also want
							to create a unique index on the combination
							of (invoice_number, line_number) to
							guarantee there are no two line items with
							the same line number on the same invoice. In
							the identifying relationship example, the
							primary key enforces this rule.

						</para>

					</listitem>

				</itemizedlist>

			</section>

			<section id="data_model.relationships.create">

				<title>Creating Relationships</title>

				<para>

					To create a new relationship:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Do one of the following:

						</para>

						<itemizedlist>

							<listitem>

								<para>

									To define an identifying
									relationship, click

									<inlinemediaobject>
										<imageobject>
											<imagedata
												fileref="src/icons/new_id_relationship16.png" format="PNG" />
										</imageobject>
									</inlinemediaobject>

									in the side toolbar, or press R. The
									cursor changes to a +.

								</para>

							</listitem>

							<listitem>

								<para>

									To define a non-identifying
									relationship, click

									<inlinemediaobject>
										<imageobject>
											<imagedata
												fileref="src/icons/new_nonid_relationship16.png"
												format="PNG" />
										</imageobject>
									</inlinemediaobject>

									in the side toolbar, or press
									SHIFT+R. The cursor changes to a +.

								</para>

							</listitem>

						</itemizedlist>

						<para>

							Note: To cancel creating a relationship,
							press ESC or click a blank area in the
							playpen.

						</para>

					</listitem>

					<listitem>

						<para>

							Click the parent table, then click the child
							table. A relationship is created between the
							two tables and is shown as a line.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/exp_nonid_relationship.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>


						<para>
							The mapping between the tables is based on
							the parent table's primary key. For each
							column in the primary key of the parent
							table:
						</para>

						<itemizedlist>

							<listitem>

								<para>

									If the child table contains a column
									with the same name and this is the
									first relationship between the two
									tables, the relationship is mapped
									to the existing column in the child
									table.

								</para>

								<mediaobject>

									<imageobject>

										<imagedata
											fileref="doc/images/Hijacked_Column_Relation.png"
											format="PNG" width="4in" />

									</imageobject>

								</mediaobject>

							</listitem>

							<listitem>

								<para>

									If the child table does not contain
									a column with the same name, or the
									child table contains a column that
									has the same name but the column has
									a different data type, or a
									relationship already exists between
									the tables, a new column is created
									in the child table. The relationship
									is mapped to the new column.

								</para>

								<mediaobject>

									<imageobject>

										<imagedata
											fileref="doc/images/New_Column_Relation.png" format="PNG"
											width="4in" />

									</imageobject>

								</mediaobject>

							</listitem>

						</itemizedlist>


					</listitem>

					<listitem>

						<para>

							To view the columns that are mapped by the
							relationship, click the relationship link.
							The mapped columns are shown in red.

						</para>

					</listitem>


				</orderedlist>

				<para>

					You can now define the relationship properties, view
					the individual column mappings or change the mapping
					of the child table to the parent table. For more
					information, see
					<xref linkend="data_model.relationships.modify" />
					.

				</para>

				<para>

					Note: You can automatically straighten the
					relationship lines between tables. For more
					information, see
					<xref
						linkend="data_model.playpen_objects.straighten_lines" />
					.

				</para>

			</section>

			<section id="data_model.relationships.modify">

				<title>Modifying a Relationship</title>

				<para>

					To modify a relationship:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Click a relationship link in the playpen,
							then click

							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/edit_relationship16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							in the side toolbar. The Relationship
							Properties dialog box appears.

						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/relationship_properties.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

						<para>

							Alternate method:

						</para>

						<itemizedlist>

							<listitem>

								<para>

									Right-click the relationship link,
									then click Relationship Properties.

								</para>

							</listitem>

						</itemizedlist>

					</listitem>

					<listitem>

						<para>

							You can enter the following information on
							the Relationship tab:

						</para>

						<informaltable frame="all">

							<tgroup cols="2">

								<thead>

									<row>

										<entry>

											<para>

												In this field ...

											</para>

										</entry>

										<entry>

											<para>

												Do this ...

											</para>

										</entry>

									</row>

								</thead>

								<tbody>

									<row>

										<entry>

											<para>

												Relationship Name

											</para>

										</entry>

										<entry>

											<para>

												Enter a name for the
												relationship. When you
												forward engineer the
												data model, the
												relationships are
												created as foreign key
												constraints in the
												target database. These
												constraints are named
												based on the
												relationship name. You
												can also view a
												relationship's name in
												the playpen when you
												hover over the
												relationship line.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Relationship Type

											</para>

										</entry>

										<entry>

											<para>

												Select the type of
												relationship
												(identifying or
												non-identifying).

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Cardinality

											</para>

										</entry>

										<entry>

											<para>

												Select the end
												cardinality for the
												primary and foreign
												keys.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Deferrability

											</para>

										</entry>

										<entry>

											<para>

												Select the deferrability
												options.

											</para>

											<itemizedlist>

												<listitem>

													<para>

														Not Deferrable -
														Foreign key
														constraints are
														checked
														immediately at
														the time an
														INSERT, UPDATE,
														or DELETE
														statement is
														issued.

													</para>

												</listitem>

												<listitem>

													<para>

														Deferrable,
														Initially
														Deferred - If
														the database
														transaction
														doesn't specify
														whether to defer
														constraint
														checks, the
														foreign key
														constraints will
														be deferred,
														meaning that
														they are not
														checked until
														the INSERT,
														UPDATE, or
														DELETE
														transaction is
														committed.

													</para>

												</listitem>

												<listitem>

													<para>

														Deferrable,
														Initially
														Immediate - If
														the database
														transaction
														doesn't specify
														whether to defer
														constraint
														checks, foreign
														key constraints
														are checked
														immediately at
														the time an
														INSERT, UPDATE,
														or DELETE
														statement is
														issued.

													</para>

												</listitem>

											</itemizedlist>

											<para>

												Important: Before
												selecting an option,
												read the following
												description to ensure
												you fully understand the
												effect of each option.

											</para>

											<para>

												When manipulating data
												in a database (using
												INSERT, UPDATE, and
												DELETE statements), the
												foreign key constraints
												created by
												Power*Architect are used
												to ensure data integrity
												between the two tables.
												The deferrability
												options control when
												these constraints are
												enforced.

											</para>

											<para>

												Within the context of a
												transaction, deferred
												constraints are not
												checked until the
												transaction is
												committed, while
												immediate constraints
												are checked at the time
												the INSERT, UPDATE, or
												DELETE statement is
												issued (in the middle of
												the transaction). This
												means that if you are
												using immediate
												constraints, you must be
												careful about the order
												in which data is
												changed. With deferred
												constraint checking, you
												can make changes in any
												order as long as all
												constraints have been
												satisfied by the time
												you commit.

											</para>

											<para>

												For databases that
												support deferred and
												immediate constraint
												checking, each
												transaction can specify
												whether to defer
												constraint checks or
												carry them out
												immediately. If a
												transaction does not
												specify this option,
												each deferrable foreign
												key constraint is
												evaluated according to
												its "initially
												immediate" or "initially
												deferred" option. On the
												other hand, constraints
												marked as "not
												deferrable" will always
												be checked immediately
												regardless of the
												transaction's setting.

											</para>

											<para>

												Important Notes:

											</para>

											<itemizedlist>

												<listitem>
													<para>
														For data
														manipulation
														done outside the
														context of a
														database
														transaction,
														there is no
														difference
														between
														immediate
														constraint
														checking and
														deferred
														constraint
														checking.
													</para>
												</listitem>

												<listitem>
													<para>
														Not all database
														platforms
														support this
														option. Some
														only support
														deferred
														constraint
														checking, while
														others only
														support
														immediate. When
														Power*Architect
														forward
														engineers to
														these types of
														systems, the DDL
														script includes
														comments warning
														about this lack
														of support.
													</para>
												</listitem>

											</itemizedlist>


										</entry>

									</row>

								</tbody>

							</tgroup>

						</informaltable>

					</listitem>

					<listitem>

						<para>

							On the Mappings tab, you can change the
							mapping to the child table. Click and drag
							the relationship link to the column in the
							child table that is mapped to the parent
							table.

						</para>

						<para>

							Note: If a column in the child table is
							shown in red, this means the column is a
							foreign key in another parent table. This
							alerts you that the column is already "in
							use", since you wouldn't normally use the
							same column as a foreign key in multiple
							tables.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/relationship_props_mappings.png"
									format="PNG" width="4in" />
							</imageobject>
						</mediaobject>


					</listitem>

					<listitem>

						<para>

							Click OK.

						</para>

					</listitem>

				</orderedlist>

			</section>

		</section>

		<section id="data_model.indices">

			<title>Working with Indices</title>

			<section id="data_model.indices.create">

				<title>Creating an Index</title>

				<para>

					You can create multiple indices for a table.

				</para>

				<para>

					To create an index:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Select a table in the playpen, then click

							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/new_index16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							in the side toolbar. The Index Properties
							dialog box appears.

						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/index_props.png" format="PNG" width="4in" />
							</imageobject>
						</mediaobject>


						<para>

							Alternate methods:

						</para>

						<itemizedlist>

							<listitem>

								<para>

									Right-click a table in the playpen,
									then click New Index.

								</para>

							</listitem>

							<listitem>

								<para>

									Right-click a table in the database
									tree, then click New Index.

								</para>

							</listitem>

						</itemizedlist>

					</listitem>

					<listitem>

						<para>

							You can enter the following information:

						</para>

						<informaltable frame="all">

							<tgroup cols="2">

								<thead>

									<row>

										<entry>

											<para>

												In this field ...

											</para>

										</entry>

										<entry>

											<para>

												Do this ...

											</para>

										</entry>

									</row>

								</thead>

								<tbody>

									<row>

										<entry>

											<para>

												Index Name

											</para>

										</entry>

										<entry>

											<para>

												Enter a name for the
												index.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Unique

											</para>

										</entry>

										<entry>

											<para>

												Select the check box if
												the index will act as a
												constraint which
												guarantees the values in
												this index's columns are
												unique across all rows
												in the table. This is
												similar to the primary
												key constraint, with two
												exceptions: A unique
												index may contain
												nullable columns, and a
												table can have any
												number of unique
												indices.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Primary Key

											</para>

										</entry>

										<entry>

											<para>

												Select the check box to
												set this index as the
												table's primary key. The
												primary key is a special
												type of index which
												enforces uniqueness: The
												values in the primary
												key's columns are unique
												across all rows in the
												table. A table can only
												have one primary key,
												and none of the columns
												in the primary key may
												be nullable. It is
												considered good practice
												to have a primary key on
												every table in the data
												model.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Clustered

											</para>

										</entry>

										<entry>

											<para>

												Select the check box to
												create a clustered
												index. Many databases
												support the notion of a
												clustered index. The
												exact meaning varies by
												platform, but marking an
												index as clustered often
												affects the physical
												ordering of the rows
												within the table (which
												may increase or decrease
												performance based on the
												types of SQL queries
												being run). Most
												database platforms allow
												only one clustered index
												per table.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												Index Type

											</para>

										</entry>

										<entry>

											<para>

												Select the index type.
												The list includes all
												known index types for
												all database types
												configured in your user
												preferences. If you are
												building a
												cross-platform data
												model, it's best to
												leave this setting at
												"platform default."
												However, if you are
												tuning your data model
												for a specific target
												database, you may choose
												the desired index type
												for your platform.

											</para>

										</entry>

									</row>

									<row>

										<entry>

											<para>

												List of columns

											</para>

										</entry>

										<entry>

											<para>

												Select the In Index
												check box beside each
												column you want to
												include in the index.
												For each column, select
												the sort order
												(Ascending, Descending,
												or Unspecified).

											</para>

											<para>

												Use the arrows at the
												bottom of the dialog box
												to set the order of the
												columns within the
												index. Columns higher in
												the list will come first
												in the index's column
												list.

											</para>

											<para>

												Notes:

											</para>

											<itemizedlist>

												<listitem>

													<para>

														If the table
														contains columns
														in the primary
														key, a separate
														index will
														always be
														created for the
														primary key
														column(s), even
														if you don't
														select any
														columns.

													</para>

												</listitem>

												<listitem>

													<para>

														On some database
														platforms, the
														column order in
														the index and
														the column order
														in the SQL WHERE
														clause must
														match in order
														for the query
														optimizer to use
														the index.

													</para>

												</listitem>

												<listitem>

													<para>

														On most database
														platforms, a
														WHERE clause
														that references
														a subset of a
														multi-column
														index can
														usually be used
														when those
														columns in the
														WHERE clause are
														the leading
														columns in the
														index.

													</para>

													<para>

														Example: Table A
														has columns B,
														C, D, E, F.
														Table A has an
														index on (F, E,
														D).

													</para>

													<para>

														SELECT * FROM a
														WHERE f='x'; -
														index can be
														used on most
														platforms

													</para>

													<para>

														SELECT * FROM a
														WHERE e='x'; -
														index can not be
														used on most
														platforms

													</para>

													<para>

														SELECT * FROM a
														WHERE f='x' AND
														e='x' AND d='x';
														- index can be
														used

													</para>

													<para>

														SELECT * FROM a
														WHERE d='x' AND
														e='x' AND f='x'
														; - index can be
														used on some
														platforms, but
														index order and
														WHERE clause
														order are
														different so
														some platforms
														will not use the
														index

													</para>

												</listitem>

											</itemizedlist>

										</entry>

									</row>

								</tbody>

							</tgroup>

						</informaltable>

					</listitem>

					<listitem>

						<para>

							Click OK.

						</para>

					</listitem>

				</orderedlist>

			</section>

			<section id="data_model.indices.modify">

				<title>Modifying an Index</title>

				<para>

					To modify an index:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Right-click a table in the playpen, then
							click Index Properties. If there are
							multiple indices for the table, select the
							index you want to modify.

						</para>

						<para>

							Alternate method:

						</para>

						<itemizedlist>

							<listitem>

								<para>

									Right-click the index in the
									database tree, then click Index
									Properties.

								</para>

							</listitem>

						</itemizedlist>

						<para>

							The Index Properties dialog box appears.

						</para>

					</listitem>

					<listitem>

						<para>

							Modify the index properties as required. For
							a description of the properties, see
							<xref linkend="data_model.indices.create" />
							.

						</para>

					</listitem>

					<listitem>

						<para>

							Click OK.

						</para>

					</listitem>

				</orderedlist>

			</section>

			<section id="data_model.indices.delete">

				<title>Deleting an Index</title>

				<para>

					Right-click the index in the database tree, then
					click Delete Selected.

				</para>

			</section>

		</section>

		<section id="data_model.playpen_objects">

			<title>Working with Diagram Objects in the Playpen</title>

			<section id="data_model.playpen_objects.undo_redo">

				<title>Using Undo and Redo</title>

				<para>

					Power*Architect keeps track of your actions and
					allows you to undo them at a later time. The 100
					most recent actions you have performed are
					remembered and can be undone in sequence.
				</para>

				<para>

					If you undo an action accidentally, you can choose
					to redo the action. However, be careful: If you make
					a new change after undoing one or more actions, your
					redo history is lost.

				</para>

				<para>

					To undo an action, click

					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/undo_arrow16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					in the top toolbar. You can also select Edit » Undo
					or press CTRL+Z.

				</para>

				<para>

					To redo an action, click
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/redo_arrow16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					in the top toolbar. You can also select Edit » Redo
					or press CTRL+Y.

				</para>

			</section>

			<section id="data_model.playpen_objects.select">

				<title>Selecting Multiple Objects in the Playpen</title>

				<para>

					To select multiple objects (tables, columns, or
					relationships) in the playpen, do any of the
					following:

				</para>

				<itemizedlist>

					<listitem>

						<para>

							Press CTRL or SHIFT and click the objects.

						</para>

					</listitem>

					<listitem>

						<para>

							Click a blank area in the playpen, then drag
							to form a grey box around the objects.

						</para>

					</listitem>

					<listitem>

						<para>

							Press CTRL+A to select all the objects in
							the playpen.

						</para>

					</listitem>

				</itemizedlist>

				<para>

					To cancel the selection, click a blank area in the
					playpen.

				</para>

			</section>

			<section id="data_model.playpen_objects.delete">

				<title>Deleting Diagram Objects in the Playpen</title>

				<para>

					To delete a diagram object (table, column, or
					relationship) in the playpen, select one or more
					objects in the playpen, then click

					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/delete16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>


					in the side toolbar.

				</para>

				<para>

					Alternate methods:

				</para>

				<itemizedlist>

					<listitem>

						<para>

							Right-click an object, then click Delete
							Selected.

						</para>

					</listitem>

					<listitem>

						<para>

							Select one or more objects, then press
							DELETE.

						</para>

					</listitem>

				</itemizedlist>

			</section>

			<section id="data_model.playpen_objects.move">

				<title>
					Rearranging Diagram Objects in the Playpen
				</title>

				<para>

					You can change the layout of your data model diagram
					by rearranging the tables in the playpen.

					You can also change where relationship links
					visually connect to a table in the diagram. (To
					change the columns mapped by a relationship link,
					you must modify the relationship. For more
					information, see
					<xref linkend="data_model.relationships.modify" />
					.)

				</para>

				<para>

					Notes:

				</para>

				<itemizedlist>

					<listitem>

						<para>

							You can rearrange columns within a table or
							move columns from one table to another. For
							more information, see
							<xref linkend="data_model.columns.move" />
							.

						</para>

					</listitem>

					<listitem>

						<para>

							You can automatically arrange the tables in
							the playpen. For more information, see
							<xref
								linkend="data_model.playpen_objects.auto_layout" />
							.
						</para>

					</listitem>

					<listitem>

						<para>

							You can automatically straighten the
							relationship lines between tables. For more
							information, see
							<xref
								linkend="data_model.playpen_objects.straighten_lines" />
							.

						</para>

					</listitem>

				</itemizedlist>

				<para>

					To move a table, select one or more tables, then
					drag the table(s) to a new location in the playpen.

				</para>

				<para>

					To move the placement of a relationship link, select
					a relationship link, then drag either end of the
					link to a new location on the parent or child table.

				</para>

			</section>

			<section id="data_model.playpen_objects.auto_layout">

				<title>
					Automatically Arranging Tables in the Playpen
				</title>

				<para>

					You can automatically arrange tables in the playpen.
					Automatic layout works best when you have a large or
					medium-sized collection of tables, and may not work
					as well with a small number of tables.

				</para>

				<para>

					To automatically arrange tables, select several
					tables in the playpen, then click

					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/auto_layout16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>

					in the top toolbar.

				</para>

				<para>

					Note: If you don't select any tables or select only
					one table, all of the tables will be arranged.

				</para>

			</section>

			<section id="data_model.playpen_objects.straighten_lines">

				<title>
					Straightening Diagram Lines in the Playpen
				</title>

				<para>

					You can automatically create straight lines for the
					relationship links in your data model diagram.

					All relationship links will be changed to horizontal
					or vertical straight lines, as long as the tables
					connected by the link are aligned horizontally or
					vertically.

					If the tables are not aligned, the relationship link
					will not be changed.

				</para>

				<para>

					To straighten the relationship lines, right-click a
					blank area in the playpen, then click Straighten
					Lines.

				</para>

			</section>

			<section id="data_model.playpen_objects.zoom">

				<title>Using the Playpen Zoom Options</title>

				<para>

					You can use the zoom options on the side toolbar to
					control the magnification level in the playpen. The
					four zoom buttons, in order from top to bottom, are:

				</para>

				<itemizedlist>

					<listitem>

						<para>

							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/zoom_in16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							Zoom in

						</para>

					</listitem>

					<listitem>

						<para>

							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/zoom_out16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							Zoom out

						</para>

					</listitem>

					<listitem>

						<para>

							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/zoom_reset16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							Reset the zoom to the default level

						</para>

					</listitem>

					<listitem>

						<para>

							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/zoom_fit16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							Zoom to fit

						</para>

					</listitem>

				</itemizedlist>

				<para>

					To use the zoom options on specific objects in the
					playpen, select the objects before clicking a zoom
					button. If you don't select any objects in the
					playpen, the zoom options affect the entire diagram.

				</para>

			</section>

			<section id="data_model.playpen_objects.find">

				<title>Finding and Replacing Playpen Objects</title>

				<para>

					You can search for objects in the playpen. You can
					then quickly rename the items or select them in the
					playpen.

				</para>

				<orderedlist>

					<listitem>

						<para>

							Select Edit » Find/Replace, or press CTRL+F.
							The Find dialog box appears.

						</para>

						<mediaobject>

							<imageobject>

								<imagedata
									fileref="doc/images/find_and_replace.png" format="PNG"
									width="4in" />

							</imageobject>

						</mediaobject>

					</listitem>

					<listitem>

						<para>

							Enter your search criteria, then click
							Search. The Search Results dialog box
							appears with your results.

						</para>

						<mediaobject>

							<imageobject>

								<imagedata fileref="doc/images/find.png"
									format="PNG" width="4in" />

							</imageobject>

						</mediaobject>

					</listitem>

					<listitem>

						<para>

							To rename an object, select the object and
							click Rename Selected. You can also select
							multiple objects if you want to rename all
							the objects using the same name.

						</para>

					</listitem>

					<listitem>

						<para>

							To select an object in the playpen, select
							the object and click Show in Playpen.

						</para>

					</listitem>

				</orderedlist>

			</section>

			<section id="data_model.playpen_objects.print">

				<title>
					Printing or Exporting a Data Model Diagram
				</title>

				<para>

					To print the data model diagram currently in the
					playpen, select File » Print.

				</para>

				<para>

					To export the data model diagram currently in the
					playpen:

				</para>

				<orderedlist>

					<listitem>

						<para>

							Select File » Export Playpen to PDF. The
							Save dialog box appears.

						</para>

					</listitem>

					<listitem>

						<para>

							Select the location and filename for the
							PDF, then click Save.

						</para>

					</listitem>

					<listitem>

						<para>

							To hide the Creating PDF dialog box, click
							Run in Background.

						</para>

					</listitem>

				</orderedlist>

			</section>

		</section>

	</chapter>

	<chapter id="setup_database">

		<title>Setting up Database Support</title>

		<para>
			There are many features within Power*Architect that involve
			connecting to a database, such as reverse and forward
			engineering. Power*Architect allows you to use any JDBC- or
			ODBC-accessible source database. For more information on
			supported databases, see
			<xref linkend="setup_database.supported_databases" />
			.
		</para>

		<para>
			Connecting to a database with Power*Architect involves the
			following steps:
		</para>

		<orderedlist>

			<listitem>
				<para>
					Define general settings and drivers for the database
					platform you plan to connect to (such as SQL Server
					or Oracle). For more information, see
					<xref linkend="setup_database.database_types" />
					.
				</para>
			</listitem>

			<listitem>
				<para>
					Create a connection to a specific database server.
					This connection uses the general settings and
					drivers you have configured for the database
					platform. For more information, see
					<xref linkend="setup_database.connections" />
					.
				</para>
			</listitem>

		</orderedlist>

		<section id="setup_database.supported_databases">

			<title>Supported Database</title>

			<para>
				Power*Architect provides full or partial support for the
				following database platforms.
			</para>

			<informaltable frame="all" id="supported_db_table">

				<tgroup cols="2">

					<thead>

						<row>
							<entry>
								<para>Database</para>
							</entry>
							<entry>
								<para>Support Notes</para>
							</entry>
						</row>

					</thead>

					<tbody>

						<row>
							<entry>
								<para>Oracle</para>
							</entry>
							<entry>
								<para>Fully supported.</para>
							</entry>
						</row>

						<row>
							<entry>
								<para>SQL Server</para>
							</entry>
							<entry>
								<para>Fully supported.</para>
							</entry>
						</row>

						<row>
							<entry>
								<para>PostgreSQL</para>
							</entry>
							<entry>
								<para>Fully supported.</para>
							</entry>
						</row>

						<row>
							<entry>
								<para>MySQL</para>
							</entry>
							<entry>
								<para>Fully supported.</para>
							</entry>
						</row>

						<row>
							<entry>
								<para>IBM DB2</para>
							</entry>
							<entry>
								<para>
									Partial support; needs more testing.
								</para>
							</entry>
						</row>

						<row>
							<entry>
								<para>HSQLDB</para>
							</entry>
							<entry>
								<para>Works; used in samples.</para>
							</entry>
						</row>

						<row>
							<entry>
								<para>Derby</para>
							</entry>
							<entry>
								<para>
									Preliminary support exists. Reverse
									engineering databases in Derby
									10.3.2 or later is possible.
									Derby-specific forward engineering
									is not yet available; however, you
									can try using the forward
									engineering support for another
									platform such as MySQL or HSQLDB.
									Please post to our web support forum
									if you are interested in forward
									engineering your data models to
									Derby.
								</para>
							</entry>
						</row>

					</tbody>

				</tgroup>

			</informaltable>

		</section>

		<section id="setup_database.database_types">

			<title>Setting up Database Types</title>

			<para>
				You must define general settings for the database
				platforms you plan to work with (such as SQL Server,
				MySQL, Oracle, DB2, etc.). These settings will be used
				by Power*Architect when you set up a connection to a
				specific database server.
			</para>

			<para>
				Note: Remember, at this point you are configuring
				general settings only and are not connecting to a
				specific database. For more information on connecting to
				a database, see
				<xref linkend="setup_database.connections" />
				.
			</para>

			<itemizedlist>

				<listitem>
					<para>
						General settings for several database platforms
						are already pre-configured in Power*Architect.
						If you plan to work with one of these database
						platforms, all you need to do is define the
						location of the JDBC driver. For more
						information, see
						<xref
							linkend="setup_database.database_types.jdbc_driver" />
						.
					</para>
				</listitem>

				<listitem>
					<para>
						You can also define additional database
						platforms in Power*Architect. For more
						information, see
						<xref
							linkend="setup_database.database_types.new" />
						.
					</para>
				</listitem>

			</itemizedlist>

			<section id="setup_database.database_types.new">

				<title>Adding a New Database Type</title>

				<para>To add a new database type:</para>

				<orderedlist>

					<listitem>

						<para>Select File » User Preferences.</para>

						<para>Alternate method:</para>

						<itemizedlist>

							<listitem>
								<para>
									Select Connections » Database
									Connection Manager or Window »
									Database Connection Manager. On the
									Database Connection Manager dialog
									box, click JDBC Drivers.
								</para>
							</listitem>

						</itemizedlist>

						<para>
							The User Preferences dialog box appears,
							with the JDBC Drivers tab open. Existing
							database types, including the pre-defined
							database types included with
							Power*Architect, are listed on the left.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/UserPref-JDBC.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

						<para>
							Note: You can modify an existing database
							type by clicking on it in the list.
						</para>

					</listitem>

					<listitem>
						<para>
							Click + below the list of database types.
						</para>
					</listitem>

					<listitem>
						<para>
							Enter the following information on the
							General Tab:
						</para>

						<informaltable frame="all">

							<tgroup cols="2">

								<thead>

									<row>

										<entry>
											<para>
												In this field ...
											</para>
										</entry>

										<entry>
											<para>
												Enter the following
												information ...
											</para>
										</entry>

									</row>

								</thead>

								<tbody>

									<row>

										<entry>
											<para>Name</para>
										</entry>

										<entry>
											<para>
												Name for the database
												type (for example,
												PostgreSQL or SQL
												Server).
											</para>
										</entry>

									</row>

									<row>

										<entry>
											<para>Driver Class</para>
										</entry>

										<entry>
											<para>
												Java class name of the
												driver. This is the
												driver class within the
												JDBC driver JAR file
												that will be used for
												database connections.
											</para>
										</entry>

									</row>

									<row>

										<entry>
											<para>
												Connection String
												Template
											</para>
										</entry>

										<entry>
											<para>
												General format of the
												JDBC URL for the
												database platform.
											</para>

											<para>
												Important: You are not
												creating a connection
												for a specific database
												- you are entering a
												generic connection
												string that applies to
												the database platform.
												Later on, when you set
												up a connection to a
												specific database,
												Power*Architect will use
												this template to create
												the URL to connect to
												the database.
											</para>

											<para>

											</para>

											<para>
												The connection string
												template must conform to
												a specific pattern that
												includes literals and
												variables.
											</para>

											<itemizedlist>

												<listitem>
													<para>
														Literals are
														entered like
														normal text but
														may not contain
														angle brackets
														(&lt; or &gt;),
														which are
														reserved for
														defining
														variables. As
														the name
														implies,
														literals appear
														in the URL in
														the same
														position and way
														they appear in
														the template.
													</para>
												</listitem>

												<listitem>
													<para>
														Variables are
														used to for
														values that
														change often,
														such as the
														schema or
														database name
														you wish to
														connect to. To
														define a
														variable in the
														template, use
														the format
														&lt;variable_name:default_value&gt;
														(to include a
														default value)
														or
														&lt;variable_name&gt;
														(if you don't
														want to include
														a default
														value). If you
														use a default
														value. it is
														entered
														automatically
														when you create
														a database
														connection. You
														can modify the
														value if the
														database you are
														connecting to is
														configured to
														use a different
														value.
													</para>

													<para>
														Each variable
														you define is
														shown below the
														Connection
														String Template
														field. This
														provides you
														with a preview
														of the values
														you will be able
														to modify when
														creating a
														database
														connection.
													</para>

												</listitem>

											</itemizedlist>

											<para>
												For example, the
												connection string
												template to connect to a
												Microsoft SQL Server
												database might look like
												this:
											</para>

											<para>
												jdbc:sqlserver://&lt;Hostname&gt;:&lt;Port:1433&gt;
											</para>

											<para>
												When you create a
												connection to a specific
												SQL Server database,
												Power*Architect will use
												this template to create
												the connection URL. In
												this example, the
												template will create the
												URL
												"jdbc:sqlserver://:1433",
												where 1433 is the
												default port value.
												Since SQL Server
												databases listen to port
												1433 by default, it
												makes sense to include
												this value in the
												template. When you're
												creating the actual
												database connection, you
												can change the port
												value if the database
												you're connecting to is
												configured differently.
											</para>

										</entry>

									</row>

								</tbody>
							</tgroup>

						</informaltable>

					</listitem>

					<listitem>
						<para>
							The settings on the Kettle tab are only used
							when you create a Kettle job. For more
							information on these settings, see
							<xref linkend="copy_data.kettle_job" />
							.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/UserPref-Kettle.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

					</listitem>

					<listitem>
						<para>Click OK.</para>
					</listitem>

				</orderedlist>

				<para>
					Next, you must define the location of the JDBC
					driver for the database type. For more information,
					see
					<xref
						linkend="setup_database.database_types.jdbc_driver" />
					.
				</para>

			</section>

			<section id="setup_database.database_types.jdbc_driver">

				<title>Defining the JDBC Driver</title>

				<para>
					Whether you are adding a new database platform to
					Power*Architect or want to use one of the
					pre-configured platforms, the last step in setting
					up a database type is to locate the JAR file (or
					files) that contain the JDBC drivers for the
					database platform.
				</para>

				<para>
					Note: Remember, at this point you are just telling
					Power*Architect where the drivers are. You must set
					up a database connection in order to connect to a
					specific database server (for more information, see
					<xref linkend="setup_database.connections" />
					).
				</para>

				<para>
					Unlike most applications, which need a distinct
					driver program to communicate with each type of
					database, Power*Architect uses Java-based drivers.
					These drivers normally come from the database vendor
					in the form of JAR (Java Archive) files. JAR files
					are an extension to the file format used by
					PKZip/WinZip archives.
				</para>

				<para>
					Most database platforms provide drivers that are
					fully backward compatible. This means that it is
					best to use the newest driver available, regardless
					of the software version on the specific database
					server you intend to connect to. One exception to
					this is the Oracle database. It is important to
					match the major version number of your JDBC driver
					with the major version number of the Oracle database
					server you connect to. For example, if you are
					connecting to an Oracle 10g database, use the latest
					Oracle 10g driver. If you are connecting to an
					Oracle 9i database, use the Oracle 9i driver.
				</para>

				<para>
					To define the JDBC driver for a database type:
				</para>

				<orderedlist>

					<listitem>
						<para>
							If you do not have the JDBC driver for a
							specific database platform, you can usually
							obtain one from the database vendor. If that
							fails, you can find a directory of databases
							drivers on
							<ulink
								url="http://developers.sun.com/product/jdbc/drivers">
								Sun's web site
							</ulink>
							. There is also
							<ulink
								url="http://www.sqlpower.ca/forum/posts/list/401.page">
								a permanent thread in the
								Power*Architect user support forum
							</ulink>
							, where you can share information with other
							Power*Architect users about finding and
							configuring drivers for a particular
							database platform.
						</para>
					</listitem>

					<listitem>
						<para>
							Decide on a permanent location to store your
							JDBC drivers. A good strategy is to create a
							JDBC folder under your Documents folder and
							collect all of you JDBC driver files there.
						</para>
					</listitem>

					<listitem>
						<para>
							Save the JDBC driver (it will usually be one
							or more JAR files) in the location you've
							chosen.
						</para>
					</listitem>

					<listitem>
						<para>
							If the User Preferences dialog box is not
							already open, select File » User
							Preferences.
						</para>
					</listitem>

					<listitem>
						<para>
							On the JDBC Drivers tab, select a database
							type.
						</para>
					</listitem>

					<listitem>
						<para>Click Add JAR.</para>
					</listitem>

					<listitem>
						<para>
							Locate the JAR file and click Open. If there
							is a valid driver class in the JAR file, a
							file tree will appear showing the JDBC
							driver classes within the JAR file.
						</para>
					</listitem>

					<listitem>
						<para>Select the driver you want to use.</para>
					</listitem>

					<listitem>
						<para>Click OK.</para>
					</listitem>

				</orderedlist>

			</section>

		</section>

		<section id="setup_database.connections">

			<title>Setting up Database Connections</title>

			<para>
				You must set up a connection to allow Power*Architect to
				connect to a specific database. When you create a
				connection, it is automatically added to the current
				Power*Architect project. You can also use the connection
				in all your projects.
			</para>

			<para>
				Before creating a connection, you must define the
				general settings for the database platform. For more
				information, see
				<xref linkend="setup_database.database_types" />
				.
			</para>

			<section id="setup_database.connections.create">

				<title>Creating a New Database Connection</title>

				<para>To create a new database connection:</para>

				<orderedlist>

					<listitem>
						<para>
							Select Connections » Add Source Connection »
							New Connection.
						</para>

						<para>Alternate methods:</para>

						<itemizedlist>
							<listitem>
								<para>
									Select Connections » Database
									Connection Manager (or Window »
									Database Connection Manager), then
									click New.
								</para>
							</listitem>

							<listitem>
								<para>
									Right-click a blank space in the
									database tree, then click Add Source
									Connection » New Connection.
								</para>
							</listitem>

						</itemizedlist>

						<para>
							The Database Connection dialog box appears.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/database_conn_window.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

					</listitem>

					<listitem>
						<para>
							On the General tab, enter the following
							information:
						</para>

						<informaltable frame="all">

							<tgroup cols="2">

								<thead>
									<row>

										<entry>
											<para>
												In this field ...
											</para>
										</entry>


										<entry>
											<para>Do this ...</para>
										</entry>

									</row>

								</thead>

								<tbody>

									<row>

										<entry>
											<para>Connection Name</para>
										</entry>


										<entry>
											<para>
												Enter a name for the
												database connection.
											</para>
										</entry>

									</row>


									<row>

										<entry>
											<para>Database Type</para>
										</entry>


										<entry>
											<para>
												Select the database
												platform you want to
												connect to. Note: This
												list contains the
												database types you
												defined in your user
												preferences. For more
												information, see
												<xref
													linkend="setup_database.database_types" />
												.
											</para>
										</entry>

									</row>


									<row>

										<entry>
											<para>
												Connect Options and JDBC
												URL
											</para>
										</entry>


										<entry>
											<para>
												Enter the connection
												options for the database
												driver. (Theses options
												are based on the
												database type you
												select.)
											</para>

											<para>
												If you are using one of
												the fully-supported
												drivers, the connection
												option parameters are
												added into the JDBC URL
												field in the order that
												the Java driver expects
												to see them (this string
												is sometimes called a
												"db URL" in Java
												terminology). In the
												following example:
											</para>

											<itemizedlist>

												<listitem>
													<para>
														The default port
														number from the
														database type
														has been entered
														automatically in
														the Connect
														Options.
													</para>
													<para>
														Note: You would
														not usually
														change a default
														value unless the
														database server
														you're
														connecting to
														has been
														configured to
														use a different
														value.
													</para>
												</listitem>

												<listitem>
													<para>
														The hostname and
														database name
														have been
														entered manually
														in the Connect
														Options.
													</para>
												</listitem>

												<listitem>
													<para>
														The PostgreSQL
														driver is being
														used.
													</para>
												</listitem>

											</itemizedlist>

											<mediaobject>
												<imageobject>
													<imagedata
														fileref="doc/images/database_conn_window_setup.png"
														format="PNG" width="4in" />
												</imageobject>
											</mediaobject>

										</entry>

									</row>

									<row>

										<entry>
											<para>
												Username and Password
											</para>
										</entry>

										<entry>
											<para>
												If necessary, enter the
												username and password to
												connect to the database.
											</para>
										</entry>

									</row>

								</tbody>

							</tgroup>

						</informaltable>

					</listitem>

					<listitem>
						<para>
							The settings on the Kettle tab are only used
							when you create a Kettle job. For more
							information on these settings, see
							<xref linkend="copy_data.kettle_job" />
							.
						</para>
					</listitem>

					<listitem>
						<para>
							Click OK. The new connection is added to the
							current project (you can view the connection
							in the database tree) and is also added to
							the Database Connection Manager.
						</para>
					</listitem>

				</orderedlist>

			</section>

			<section id="connections.in_project">

				<title>
					Adding or Removing Database Connections for a
					Project
				</title>

				<para>
					You can add a previously created database connection
					to a project. (When you create a new connection, it
					is automatically added to the current project. For
					more information, see
					<xref linkend="setup_database.connections.create" />
					.) You can also remove a connection from a project.
					You cannot remove a connection if it is being used
					as a source connection in the playpen.
				</para>

				<para>
					Note: You can permanently delete connections. For
					more information, see
					<xref
						linkend="setup_database.connections.modify_delete" />
					.
				</para>

				<para>
					To add a database connection to a project, do one of
					the following:
				</para>

				<itemizedlist>

					<listitem>
						<para>
							Select Connections » Add Source Connection,
							then select a database connection.
						</para>
					</listitem>

					<listitem>
						<para>
							Right-click a blank space in the database
							tree, click Add Source Connection, then
							select a database connection.
						</para>

					</listitem>

				</itemizedlist>

				<para>
					The database connection is added to the database
					tree.
				</para>

				<para>
					To remove a database connection from a project, do
					one of the following:
				</para>

				<itemizedlist>

					<listitem>
						<para>
							Right-click a database connection in the
							database tree, then click Remove Connection.
						</para>
					</listitem>

					<listitem>
						<para>
							Click a database connection in the database
							tree, then select Connections » Remove
							Connection.
						</para>
					</listitem>

				</itemizedlist>

			</section>

			<section id="setup_database.connections.modify_delete">

				<title>
					Modifying or Deleting Database Connections
				</title>

				<para>
					You can modify a database connection's properties or
					permanently delete it. You cannot delete a
					connection if it is being used as a source
					connection in the playpen.
				</para>

				<para>
					Note: You can also remove a connection from a
					project without permanently deleting the connection.
					For more information, see
					<xref linkend="connections.in_project" />
					.
				</para>

				<para>To modify a database connection:</para>

				<orderedlist>

					<listitem>
						<para>
							Select Connections » Database Connection
							Manager (or Window » Database Connection
							Manager).
						</para>
					</listitem>

					<listitem>
						<para>
							Select a database connection, then click
							Edit.
						</para>

						<para>Alternate methods:</para>

						<itemizedlist>

							<listitem>
								<para>
									Right-click a database connection in
									the database tree, then click
									Connection Properties.
								</para>
							</listitem>

							<listitem>
								<para>
									Select a database connection in the
									database tree, then select
									Connections » Connection Properties.
								</para>
							</listitem>

						</itemizedlist>

						<para>
							The Database Connection dialog box appears.
						</para>
					</listitem>

					<listitem>
						<para>
							Modify the connection settings. For
							information on the settings, see
							<xref
								linkend="setup_database.connections.create" />
							.
						</para>
					</listitem>

					<listitem>
						<para>Click OK.</para>
					</listitem>

				</orderedlist>

				<para>
					To permanently delete a database connection:
				</para>

				<orderedlist>

					<listitem>
						<para>
							Select Connections » Database Connection
							Manager (or Window » Database Connection
							Manager).
						</para>
					</listitem>

					<listitem>
						<para>
							Select a database connection, then click
							Remove.
						</para>
					</listitem>

				</orderedlist>

			</section>

		</section>

	</chapter>

	<chapter id="system_settings">

		<title>Setting Preferences</title>

		<section id="system_settings.project_settings">

			<title>Defining Project Settings</title>

			<para>
				You can define several settings that apply to all
				Power*Architect projects.
			</para>

			<orderedlist>

				<listitem>
					<para>
						Select File » Project Settings. The Project
						Settings dialog box appears.
					</para>

					<mediaobject>
						<imageobject>
							<imagedata
								fileref="doc/images/project_settings.png" format="PNG"
								width="4in" />
						</imageobject>
					</mediaobject>


				</listitem>

				<listitem>
					<para>Enter the following information:</para>

					<informaltable frame="all">

						<tgroup cols="2">

							<thead>

								<row>

									<entry>
										<para>In this field ...</para>
									</entry>

									<entry>
										<para>Do this ...</para>
									</entry>

								</row>

							</thead>

							<tbody>

								<row>

									<entry>
										<para>
											Snapshot Entire Source
											Database in Project File?
										</para>
									</entry>

									<entry>
										<para>
											When you open a source
											database in Power*Architect
											(for example, to use for
											reverse engineering), the
											database's data structure
											(catalogues, schemas,
											tables, etc.) is shown in
											the database tree. Select
											this check box if you always
											want to save the entire data
											structure in your
											Power*Architect project.
											This allows you to view the
											objects at any time without
											having to reconnect to the
											source system.
										</para>
										<para>
											Important: If you use this
											option, the first time you
											save your project will be
											very time-consuming and
											involve a lot of database
											activity.
										</para>
									</entry>

								</row>

								<row>

									<entry>
										<para>
											Number of Common Values in
											Profiles
										</para>
									</entry>

									<entry>
										<para>
											When profiling a database
											using graph view, you can
											view the most common values
											that occur in a column. Use
											this option to set the
											number of common values to
											include in the profile. For
											example, enter 10 if you
											want to include the ten most
											common values.
										</para>

										<para>
											For more information about
											profiling, see
											<xref
												linkend="analysis.profiling" />
											.
										</para>
									</entry>

								</row>

								<row>

									<entry>
										<para>
											Profile Creator Mode
										</para>
									</entry>

									<entry>
										<para>
											Select the mode used to
											create a profile.
										</para>

										<itemizedlist>

											<listitem>
												<para>
													Remote Database -
													This mode sends a
													query to the
													database and the
													database calculates
													all of the
													statistics. This
													works well over a
													large network
													because very little
													data is transferred.
												</para>
											</listitem>

											<listitem>
												<para>
													Local Reservoir -
													This mode transfers
													all of the data to
													the local computer
													where it is sampled
													and processed. This
													works well over a
													fast network. This
													option is still
													experimental and is
													known to cause an
													out of memory error
													when profiling large
													tables.
												</para>
											</listitem>

										</itemizedlist>

										<para>
											For more information about
											profiling, see
											<xref
												linkend="analysis.profiling" />
											.
										</para>

									</entry>

								</row>

								<row>

									<entry>
										<para>
											Draw Relationships With
										</para>
									</entry>

									<entry>
										<para>
											Select the method used to
											draw relationship lines in
											the playpen.
										</para>

										<para>
											Note: Changing this option
											affects new and existing
											relationship lines.
										</para>

										<itemizedlist>

											<listitem>
												<para>
													Rectilinear Lines -
													Use horizontal and
													vertical line
													segments to connect
													tables. One to three
													line segments will
													be used (at right
													angles to each
													other) depending on
													the position of the
													tables at each end
													of the relationship
													line.
												</para>
											</listitem>

											<listitem>
												<para>
													Direct Lines - Use a
													single line segment
													(usually diagonal)
													to connect the
													tables.
												</para>
											</listitem>

										</itemizedlist>

									</entry>

								</row>

							</tbody>

						</tgroup>

					</informaltable>

				</listitem>

				<listitem>
					<para>Click OK.</para>
				</listitem>

			</orderedlist>

		</section>

		<section id="system_settings.user_prefs">

			<title>Setting User Preferences</title>

			<para>
				You can set preferences that apply to all
				Power*Architect projects.
			</para>

			<para>
				Note: This section describes general user preferences
				only. For information on JDBC drivers preferences, see
				<xref linkend="setup_database" />
				. You can also set project settings (see
				<xref linkend="system_settings.project_settings" />
				).
			</para>

			<orderedlist>

				<listitem>
					<para>
						Select File » User Preferences. For Macintosh,
						select Application » User Preferences.
					</para>

					<para>
						The User Preferences dialog box appears.
					</para>

					<mediaobject>
						<imageobject>
							<imagedata
								fileref="doc/images/UserPref-General.png" format="PNG"
								width="4in" />
						</imageobject>
					</mediaobject>

				</listitem>

				<listitem>
					<para>
						On the General tab, enter the following
						information:
					</para>

					<informaltable frame="all">

						<tgroup cols="2">

							<thead>

								<row>

									<entry>
										<para>In this field ...</para>
									</entry>

									<entry>
										<para>Do this ...</para>
									</entry>

								</row>

							</thead>

							<tbody>

								<row>

									<entry>
										<para>PL.INI File</para>
									</entry>

									<entry>
										<para>
											Enter the location for the
											pl.ini file. This file
											stores the settings for the
											database connections you
											create. If you leave this
											location blank, you will be
											prompted to use a default
											location when you start
											Power*Architect.
										</para>
										<para>
											If you have a pl.ini file
											from another SQL Power
											application, you can use the
											same file for
											Power*Architect so that you
											don't have to re-enter all
											of your database connection
											information.
										</para>
									</entry>

								</row>

								<row>

									<entry>
										<para>ETL Log File</para>
									</entry>

									<entry>
										<para>
											Enter the location for the
											etl.log file. This log file
											is written to when you use
											the ETL features in
											Power*Architect.
										</para>
									</entry>

								</row>

								<row>

									<entry>
										<para>
											Forward Engineering Log File
										</para>
									</entry>

									<entry>
										<para>
											Enter the location of the
											ddl.log file. This log file
											is written to when you
											forward engineer a data
											model.
										</para>
									</entry>

								</row>

								<row>

									<entry>
										<para>
											Antialiased Rendering in
											PlayPen
										</para>
									</entry>

									<entry>
										<para>
											Turn on this option to
											improve the display of the
											data model diagrams in the
											playpen, especially when
											zoomed out. This option may
											cause slower performance on
											some systems. Using this
											option is recommended unless
											you experience poor
											performance.
										</para>
									</entry>

								</row>

								<row>

									<entry>
										<para>Error Reporting</para>
									</entry>

									<entry>
										<para>
											Turn on this option to send
											automatic error reports to
											SQL Power. Error reports
											never include any
											information that could be
											used to identify you or the
											contents or subject matter
											of your project. They simply
											include a Java stack trace
											that tells developers where
											in the program code
											Power*Architect encountered
											a failure, as well as
											generic information such as
											the version of your Java
											Runtime Environment and the
											amount of RAM
											Power*Architect is currently
											using. These error reports
											help the Power*Architect
											development team prioritize
											bug fixes based on the
											estimated number of times a
											particular problem has been
											encountered.
										</para>
									</entry>

								</row>

								<row>

									<entry>
										<para>Show Welcome Screen</para>
									</entry>

									<entry>
										<para>
											Turn this option on to view
											the welcome screen when you
											start Power*Architect.
										</para>
									</entry>

								</row>

							</tbody>

						</tgroup>

					</informaltable>

				</listitem>

				<listitem>
					<para>Click OK.</para>
				</listitem>

			</orderedlist>

		</section>

	</chapter>

	<chapter id="reverse_engineering">

		<title>Reverse Engineering a Data Model</title>

		<para>
			You can use reverse engineering to obtain a data model from
			an existing database, then work with the data model in
			Power*Architect. You can also use Power*Architect to create
			an upgrade script for the original database (for more
			information, see
			<xref linkend="analysis.compare_dm" />
			).
		</para>

		<para>
			You can also use reverse engineering for data warehouse
			design, where your objective is to unify several data models
			and then import the data from the multiple source systems.
			To do this, you would typically reverse engineer one table
			at a time from several different source systems, then make
			modifications in Power*Architect, using the playpen. You can
			then forward engineer the new data warehouse data model to a
			new, separate database (for more information, see
			<xref linkend="forward_engineer" />
			, then use an ETL tool to transfer the data from the source
			systems to the data warehouse.
		</para>

		<para>
			For more information, on ETL tools in Power*Architect, see
			the following sections:
		</para>


		<itemizedlist>

			<listitem>
				<para>
					<xref linkend="copy_data.kettle_job" />
				</para>
			</listitem>

			<listitem>
				<para>
					<xref linkend="analysis.visual_mapping_report" />
				</para>
			</listitem>

			<listitem>
				<para>
					<xref linkend="analysis.etl_export_csv" />
				</para>
			</listitem>

		</itemizedlist>

		<para>To reverse engineer a data model:</para>

		<orderedlist>

			<listitem>
				<para>
					To create a new Power*Architect project, select File
					» New Project.
				</para>
			</listitem>

			<listitem>
				<para>
					If necessary, create a connection for the database
					you want to reverse engineer. For more information,
					see
					<xref linkend="setup_database" />
					.
				</para>
			</listitem>

			<listitem>
				<para>
					Add the database connection to your project. For
					more information, see
					<xref linkend="setup_database.connections" />
					.
				</para>

				<para>
					A database node is added to the database tree.
					Expand this node to view the hierarchy of objects in
					the database (such as catalogues and schemas,
					tables, columns, indices, and relationships). The
					hierarchy is presented the same way a native
					database tool for the source database platform would
					present the hierarchy.
				</para>

				<para>
					As you click objects in the database tree, the
					object changes from grey to black to indicate you've
					viewed it. All viewed items are saved with the
					project so you can view them later without having to
					reconnect to the source system.
				</para>

				<para>
					Note: If you want to save the entire hierarchy in
					the project, enable the snapshot option in project
					settings. For more information, see
					<xref linkend="system_settings.project_settings" />
					.
				</para>

			</listitem>

			<listitem>

				<para>
					You can now create a new data model using the
					objects from the database tree. Simply drag objects
					from the tree into the playpen.
				</para>

				<para>
					If you drag higher-level containers (such as a
					schema, catalogue, or the entire database),
					individual tables, or multiple tables, all items
					within the container will be added to the playpen.
					For example, if you drag a table into the playpen,
					all of the columns within the table will be added as
					well. You can also drag individual or multiple
					columns from the database tree into tables in the
					playpen. Just drag the columns to the position
					within the table where you want to insert them.
				</para>

			</listitem>

		</orderedlist>

		<para>
			In addition to using objects from the database tree, you can
			create new objects (tables, columns, etc.) in the playpen.
			For more information on working with the playpen, see
			<xref linkend="data_model" />
			.
		</para>

		<para>You can also do the following:</para>

		<itemizedlist>

			<listitem>
				<para>
					Create a report listing the source tables used for
					the tables in the playpen. For more information, see
					<xref linkend="analysis.visual_mapping_report" />
					.
				</para>
			</listitem>

			<listitem>
				<para>
					Compare your current data model to the original
					database. For more information, see
					<xref linkend="analysis.compare_dm" />
					.
				</para>
			</listitem>

			<listitem>
				<para>
					Forward engineer the schema. For more information,
					see
					<xref linkend="forward_engineer" />
					.
				</para>
			</listitem>

			<listitem>
				<para>
					Use a Kettle job to move data from the original
					database to your new database. For more information,
					see
					<xref linkend="copy_data.kettle_job" />
					.
				</para>
			</listitem>

		</itemizedlist>

	</chapter>

	<chapter id="forward_engineer">

		<title>Forward Engineering a Data Model</title>

		<para>
			A key design principle of Power*Architect is that the data
			models you create always remain generic. This allows you to
			use the same data model with a variety of database
			platforms. You can then use forward engineering to transform
			a data model for a specific database platform.
		</para>

		<para>
			When you forward engineer a data model, Power*Architect
			creates a physical model that represents the idealized
			generic model as closely as possible, given the constraints
			of the target system. Power*Architect then creates a SQL
			Script that you can run to place the components of the data
			model into a database.
		</para>

		<para>
			It is important to note that Power*Architect creates the
			structure of the target database only and does not create
			the actual database. Before using forward engineering, you
			must create the target database. You would typically do this
			using the administrative tools provided for the database
			platform.
		</para>

		<para>
			Note: You can view or change the location of the forward
			engineering log file in user preferences. For more
			information, see
			<xref linkend="system_settings.project_settings" />
			.
		</para>

		<para>To forward engineer a data model:</para>

		<orderedlist>

			<listitem>
				<para>
					Open the Power*Architect project containing the data
					model you want to use. Ensure that all of the data
					model elements you want to forward engineer are
					included in the diagram in the playpen. Make any
					required changes, such as:
				</para>

				<itemizedlist>

					<listitem>
						<para>Creating new tables.</para>
					</listitem>

					<listitem>
						<para>
							Renaming or deleting existing tables.
						</para>
					</listitem>

					<listitem>
						<para>Creating new columns.</para>
					</listitem>

					<listitem>
						<para>
							Renaming or deleting existing columns.
						</para>
					</listitem>

					<listitem>
						<para>Moving columns between tables.</para>
					</listitem>

					<listitem>
						<para>Modifying column data types.</para>
					</listitem>

					<listitem>
						<para>
							Merging two or more tables together. (If the
							tables you merge have a parent-child
							relationship, this is called denormalizing
							the data model.)
						</para>
					</listitem>

					<listitem>
						<para>
							Splitting a table into several related
							tables (this is often called normalization).
						</para>
					</listitem>

				</itemizedlist>

			</listitem>

			<listitem>
				<para>
					Create the target database. You would typically do
					this using the administrative tools provided for the
					database platform.
				</para>
			</listitem>

			<listitem>
				<para>
					If necessary, create a connection for the target
					database. For more information, see
					<xref linkend="setup_database" />
					.
				</para>
			</listitem>

			<listitem>
				<para>
					Add the database connection to your project. For
					more information, see
					<xref linkend="connections.in_project" />
					.
				</para>
			</listitem>

			<listitem>
				<para>
					Click
					<inlinemediaobject>
						<imageobject>
							<imagedata fileref="src/icons/fwdSQL16.png"
								format="PNG" />
						</imageobject>
					</inlinemediaobject>
					on the top toolbar, or select Tools » Forward
					Engineering. The Forward Engineer SQL Script dialog
					box appears.
				</para>

				<mediaobject>
					<imageobject>
						<imagedata
							fileref="doc/images/SimpleExample4.png" format="PNG" width="4in" />
					</imageobject>
				</mediaobject>

			</listitem>

			<listitem>
				<para>Enter the following information:</para>

				<informaltable frame="all">

					<tgroup cols="2">

						<thead>

							<row>

								<entry>
									<para>In this field ...</para>
								</entry>

								<entry>
									<para>Do this ...</para>
								</entry>

							</row>

						</thead>

						<tbody>

							<row>

								<entry>
									<para>Create in</para>
								</entry>


								<entry>
									<para>
										Select the database connection
										for the target database.
									</para>
								</entry>

							</row>

							<row>

								<entry>
									<para>
										Generate DDL for Database Type
									</para>
								</entry>

								<entry>
									<para>
										Select the database platform.
										This is the same database type
										you specified when you created
										the connection for the target
										database.
									</para>
								</entry>

							</row>

							<row>

								<entry>
									<para>All remaining fields</para>
								</entry>

								<entry>
									<para>
										Enter information appropriate to
										the database type you selected.
									</para>
								</entry>

							</row>

						</tbody>

					</tgroup>

				</informaltable>

			</listitem>

			<listitem>
				<para>
					Click OK. Power*Architect generates a SQL script to
					create the data structure currently in the playpen.
				</para>

				<para>
					Note: As Power*Architect is generating the script,
					warnings or error reports may appear.
				</para>

			</listitem>

			<listitem>
				<para>
					The Preview SQL Script dialog box appears. For
					example:
				</para>

				<mediaobject>
					<imageobject>
						<imagedata
							fileref="doc/images/SimpleExample5.png" format="PNG" width="4in" />
					</imageobject>
				</mediaobject>

			</listitem>

			<listitem>
				<para>
					To run the script, click Execute. The database
					objects are created in the target database.
				</para>
			</listitem>

		</orderedlist>

	</chapter>

	<chapter id="analysis">

		<title>Analyzing Data Structures</title>

		<section id="analysis.compare_dm">

			<title>Comparing Data Models</title>

			<para>
				You can compare two data models to view the differences
				and similarities. You can compare a database to a
				Power*Architect project or to another database.
			</para>

			<para>
				The data model comparison provides you with a
				description of the two data models, highlighting their
				differences and similarities, which you can copy into a
				document or save to a text file. You can also use the
				data model comparison to generate and run a SQL script
				that will update the older database to match the newer
				data model.
			</para>

			<para>To compare two data models:</para>

			<orderedlist>

				<listitem>

					<para>
						Click
						<inlinemediaobject>
							<imageobject>
								<imagedata
									fileref="src/icons/compare_DM16.png" format="PNG" />
							</imageobject>
						</inlinemediaobject>
						on the top toolbar, or select Tools » Compare
						DM. The Compare Data Models dialog box appears.
					</para>

					<mediaobject>
						<imageobject>
							<imagedata
								fileref="doc/images/compare_dm.png" format="PNG" width="4in" />
						</imageobject>
					</mediaobject>

				</listitem>

				<listitem>
					<para>
						In the Compare Older and With Newer sections,
						select the data models you want to compare.
					</para>


					<itemizedlist>

						<listitem>
							<para>
								Select Current Project - Include an open
								Power*Architect project in the
								comparison. The data model currently in
								the playpen will be used.
							</para>
						</listitem>

						<listitem>
							<para>
								Physical Database - Include an existing
								database in the comparison. You must
								also select the connection
								Power*Architect will use to connect to
								the database. For more information, see
								<xref
									linkend="setup_database.connections" />
								.
							</para>
						</listitem>

						<listitem>
							<para>
								From File - Include an existing
								Power*Architect project in the
								comparison. Click Choose and select the
								project.
							</para>
						</listitem>

					</itemizedlist>

					<para>
						Note: If you want to switch the items you've
						selected in the Compare Older and With New
						sections, click Swap.
					</para>

				</listitem>

				<listitem>
					<para>
						In the Output Format area, select whether you
						want to create a SQL script or an English
						comparison.
					</para>
				</listitem>

				<listitem>
					<para>
						Select the Suppress similarities check box if
						you want to include only the differences in the
						output.
					</para>
				</listitem>

				<listitem>
					<para>
						Click Start. The data model comparison is
						created.
					</para>

					<para>
						Note: The Start button is only available if both
						data models in the comparison are valid.
					</para>

				</listitem>

			</orderedlist>

			<para>
				See the following sections for details on the
				information shown in the data comparison.
			</para>

		</section>

		<section id="analysis.compare_dm.english_output">

			<title>
				Data Model Comparison with English Descriptions
			</title>

			<para>
				If you chose English descriptions as the output format,
				the older and newer data models are shown side-by-side.
				You can copy the results to the clipboard or save them
				to a text file.
			</para>

			<para>
				The comparison includes descriptions to make the older
				data model the same as the newer data model. The
				components are also colour coded to indicate
				similarities and differences.
			</para>

			<para>
				The following table summarizes the meaning of the colour
				codes used in the data model comparison:
			</para>

			<informaltable frame="all">

				<tgroup cols="2">

					<thead>

						<row>
							<entry>Colour</entry>
							<entry>Description</entry>
						</row>

					</thead>

					<tbody>

						<row>
							<entry id="black_colour">Black</entry>
							<entry>
								The component exists in both data
								models.
							</entry>
						</row>

						<row>
							<entry id="green_colour">Green</entry>
							<entry>
								The component exists in this data model
								only.
							</entry>
						</row>

						<row>
							<entry id="red_colour">Red</entry>
							<entry>
								The component does not exist in this
								data model but does exist in the other
								data model.
							</entry>
						</row>

						<row>
							<entry id="blue_colour">Blue</entry>
							<entry>
								The component is a column and is on
								different keys in the two data models.
							</entry>
						</row>

					</tbody>

				</tgroup>

			</informaltable>

		</section>


		<section id="analysis.compare_dm.sql_output">

			<title>Data Model Comparison in SQL Script</title>

			<para>
				If you chose SQL script as the output format, a script
				is created to make the older data model the same as the
				newer data model. You can copy the script to the
				clipboard or save it to a text file.
			</para>

			<para>
				To run the script and apply the changes to the older
				database, click Execute.
			</para>

			<para>
				Note: The Execute button is only available if the older
				database has a valid database connection. For more
				information, see
				<xref linkend="setup_database.connections" />
				.
			</para>

		</section>


		<section id="analysis.profiling">

			<title>Profiling Data</title>

			<para>
				Profiling allows you to view a summary of the data in a
				database. You can use profiles to quickly learn the
				characteristics of data in an unfamiliar database. You
				can also use profiles for activities such as database
				optimization and data migration. When you create a
				profile, the results are saved as part of the
				Power*Architect project.
			</para>

			<para>
				Note: Power*Architect contains two different menu items
				related to profiling. Use Profile » Profile only when
				you want to create a new profile. If you want to view
				existing profiles, use Window » Profile Manager. (The
				profile manager window is similar to the download
				manager window in a web browser.)
			</para>

			<section id="analysis.profiling.mode">

				<title>Setting the Profile Mode</title>

				<para>
					You can select the mode used to create a profile.
				</para>

				<orderedlist>

					<listitem>

						<para>Select File » Project Settings.</para>

					</listitem>

					<listitem>

						<para>
							In the Profile Creator Mode list, select one
							of the following options:
						</para>

						<itemizedlist>

							<listitem>

								<para>
									Remote Database - This mode sends a
									query to the database and the
									database calculates all of the
									statistics. This system works well
									over a large network because very
									little data is transferred.
								</para>

								<para>
									Warning: Profiling moderate-to-large
									tables (for example, with over
									250,000 rows) remotely will put a
									significant demand on the database
									server's resources and may impact
									the database performance for other
									users.
								</para>

							</listitem>

							<listitem>

								<para>
									Local Reservoir - This mode
									transfers all of the data to the
									local computer and then samples and
									processes the data there. This works
									well over a fast network. This
									option is still experimental and may
									cause an out of memory error when
									profiling large tables.
								</para>

							</listitem>

						</itemizedlist>
					</listitem>

					<listitem>

						<para>Click OK.</para>

					</listitem>

				</orderedlist>

			</section>

			<section id="analysis.profiling.create_profile">

				<title>Creating a Profile</title>

				<para>To create a profile:</para>

				<orderedlist>

					<listitem>
						<para>
							Connect to the database you want to profile.
							For more information, see
							<xref linkend="setup_database.connections" />
							.
						</para>
					</listitem>

					<listitem>
						<para>
							In the database tree, select the tables you
							want to profile. (You can also select a
							column. If you do, a profile will be created
							for the entire table.)
						</para>
					</listitem>

					<listitem>
						<para>
							Click
							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/Table_profiled16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>
							in the top toolbar.
						</para>

						<para>Alternate methods:</para>

						<itemizedlist>

							<listitem>
								<para>
									Select the tables you want to
									profile, then select Profile »
									Profile.
								</para>
							</listitem>

							<listitem>
								<para>
									Right-click a table or column in the
									database tree, then click Profile.
								</para>
							</listitem>

						</itemizedlist>

						<para>
							The Table Profiles window opens. The new
							profile is listed in the window, along with
							previous profiles you've created for the
							project.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/table_profile.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

					</listitem>

					<listitem>
						<para>
							You can view details about each profile in
							the Table Profiles window. For more
							information, see
							<xref
								linkend="analysis.profiling.view_details" />
							.
						</para>
					</listitem>

				</orderedlist>

				<para>
					Note: To create a new profile of the same table,
					select the table in the Table Profiles window and
					click
					<inlinemediaobject>
						<imageobject>
							<imagedata
								fileref="src/icons/arrow_refresh16.png" format="PNG" />
						</imageobject>
					</inlinemediaobject>
					. The previous profile will be retained as well.
					(Power*Architect will connect to the source database
					to create the new profile, regardless of the profile
					mode you're using.)
				</para>

			</section>

			<section id="analysis.profiling.view_details">

				<title>Viewing Profile Details</title>

				<para>To view profile details:</para>

				<orderedlist>

					<listitem>
						<para>
							If the Table Profiles window is not already
							open, select Window » Profile Manager.
						</para>
					</listitem>

					<listitem>
						<para>
							You can use the Search box and Order by
							options to find a profile.
						</para>
					</listitem>

					<listitem>
						<para>
							To view details for all profiles, click View
							All.
						</para>
					</listitem>

					<listitem>
						<para>
							To view details for some profiles only,
							select one or more profiles in the window,
							then click View Selected.
						</para>
					</listitem>

				</orderedlist>

				<para>
					You can view the profile details as a graph or
					table. For more information, see
					<xref
						linkend="analysis.profiling.view_details.graph" />
					and
					<xref
						linkend="analysis.profiling.view_details.table" />
					.
				</para>

			</section>

			<section id="analysis.profiling.view_details.graph">

				<title>Using Profile Graph View</title>

				<para>To view the profile results in a graph:</para>

				<itemizedlist>

					<listitem>
						<para>Click the Graph View tab.</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/profilePieChart.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

					</listitem>

					<listitem>
						<para>
							On the left side of the window, select a
							column.
						</para>

						<para>
							The column statistics are shown in the
							centre of the window. The most common values
							and their frequency within the table are
							also shown.
						</para>

						<para>
							The pie chart on the right side of the
							window shows the frequency of the most
							common values in the column.
						</para>

						<para>
							Note: You can set the number of common
							values to include in the comparison. For
							more information, see
							<xref
								linkend="system_settings.project_settings" />
							.
						</para>

					</listitem>

					<listitem>
						<para>
							To save the profile results in CSV, PDF or
							HTML format, click Save.
						</para>
					</listitem>

				</itemizedlist>

			</section>

			<section id="analysis.profiling.view_details.table">

				<title>Using Profile Table View</title>

				<para>
					To view the profile results in a table format:
				</para>

				<orderedlist>

					<listitem>
						<para>Click the Table View tab.</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/profileTable.png" format="PNG" width="4in" />
							</imageobject>
						</mediaobject>

					</listitem>

					<listitem>
						<para>
							To narrow the results, use the Search box in
							the top-right corner.
						</para>
					</listitem>

					<listitem>
						<para>
							To sort a column in ascending or
							descesending order, click the column header.
						</para>
					</listitem>

					<listitem>
						<para>
							In the Most Frequent column, hover over a
							cell to view the value and frequency of the
							most common items in the column.
						</para>
					</listitem>

					<listitem>
						<para>
							To save the profile results in CSV, PDF or
							HTML format, click Save.
						</para>
					</listitem>

				</orderedlist>

			</section>

			<section id="analysis.profiling.delete">

				<title>Deleting Profiles</title>

				<para>To delete a profile:</para>

				<orderedlist>

					<listitem>
						<para>
							If the Table Profiles window is not already
							open, select Window » Profile Manager.
						</para>
					</listitem>

					<listitem>
						<para>
							To delete a profile, click
							<inlinemediaobject>
								<imageobject>
									<imagedata
										fileref="src/icons/delete16.png" format="PNG" />
								</imageobject>
							</inlinemediaobject>

							beside the profile.
						</para>
					</listitem>

					<listitem>
						<para>
							To delete all the profiles, click Delete
							All.
						</para>
					</listitem>

				</orderedlist>

			</section>

			<section id="analysis.profiling.pdf">

				<title>Saving Your Profile Results in a PDF</title>

				<para>
					You can easily create a PDF document that presents
					your profile results in an attractive format.
				</para>

				<orderedlist>

					<listitem>
						<para>
							Create one or more profiles (see
							<xref
								linkend="analysis.profiling.create_profile" />
							).
						</para>
					</listitem>

					<listitem>
						<para>Select Window » Profile Manager.</para>
					</listitem>

					<listitem>
						<para>
							In the Table Profiles window, select the
							profiles you want to include in the PDF,
							then click View Selected (see
							<xref
								linkend="analysis.profiling.view_details" />
							). Or click View All to include all of the
							profiles in the PDF.
						</para>
					</listitem>

					<listitem>
						<para>Click Save.</para>
					</listitem>

					<listitem>
						<para>
							Select PDF as the file type and enter a
							filename, then click Save.
						</para>
					</listitem>

				</orderedlist>

			</section>

		</section>

		<section id="analysis.visual_mapping_report">

			<title>Creating a Visual Mapping Report</title>

			<para>
				When you create a data model using reverse engineering,
				you can create a report listing the source tables used
				for the tables in the data model. You can export this
				report to a CSV (comma-separate values) file.
			</para>

			<orderedlist>

				<listitem>
					<para>Select ETL » Visual Mapping Report.</para>
				</listitem>

				<listitem>
					<para>
						To save the report to a CSV file, click Export
						to CSV.
					</para>
				</listitem>

			</orderedlist>

		</section>

		<section id="analysis.etl_export_csv">

			<title>Exporting Column Mappings</title>

			<para>
				When you create a data model using reverse engineering,
				you can export a CSV (comma-separated values) file
				describing the source-to-target column mappings between
				the original database and the data model you created in
				Power*Architect.
			</para>

			<orderedlist>

				<listitem>
					<para>
						Open the project containing the data model you
						want to use.
					</para>
				</listitem>

				<listitem>
					<para>
						Select ETL » Export CSV. The Save dialog box
						appears.
					</para>
				</listitem>

				<listitem>
					<para>
						Select the location and filename for the CSV
						file, then click Save.
					</para>
				</listitem>

			</orderedlist>

		</section>

	</chapter>

	<chapter id="copy_data">

		<title>Copying and Transforming Data</title>

		<section id="copy_data.copy_table_data">

			<title>Copying Data Across Database Platforms</title>

			<para>
				You can use Power*Architect to quickly copy data from
				one database platform (such as Oracle) and create a
				verbatim copy on another database platform (such as
				PostgreSQL). Power*Architect automatically checks for
				foreign key constraints in the target database and
				orders the inserts and deletes accordingly.
			</para>

			<para>
				You can also use Power*Architect to copy data if the
				source and target databases are on the same database
				platform. However, in this case, it's usually faster and
				more reliable to use the database vendor's own tools to
				do a "dump-and-restore".
			</para>

			<para>
				If you want to do something more complex than a verbatim
				copy, use an ETL tool such as Kettle. ETL tools offer
				great flexibility in extracting, transforming, and
				loading data between databases. For more information,
				see
				<xref linkend="copy_data.kettle_job" />
				.
			</para>

			<para>To copy data:</para>

			<orderedlist>

				<listitem>
					<para>
						Select Tools » Copy Table Data. The Copy table
						data dialog box appears.
					</para>

					<mediaobject>
						<imageobject>
							<imagedata
								fileref="doc/images/copy_table_data.png" format="PNG"
								width="4in" />
						</imageobject>
					</mediaobject>

				</listitem>

				<listitem>
					<para>
						Select the Source and Destination databases. If
						necessary, click Database Connection Manager to
						set up a new database connection.
					</para>
				</listitem>

				<listitem>
					<para>
						Select the Truncate Destination Table check box
						to delete all existing data in the destination
						tables before copying the data from the source
						tables.
					</para>
					<para>
						Warning: Only use this option if you are sure
						you want to delete the existing data in the
						destination tables.
					</para>
				</listitem>

				<listitem>
					<para>Click OK.</para>
				</listitem>

			</orderedlist>

		</section>

		<section id="copy_data.kettle_job">

			<title>Using Kettle Jobs</title>

			<para>
				You can use Power*Architect to create a Kettle job,
				which you can then use to create multiple
				transformations based on a data model you've created in
				Power*Architect. You would typically create a Kettle job
				to copy data to a new database you've created through
				reverse engineering.
			</para>

			<para>
				Note: The Kettle ETL tool is provided by Pentaho as free
				and open source software. SQL Power does not maintain or
				distribute Kettle. To obtain a copy, visit
				<ulink url="http://kettle.pentaho.org/">
					kettle.pentaho.org
				</ulink>
				.
			</para>

			<section id="copy_data.kettle_job.prereqs">

				<title>Before Creating a Kettle Job</title>

				<para>
					Before you create a Kettle job, you must use reverse
					and forward engineering to create a new data model
					and database.
				</para>

				<orderedlist>

					<listitem>
						<para>
							Create a new data model in Power*Architect
							using reverse engineering (see
							<xref linkend="reverse_engineering" />
							).
						</para>
					</listitem>

					<listitem>
						<para>
							Forward engineer the data model into a new
							database (see
							<xref linkend="forward_engineer" />
							). This creates the tables and relationships
							in the target database.
						</para>
					</listitem>

				</orderedlist>

			</section>

			<section id="copy_data.kettle_job.create">

				<title>Creating a Kettle Job</title>

				<para>
					Before creating a Kettle job, ensure you've
					completed the prerequisites (see
					<xref linkend="copy_data.kettle_job.prereqs" />
					).
				</para>

				<para>
					Note: You can view or change the location of the
					Kettle (ETL) log file in user preferences. For more
					information, see
					<xref linkend="system_settings.user_prefs" />
					.
				</para>

				<orderedlist>

					<listitem>
						<para>
							Open the project containing the data model
							you want to use for the Kettle job.
						</para>
					</listitem>

					<listitem>
						<para>
							Select ETL » Create Kettle Job. The Create a
							Kettle Job dialog box appears.
						</para>

						<mediaobject>
							<imageobject>
								<imagedata
									fileref="doc/images/create_kettle_job.png" format="PNG"
									width="4in" />
							</imageobject>
						</mediaobject>

					</listitem>

					<listitem>
						<para>Enter the following information:</para>

						<informaltable frame="all">

							<tgroup cols="2">

								<thead>

									<row>

										<entry>
											<para>
												In this field ...
											</para>
										</entry>

										<entry>
											<para>Do this ...</para>
										</entry>

									</row>

								</thead>

								<tbody>

									<row>

										<entry>
											<para>Job Name</para>
										</entry>

										<entry>
											<para>
												Enter a name for the
												job.
											</para>
										</entry>

									</row>


									<row>

										<entry>
											<para>Target Database</para>
										</entry>

										<entry>
											<para>
												Select the database
												connection for the
												target database.
											</para>
											<para>
												Click Properties to view
												the connection and
												modify it if necessary.
												Ensure the connection
												contains the following
												information:
											</para>

											<itemizedlist>

												<listitem>
													<para>
														General tab -
														Enter all the
														required
														connection
														properties for
														the database
														platform. (See
														<xref
															linkend="setup_database.connections" />
														.)
													</para>
												</listitem>

												<listitem>
													<para>
														Kettle tab -
														Enter the
														hostname, port,
														and database for
														the target
														database, if
														applicable. If a
														field does not
														apply to the
														database
														platform, it
														will be
														disabled. You do
														not have to
														enter a login
														name and
														password.
													</para>

													<para>
														Note: The
														hostname, port,
														and database
														information may
														be entered
														automatically
														based on the
														information on
														the General tab.
													</para>

												</listitem>

											</itemizedlist>

										</entry>
									</row>

									<row>

										<entry>
											<para>Schema Name</para>
										</entry>

										<entry>
											<para>
												Enter the name of the
												schema in the target
												database that contains
												the target tables. If
												the target database
												doesn't contain any
												schemas, or the target
												tables are in the
												default schema, you can
												leave this field blank.
											</para>
										</entry>

									</row>

									<row>

										<entry>
											<para>
												Default Join Type
											</para>
										</entry>

										<entry>
											<para>
												Select the join type to
												use in all merge-joins.
												Merge-joins are used to
												create tables with
												multiple sources.
											</para>

											<para>
												Note: Merge-joins that
												are created in
												transformations from
												Power*Architect will
												usually have to be
												updated manually, since
												Power*Architect cannot
												tell which fields to
												compare during the join.
											</para>
										</entry>

									</row>

									<row>

										<entry>
											<para>
												Save Job to File
											</para>
										</entry>

										<entry>
											<para>
												Select this option to
												save the Kettle job
												settings and
												transformations to a
												file. Click Browse and
												select the location and
												filename.
											</para>
										</entry>

									</row>

									<row>

										<entry>
											<para>
												Save Job to Repository
											</para>
										</entry>

										<entry>
											<para>
												Select this option to
												save the Kettle job
												settings and
												transformations in a
												repository.
											</para>

											<para>
												In the Repository list,
												select the database
												connection for the
												repository. You can use
												a connection you have
												set up previously (if
												the database contains a
												repository) or you can
												set up a new connection
												to a repository. (See
												<xref
													linkend="setup_database.connections" />
												.)
											</para>

											<para>
												Click Properties to view
												the connection and
												modify it if necessary.
												Ensure the connection
												contains the following
												information:
											</para>

											<itemizedlist>

												<listitem>
													<para>
														General tab -
														Enter all the
														required
														connection
														properties for
														the database
														platform. (See
														<xref
															linkend="setup_database.connections" />
														.)
													</para>
												</listitem>

												<listitem>
													<para>
														Kettle tab -
														Enter the
														hostname, port,
														and database for
														the repository,
														if applicable.
														If a field does
														not apply to the
														database
														platform, it
														will be
														disabled. Enter
														the repository
														login name and
														password.
													</para>

													<para>
														Note: The
														hostname, port,
														and database
														information may
														be entered
														automatically
														based on the
														information on
														the General tab.
													</para>

												</listitem>

											</itemizedlist>

										</entry>

									</row>

								</tbody>

							</tgroup>

						</informaltable>

					</listitem>

					<listitem>
						<para>
							Click OK to create the Kettle job and
							transformation files.
						</para>

						<para>
							If you are using a repository, you are
							prompted to select the directory location in
							the repository where the files will be
							saved.
						</para>

					</listitem>

				</orderedlist>

				<para>
					Once the job has been created, a window appears with
					the steps you need to complete before running the
					Kettle job.
				</para>

				<para>
					Note: The transformation files are stored in the
					same location as the Kettle job. You must use Kettle
					to run the job.
				</para>

			</section>

		</section>

	</chapter>

	<chapter id="SQLRunner">

		<title>SQLRunner</title>

		<para>
			SQLRunner is a "fall-back" tool that lets you work at the
			raw SQL command level. This is an advanced topic and should
			only be used by those familiar with the intricacies of SQL
			commands and the details of your database.
		</para>

		<para>
			SQLRunner was written by Ian Darwin, and is distributed
			under a liberal free-software, open-source license which
			permits its inclusion in programs such as Power*Architect.
		</para>

		<para>
			SQLRunner is started from the menu entry under the Tools
			menu, and begins with the GUI window shown below. The first
			thing you should do is select which database connection you
			wish to use. The list of Connections is the same as the main
			program uses, as set up in the JDBC Connections window.
		</para>

		<para>
			The basic steps to using SQLRunner are to type a command in
			the top (SQL Command) window and click the Run button; the
			results are displayed in the bottom (SQL Results) window. To
			save you some typing, there is a "Statement Template"
			mechanism that will insert a template for SELECT, INSERT or
			UPDATE SQL statements (just select the template you want and
			click "Apply Template" and the template will replace the
			current Input Statement).
		</para>

		<mediaobject>
			<imageobject>
				<imagedata fileref="doc/images/sqlrunner.png"
					format="PNG" width="4in" />
			</imageobject>
		</mediaobject>
		<para>
			The command can actually be one of two kinds: either one of
			a half-dozen escape commands listed below, or, anything that
			is valid input to your database&apos;s command interface
			(e.g., programs such as psql or Oracle SQL*Plus).
		</para>

		<informaltable frame="all">

			<tgroup cols="2">

				<thead>

					<row>
						<entry>Escape Sequence</entry>
						<entry>Action</entry>
					</row>

				</thead>

				<tbody>

					<row>
						<entry>\dt</entry>
						<entry>Describe list of all tables</entry>
					</row>

					<row>
						<entry>\dtT</entry>
						<entry>
							Describe column names of table named T
						</entry>
					</row>

					<row>
						<entry>\dmX</entry>
						<entry>
							Set the mode, where X is the first letter of
							the mode (t for text, s for SQL, h for HTML
							or x for XML; not needed in the embedded
							version because the GUI has a control for
							this)
						</entry>
					</row>

					<row>
						<entry>\oF</entry>
						<entry>
							Send output to the given file instead of the
							screen (though you can usually just view the
							output and copy-and-paste to save parts of
							it into a file; does not work in GUI
							versions).
						</entry>
					</row>

					<row>
						<entry>\q</entry>
						<entry>
							Exit the program (not supported in embedded
							versions).
						</entry>
					</row>

				</tbody>

			</tgroup>

		</informaltable>

		<para>
			SQL Statements are entered one at a time, can be more than
			one line long, and need not end with a semicolon. These
			statements are not interpreted by SQLRunner itself, so
			anything that the given database and driver accepts can be
			used. For example, with Oracle, you can use PL*SQL
			statements. With most drivers you should be able to use
			stored procedures. Each SQL statement is executed in its own
			transaction context, that is, changes are committed
			immediately (so be careful!).
		</para>

		<section id="SQLRunner.results">

			<title>Output (Results) Window</title>

			<para>
				Command Output in the chosen format (see below) appears
				in the SQL Output window. A scrollbar will appear if the
				information cannot all be seen at once.
			</para>

			<para>
				A visual indication of the success or failure of the
				command is displayed below the output: green for
				success, red for failure. As well, failures will be
				accompanied by a pop-up window containing details on the
				failure.
			</para>

			<para>
				The Clear Output button clears the contents of the
				output window.
			</para>

		</section>

		<section id="SQLRunner.output_format">

			<title>Output Formats</title>

			<para>
				There are several output modes for the display of SQL
				"select" results: text, SQL, HTML, XML, and Table.
				Output from the escape commands are always displayed as
				plain text. Text mode is the default, and is primarily a
				raw display format. SQL output is most useful with the
				output of a SELECT statement; it will generate SQL that
				will attempt to re-create the data in another database.
				HTML mode generates an HTML table to display the results
				of a Select. XML format is similar but may be used for
				exporting data into other applications. Finally, table
				mode provides a friendlier interface which ensures all
				of the columns are lined up properly. In this mode, it
				is even possible to rearrange the columns by dragging
				them.
			</para>

			<para>
				For example, with SQL mode selected, a "select * from
				anecdotes" (a table in a sample bookstore web
				site&apos;s database, used to display a casual quotation
				about books) looked like this:

			</para>

			<mediaobject>
				<imageobject>
					<imagedata fileref="doc/images/sqlrunner_output.png"
						format="PNG" width="4in" />
				</imageobject>
			</mediaobject>
			<para>
				This could, as you can see, be used to create a SQL
				script to re-create the contents of the database. In
				fact, some developers use SQLRunner primarily for this
				purpose: to create stable test databases from "live"
				data that was created by their application.
			</para>

			<para>
				You can view this same data in HTML just by changing the
				Format selection to HTML and clicking the Run button
				again:
			</para>

			<mediaobject>
				<imageobject>
					<imagedata
						fileref="doc/images/sqlrunner_output_2.png" format="PNG"
						width="4in" />
				</imageobject>
			</mediaobject>
			<para>
				When copied and pasted into an HTML file and viewed in a
				browser, the output looked like this:
			</para>

			<mediaobject>
				<imageobject>
					<imagedata
						fileref="doc/images/sqlrunner_html_output.png" format="PNG"
						width="4in" />
				</imageobject>
			</mediaobject>
			<para>
				With a bit of formatting, or even a CSS style sheet,
				this HTML page could be made quite usable.
			</para>

			<para>
				SQLRunner is not perfect, but it is adequate for many
				purposes involving direct use of SQL.
			</para>

		</section>

	</chapter>

	<chapter id="troubleshooting">

		<title>Troubleshooting</title>

		<para>
			Although we have done our best to ensure you don't
			experience any problems when using Power*Architect, there
			may be times when combinations of different database
			products, database configurations, and so on, cause issues.
			We apologize in advance for any inconvenience this may
			cause.
		</para>

		<para>
			If you are having trouble with Power*Architect, we ask that,
			in order to help us to diagnose the problem, you take some
			or all of the following actions:
		</para>

		<itemizedlist>

			<listitem>

				<para>
					Prepare a description of what you were doing.
				</para>

			</listitem>

			<listitem>

				<para>
					Prepare a copy of any errors you encountered.
				</para>

			</listitem>

			<listitem>

				<para>
					Post your problem to the
					<ulink
						url="http://www.sqlpower.ca/forum/forums/show/2.page">
						Power*Architect help forum.
					</ulink>
				</para>

			</listitem>

		</itemizedlist>

	</chapter>

	<chapter id="glossary">

		<title>Glossary</title>

		<para>
			This section lists some database-related terms and their
			meanings.
		</para>

		<para>
			Some of these terms are from FolDoc, "The Free On-line
			Dictionary of Computing", http://www.foldoc.org/, Editor
			Denis Howe.
		</para>

		<informaltable frame="all">

			<tgroup cols="2">

				<tbody>

					<row>
						<entry>
							<para>Column</para>
						</entry>
						<entry>
							<para>
								The set of all instances of a given
								field from all records in a
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?table">
									table
								</ulink>
								.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Database</para>
						</entry>
						<entry>
							<para>
								One or more large structured sets of
								persistent data, usually associated with
								software to update and
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?query">
									query
								</ulink>
								the data. A simple database might be a
								single file containing many
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?records">
									records
								</ulink>
								, each of which contains the same set of
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?fields">
									fields
								</ulink>
								where each field is a certain fixed
								width.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Data Modelling</para>
						</entry>
						<entry>
							<para>
								The product of the database design
								process which aims to identify and
								organize the required data logically and
								physically.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Data Warehousing</para>
						</entry>
						<entry>
							<para>
								A database, often remote, containing
								recent snapshots of corporate data.
								Planners and researchers can use this
								database freely without worrying about
								slowing down day-to-day operations of
								the production database.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>ETL</para>
						</entry>
						<entry>
							<para>
								Extraction, Transforming and Loading -
								the process of maintaining and
								transforming data into and out of a
								relational database.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Foreign key</para>
						</entry>
						<entry>
							<para>
								A
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?column">
									column
								</ulink>
								in a database
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?table">
									table
								</ulink>
								containing values that are also found in
								some
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?primary+key">
									primary key
								</ulink>
								column (of a different table). By
								extension, any reference to entities of
								a different type.
							</para>
							<para>
								Some
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?RDBMSs">
									RDBMSs
								</ulink>
								allow a column to be explicitly labelled
								as a foreign key and only allow values
								to be inserted if they already exist in
								the relevant primary key column.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Identifying Relationship</para>
						</entry>
						<entry>
							<para>
								Where the key of the parent table is a
								subset of the key of the child table.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>JDBC</para>
						</entry>
						<entry>
							<para>
								Java DataBase Connectivity, an
								unofficial acronym for the "java.sql"
								package of functionality used to access
								relational databases from programs
								written in the Java programming
								language.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Key</para>
						</entry>
						<entry>
							<para>
								A value used to identify a
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?record">
									record
								</ulink>
								in a database, derived by applying some
								fixed function to the record. The key is
								often simply one of the
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?fields">
									fields
								</ulink>
								(a
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?column">
									column
								</ulink>
								if the database is considered as a table
								with records being rows, see "
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?key+field">
									key field
								</ulink>
								"). Alternatively the key may be
								obtained by applying some function, e.g.
								a
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?hash+function">
									hash function
								</ulink>
								, to one or more of the fields. The set
								of keys for all records forms an
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?index">
									index
								</ulink>
								. Multiple indices may be built for one
								database depending on how it is to be
								searched.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Primary key</para>
						</entry>
						<entry>
							<para>
								The
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?candidate+key">
									candidate key
								</ulink>
								selected as being most important for
								identifying a body of information (an
								entity, object or
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?record">
									record
								</ulink>
								).
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Record (row)</para>
						</entry>
						<entry>
							<para>
								One or more structured sets of
								persistent data, usually associated with
								software to update and
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?query">
									query
								</ulink>
								the data. A simple database might be a
								single file containing many
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?records">
									records
								</ulink>
								, each of which contains the same set of
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?fields">
									fields
								</ulink>
								where each field is a certain fixed
								width.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>SQL</para>
						</entry>
						<entry>
							<para>
								<ulink
									url="http://en.wikipedia.org/wiki/SQL#History">
									Originally SEQUEL
								</ulink>
								and still pronounced that way by many
								practitioners, SQL is the Standard Query
								Language; a unified language for
								creating queries that is accepted (with
								some variations) by all modern
								relational databases.
							</para>
						</entry>
					</row>

					<row>
						<entry>
							<para>Table</para>
						</entry>
						<entry>
							<para>
								A collection of
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?records">
									records
								</ulink>
								in a
								<ulink
									url="http://foldoc.org/foldoc/foldoc.cgi?relational+database">
									relational database
								</ulink>
								.
							</para>
						</entry>
					</row>

				</tbody>

			</tgroup>

		</informaltable>

	</chapter>

	<chapter id="appendices">

		<title>Appendices</title>

		<section id="appendices.gpl3">

			<title>Appendix A: GNU GPL Version 3</title>

			<para>
				The Power*Architect is distributed under the terms of
				the GNU General Public License, version 3 or later. Here
				is the text of that license:
			</para>

			<para>
				<acronym>GNU</acronym>
				General Public License version 3
			</para>
			<para>Version 3, 29 June 2007</para>
			<para>
				Copyright &copy; 2007 Free Software Foundation, Inc.
				<ulink url="http://fsf.org/">http://fsf.org/</ulink>
			</para>
			<para>
				Everyone is permitted to copy and distribute verbatim
				copies of this license document, but changing it is not
				allowed.
			</para>
			<para>Preamble</para>
			<para>
				The
				<acronym>GNU</acronym>
				General Public License is a free, copyleft license for
				software and other kinds of works.
			</para>
			<para>
				The licenses for most software and other practical works
				are designed to take away your freedom to share and
				change the works. By contrast, the
				<acronym>GNU</acronym>
				General Public License is intended to guarantee your
				freedom to share and change all versions of a
				program&mdash;to make sure it remains free software for
				all its users. We, the Free Software Foundation, use the
				<acronym>GNU</acronym>
				General Public License for most of our software; it
				applies also to any other work released this way by its
				authors. You can apply it to your programs, too.
			</para>
			<para>
				When we speak of free software, we are referring to
				freedom, not price. Our General Public Licenses are
				designed to make sure that you have the freedom to
				distribute copies of free software (and charge for them
				if you wish), that you receive source code or can get it
				if you want it, that you can change the software or use
				pieces of it in new free programs, and that you know you
				can do these things.
			</para>
			<para>
				To protect your rights, we need to prevent others from
				denying you these rights or asking you to surrender the
				rights. Therefore, you have certain responsibilities if
				you distribute copies of the software, or if you modify
				it: responsibilities to respect the freedom of others.
			</para>
			<para>
				For example, if you distribute copies of such a program,
				whether gratis or for a fee, you must pass on to the
				recipients the same freedoms that you received. You must
				make sure that they, too, receive or can get the source
				code. And you must show them these terms so they know
				their rights.
			</para>
			<para>
				Developers that use the
				<acronym>GNU</acronym>
				<acronym>GPL</acronym>
				protect your rights with two steps: (1) assert copyright
				on the software, and (2) offer you this License giving
				you legal permission to copy, distribute and/or modify
				it.
			</para>
			<para>
				For the developers&rsquo; and authors&rsquo; protection,
				the
				<acronym>GPL</acronym>
				clearly explains that there is no warranty for this free
				software. For both users&rsquo; and authors&rsquo; sake,
				the
				<acronym>GPL</acronym>
				requires that modified versions be marked as changed, so
				that their problems will not be attributed erroneously
				to authors of previous versions.
			</para>
			<para>
				Some devices are designed to deny users access to
				install or run modified versions of the software inside
				them, although the manufacturer can do so. This is
				fundamentally incompatible with the aim of protecting
				users&rsquo; freedom to change the software. The
				systematic pattern of such abuse occurs in the area of
				products for individuals to use, which is precisely
				where it is most unacceptable. Therefore, we have
				designed this version of the
				<acronym>GPL</acronym>
				to prohibit the practice for those products. If such
				problems arise substantially in other domains, we stand
				ready to extend this provision to those domains in
				future versions of the
				<acronym>GPL</acronym>
				, as needed to protect the freedom of users.
			</para>
			<para>
				Finally, every program is threatened constantly by
				software patents. States should not allow patents to
				restrict development and use of software on
				general-purpose computers, but in those that do, we wish
				to avoid the special danger that patents applied to a
				free program could make it effectively proprietary. To
				prevent this, the
				<acronym>GPL</acronym>
				assures that patents cannot be used to render the
				program non-free.
			</para>
			<para>
				The precise terms and conditions for copying,
				distribution and modification follow.
			</para>
			<para>TERMS AND CONDITIONS</para>
			<para>0. Definitions.</para>
			<para>
				&ldquo;This License&rdquo; refers to version 3 of the
				<acronym>GNU</acronym>
				General Public License.
			</para>
			<para>
				&ldquo;Copyright&rdquo; also means copyright-like laws
				that apply to other kinds of works, such as
				semiconductor masks.
			</para>
			<para>
				&ldquo;The Program&rdquo; refers to any copyrightable
				work licensed under this License. Each licensee is
				addressed as &ldquo;you&rdquo;. &ldquo;Licensees&rdquo;
				and &ldquo;recipients&rdquo; may be individuals or
				organizations.
			</para>
			<para>
				To &ldquo;modify&rdquo; a work means to copy from or
				adapt all or part of the work in a fashion requiring
				copyright permission, other than the making of an exact
				copy. The resulting work is called a &ldquo;modified
				version&rdquo; of the earlier work or a work
				&ldquo;based on&rdquo; the earlier work.
			</para>
			<para>
				A &ldquo;covered work&rdquo; means either the unmodified
				Program or a work based on the Program.
			</para>
			<para>
				To &ldquo;propagate&rdquo; a work means to do anything
				with it that, without permission, would make you
				directly or secondarily liable for infringement under
				applicable copyright law, except executing it on a
				computer or modifying a private copy. Propagation
				includes copying, distribution (with or without
				modification), making available to the public, and in
				some countries other activities as well.
			</para>
			<para>
				To &ldquo;convey&rdquo; a work means any kind of
				propagation that enables other parties to make or
				receive copies. Mere interaction with a user through a
				computer network, with no transfer of a copy, is not
				conveying.
			</para>
			<para>
				An interactive user interface displays
				&ldquo;Appropriate Legal Notices&rdquo; to the extent
				that it includes a convenient and prominently visible
				feature that (1) displays an appropriate copyright
				notice, and (2) tells the user that there is no warranty
				for the work (except to the extent that warranties are
				provided), that licensees may convey the work under this
				License, and how to view a copy of this License. If the
				interface presents a list of user commands or options,
				such as a menu, a prominent item in the list meets this
				criterion.
			</para>
			<para>1. Source Code.</para>
			<para>
				The &ldquo;source code&rdquo; for a work means the
				preferred form of the work for making modifications to
				it. &ldquo;Object code&rdquo; means any non-source form
				of a work.
			</para>
			<para>
				A &ldquo;Standard Interface&rdquo; means an interface
				that either is an official standard defined by a
				recognized standards body, or, in the case of interfaces
				specified for a particular programming language, one
				that is widely used among developers working in that
				language.
			</para>
			<para>
				The &ldquo;System Libraries&rdquo; of an executable work
				include anything, other than the work as a whole, that
				(a) is included in the normal form of packaging a Major
				Component, but which is not part of that Major
				Component, and (b) serves only to enable use of the work
				with that Major Component, or to implement a Standard
				Interface for which an implementation is available to
				the public in source code form. A &ldquo;Major
				Component&rdquo;, in this context, means a major
				essential component (kernel, window system, and so on)
				of the specific operating system (if any) on which the
				executable work runs, or a compiler used to produce the
				work, or an object code interpreter used to run it.
			</para>
			<para>
				The &ldquo;Corresponding Source&rdquo; for a work in
				object code form means all the source code needed to
				generate, install, and (for an executable work) run the
				object code and to modify the work, including scripts to
				control those activities. However, it does not include
				the work&rsquo;s System Libraries, or general-purpose
				tools or generally available free programs which are
				used unmodified in performing those activities but which
				are not part of the work. For example, Corresponding
				Source includes interface definition files associated
				with source files for the work, and the source code for
				shared libraries and dynamically linked subprograms that
				the work is specifically designed to require, such as by
				intimate data communication or control flow between
				those subprograms and other parts of the work.
			</para>
			<para>
				The Corresponding Source need not include anything that
				users can regenerate automatically from other parts of
				the Corresponding Source.
			</para>
			<para>
				The Corresponding Source for a work in source code form
				is that same work.
			</para>
			<para>2. Basic Permissions.</para>
			<para>
				All rights granted under this License are granted for
				the term of copyright on the Program, and are
				irrevocable provided the stated conditions are met. This
				License explicitly affirms your unlimited permission to
				run the unmodified Program. The output from running a
				covered work is covered by this License only if the
				output, given its content, constitutes a covered work.
				This License acknowledges your rights of fair use or
				other equivalent, as provided by copyright law.
			</para>
			<para>
				You may make, run and propagate covered works that you
				do not convey, without conditions so long as your
				license otherwise remains in force. You may convey
				covered works to others for the sole purpose of having
				them make modifications exclusively for you, or provide
				you with facilities for running those works, provided
				that you comply with the terms of this License in
				conveying all material for which you do not control
				copyright. Those thus making or running the covered
				works for you must do so exclusively on your behalf,
				under your direction and control, on terms that prohibit
				them from making any copies of your copyrighted material
				outside their relationship with you.
			</para>
			<para>
				Conveying under any other circumstances is permitted
				solely under the conditions stated below. Sublicensing
				is not allowed; section 10 makes it unnecessary.
			</para>
			<para>
				3. Protecting Users&rsquo; Legal Rights From
				Anti-Circumvention Law.
			</para>
			<para>
				No covered work shall be deemed part of an effective
				technological measure under any applicable law
				fulfilling obligations under article 11 of the WIPO
				copyright treaty adopted on 20 December 1996, or similar
				laws prohibiting or restricting circumvention of such
				measures.
			</para>
			<para>
				When you convey a covered work, you waive any legal
				power to forbid circumvention of technological measures
				to the extent such circumvention is effected by
				exercising rights under this License with respect to the
				covered work, and you disclaim any intention to limit
				operation or modification of the work as a means of
				enforcing, against the work&rsquo;s users, your or third
				parties&rsquo; legal rights to forbid circumvention of
				technological measures.
			</para>
			<para>4. Conveying Verbatim Copies.</para>
			<para>
				You may convey verbatim copies of the Program&rsquo;s
				source code as you receive it, in any medium, provided
				that you conspicuously and appropriately publish on each
				copy an appropriate copyright notice; keep intact all
				notices stating that this License and any non-permissive
				terms added in accord with section 7 apply to the code;
				keep intact all notices of the absence of any warranty;
				and give all recipients a copy of this License along
				with the Program.
			</para>
			<para>
				You may charge any price or no price for each copy that
				you convey, and you may offer support or warranty
				protection for a fee.
			</para>
			<para>5. Conveying Modified Source Versions.</para>
			<para>
				You may convey a work based on the Program, or the
				modifications to produce it from the Program, in the
				form of source code under the terms of section 4,
				provided that you also meet all of these conditions:
			</para>
			<orderedlist numeration="loweralpha">
				<listitem>
					<para>
						The work must carry prominent notices stating
						that you modified it, and giving a relevant
						date.
					</para>
				</listitem>
				<listitem>
					<para>
						The work must carry prominent notices stating
						that it is released under this License and any
						conditions added under section 7. This
						requirement modifies the requirement in section
						4 to &ldquo;keep intact all notices&rdquo;.
					</para>
				</listitem>
				<listitem>
					<para>
						You must license the entire work, as a whole,
						under this License to anyone who comes into
						possession of a copy. This License will
						therefore apply, along with any applicable
						section 7 additional terms, to the whole of the
						work, and all its parts, regardless of how they
						are packaged. This License gives no permission
						to license the work in any other way, but it
						does not invalidate such permission if you have
						separately received it.
					</para>
				</listitem>
				<listitem>
					<para>
						If the work has interactive user interfaces,
						each must display Appropriate Legal Notices;
						however, if the Program has interactive
						interfaces that do not display Appropriate Legal
						Notices, your work need not make them do so.
					</para>
				</listitem>
			</orderedlist>
			<para>
				A compilation of a covered work with other separate and
				independent works, which are not by their nature
				extensions of the covered work, and which are not
				combined with it such as to form a larger program, in or
				on a volume of a storage or distribution medium, is
				called an &ldquo;aggregate&rdquo; if the compilation and
				its resulting copyright are not used to limit the access
				or legal rights of the compilation&rsquo;s users beyond
				what the individual works permit. Inclusion of a covered
				work in an aggregate does not cause this License to
				apply to the other parts of the aggregate.
			</para>
			<para>6. Conveying Non-Source Forms.</para>
			<para>
				You may convey a covered work in object code form under
				the terms of sections 4 and 5, provided that you also
				convey the machine-readable Corresponding Source under
				the terms of this License, in one of these ways:
			</para>
			<orderedlist numeration="loweralpha">
				<listitem>
					<para>
						Convey the object code in, or embodied in, a
						physical product (including a physical
						distribution medium), accompanied by the
						Corresponding Source fixed on a durable physical
						medium customarily used for software
						interchange.
					</para>
				</listitem>
				<listitem>
					<para>
						Convey the object code in, or embodied in, a
						physical product (including a physical
						distribution medium), accompanied by a written
						offer, valid for at least three years and valid
						for as long as you offer spare parts or customer
						support for that product model, to give anyone
						who possesses the object code either (1) a copy
						of the Corresponding Source for all the software
						in the product that is covered by this License,
						on a durable physical medium customarily used
						for software interchange, for a price no more
						than your reasonable cost of physically
						performing this conveying of source, or (2)
						access to copy the Corresponding Source from a
						network server at no charge.
					</para>
				</listitem>
				<listitem>
					<para>
						Convey individual copies of the object code with
						a copy of the written offer to provide the
						Corresponding Source. This alternative is
						allowed only occasionally and noncommercially,
						and only if you received the object code with
						such an offer, in accord with subsection 6b.
					</para>
				</listitem>
				<listitem>
					<para>
						Convey the object code by offering access from a
						designated place (gratis or for a charge), and
						offer equivalent access to the Corresponding
						Source in the same way through the same place at
						no further charge. You need not require
						recipients to copy the Corresponding Source
						along with the object code. If the place to copy
						the object code is a network server, the
						Corresponding Source may be on a different
						server (operated by you or a third party) that
						supports equivalent copying facilities, provided
						you maintain clear directions next to the object
						code saying where to find the Corresponding
						Source. Regardless of what server hosts the
						Corresponding Source, you remain obligated to
						ensure that it is available for as long as
						needed to satisfy these requirements.
					</para>
				</listitem>
				<listitem>
					<para>
						Convey the object code using peer-to-peer
						transmission, provided you inform other peers
						where the object code and Corresponding Source
						of the work are being offered to the general
						public at no charge under subsection 6d.
					</para>
				</listitem>
			</orderedlist>
			<para>
				A separable portion of the object code, whose source
				code is excluded from the Corresponding Source as a
				System Library, need not be included in conveying the
				object code work.
			</para>
			<para>
				A &ldquo;User Product&rdquo; is either (1) a
				&ldquo;consumer product&rdquo;, which means any tangible
				personal property which is normally used for personal,
				family, or household purposes, or (2) anything designed
				or sold for incorporation into a dwelling. In
				determining whether a product is a consumer product,
				doubtful cases shall be resolved in favor of coverage.
				For a particular product received by a particular user,
				&ldquo;normally used&rdquo; refers to a typical or
				common use of that class of product, regardless of the
				status of the particular user or of the way in which the
				particular user actually uses, or expects or is expected
				to use, the product. A product is a consumer product
				regardless of whether the product has substantial
				commercial, industrial or non-consumer uses, unless such
				uses represent the only significant mode of use of the
				product.
			</para>
			<para>
				&ldquo;Installation Information&rdquo; for a User
				Product means any methods, procedures, authorization
				keys, or other information required to install and
				execute modified versions of a covered work in that User
				Product from a modified version of its Corresponding
				Source. The information must suffice to ensure that the
				continued functioning of the modified object code is in
				no case prevented or interfered with solely because
				modification has been made.
			</para>
			<para>
				If you convey an object code work under this section in,
				or with, or specifically for use in, a User Product, and
				the conveying occurs as part of a transaction in which
				the right of possession and use of the User Product is
				transferred to the recipient in perpetuity or for a
				fixed term (regardless of how the transaction is
				characterized), the Corresponding Source conveyed under
				this section must be accompanied by the Installation
				Information. But this requirement does not apply if
				neither you nor any third party retains the ability to
				install modified object code on the User Product (for
				example, the work has been installed in
				<acronym>ROM</acronym>
				).
			</para>
			<para>
				The requirement to provide Installation Information does
				not include a requirement to continue to provide support
				service, warranty, or updates for a work that has been
				modified or installed by the recipient, or for the User
				Product in which it has been modified or installed.
				Access to a network may be denied when the modification
				itself materially and adversely affects the operation of
				the network or violates the rules and protocols for
				communication across the network.
			</para>
			<para>
				Corresponding Source conveyed, and Installation
				Information provided, in accord with this section must
				be in a format that is publicly documented (and with an
				implementation available to the public in source code
				form), and must require no special password or key for
				unpacking, reading or copying.
			</para>
			<para>7. Additional Terms.</para>
			<para>
				&ldquo;Additional permissions&rdquo; are terms that
				supplement the terms of this License by making
				exceptions from one or more of its conditions.
				Additional permissions that are applicable to the entire
				Program shall be treated as though they were included in
				this License, to the extent that they are valid under
				applicable law. If additional permissions apply only to
				part of the Program, that part may be used separately
				under those permissions, but the entire Program remains
				governed by this License without regard to the
				additional permissions.
			</para>
			<para>
				When you convey a copy of a covered work, you may at
				your option remove any additional permissions from that
				copy, or from any part of it. (Additional permissions
				may be written to require their own removal in certain
				cases when you modify the work.) You may place
				additional permissions on material, added by you to a
				covered work, for which you have or can give appropriate
				copyright permission.
			</para>
			<para>
				Notwithstanding any other provision of this License, for
				material you add to a covered work, you may (if
				authorized by the copyright holders of that material)
				supplement the terms of this License with terms:
			</para>
			<orderedlist numeration="loweralpha">
				<listitem>
					<para>
						Disclaiming warranty or limiting liability
						differently from the terms of sections 15 and 16
						of this License; or
					</para>
				</listitem>
				<listitem>
					<para>
						Requiring preservation of specified reasonable
						legal notices or author attributions in that
						material or in the Appropriate Legal Notices
						displayed by works containing it; or
					</para>
				</listitem>
				<listitem>
					<para>
						Prohibiting misrepresentation of the origin of
						that material, or requiring that modified
						versions of such material be marked in
						reasonable ways as different from the original
						version; or
					</para>
				</listitem>
				<listitem>
					<para>
						Limiting the use for publicity purposes of names
						of licensors or authors of the material; or
					</para>
				</listitem>
				<listitem>
					<para>
						Declining to grant rights under trademark law
						for use of some trade names, trademarks, or
						service marks; or
					</para>
				</listitem>
				<listitem>
					<para>
						Requiring indemnification of licensors and
						authors of that material by anyone who conveys
						the material (or modified versions of it) with
						contractual assumptions of liability to the
						recipient, for any liability that these
						contractual assumptions directly impose on those
						licensors and authors.
					</para>
				</listitem>
			</orderedlist>
			<para>
				All other non-permissive additional terms are considered
				&ldquo;further restrictions&rdquo; within the meaning of
				section 10. If the Program as you received it, or any
				part of it, contains a notice stating that it is
				governed by this License along with a term that is a
				further restriction, you may remove that term. If a
				license document contains a further restriction but
				permits relicensing or conveying under this License, you
				may add to a covered work material governed by the terms
				of that license document, provided that the further
				restriction does not survive such relicensing or
				conveying.
			</para>
			<para>
				If you add terms to a covered work in accord with this
				section, you must place, in the relevant source files, a
				statement of the additional terms that apply to those
				files, or a notice indicating where to find the
				applicable terms.
			</para>
			<para>
				Additional terms, permissive or non-permissive, may be
				stated in the form of a separately written license, or
				stated as exceptions; the above requirements apply
				either way.
			</para>
			<para>8. Termination.</para>
			<para>
				You may not propagate or modify a covered work except as
				expressly provided under this License. Any attempt
				otherwise to propagate or modify it is void, and will
				automatically terminate your rights under this License
				(including any patent licenses granted under the third
				paragraph of section 11).
			</para>
			<para>
				However, if you cease all violation of this License,
				then your license from a particular copyright holder is
				reinstated (a) provisionally, unless and until the
				copyright holder explicitly and finally terminates your
				license, and (b) permanently, if the copyright holder
				fails to notify you of the violation by some reasonable
				means prior to 60 days after the cessation.
			</para>
			<para>
				Moreover, your license from a particular copyright
				holder is reinstated permanently if the copyright holder
				notifies you of the violation by some reasonable means,
				this is the first time you have received notice of
				violation of this License (for any work) from that
				copyright holder, and you cure the violation prior to 30
				days after your receipt of the notice.
			</para>
			<para>
				Termination of your rights under this section does not
				terminate the licenses of parties who have received
				copies or rights from you under this License. If your
				rights have been terminated and not permanently
				reinstated, you do not qualify to receive new licenses
				for the same material under section 10.
			</para>
			<para>9. Acceptance Not Required for Having Copies.</para>
			<para>
				You are not required to accept this License in order to
				receive or run a copy of the Program. Ancillary
				propagation of a covered work occurring solely as a
				consequence of using peer-to-peer transmission to
				receive a copy likewise does not require acceptance.
				However, nothing other than this License grants you
				permission to propagate or modify any covered work.
				These actions infringe copyright if you do not accept
				this License. Therefore, by modifying or propagating a
				covered work, you indicate your acceptance of this
				License to do so.
			</para>
			<para>
				10. Automatic Licensing of Downstream Recipients.
			</para>
			<para>
				Each time you convey a covered work, the recipient
				automatically receives a license from the original
				licensors, to run, modify and propagate that work,
				subject to this License. You are not responsible for
				enforcing compliance by third parties with this License.
			</para>
			<para>
				An &ldquo;entity transaction&rdquo; is a transaction
				transferring control of an organization, or
				substantially all assets of one, or subdividing an
				organization, or merging organizations. If propagation
				of a covered work results from an entity transaction,
				each party to that transaction who receives a copy of
				the work also receives whatever licenses to the work the
				party&rsquo;s predecessor in interest had or could give
				under the previous paragraph, plus a right to possession
				of the Corresponding Source of the work from the
				predecessor in interest, if the predecessor has it or
				can get it with reasonable efforts.
			</para>
			<para>
				You may not impose any further restrictions on the
				exercise of the rights granted or affirmed under this
				License. For example, you may not impose a license fee,
				royalty, or other charge for exercise of rights granted
				under this License, and you may not initiate litigation
				(including a cross-claim or counterclaim in a lawsuit)
				alleging that any patent claim is infringed by making,
				using, selling, offering for sale, or importing the
				Program or any portion of it.
			</para>
			<para>11. Patents.</para>
			<para>
				A &ldquo;contributor&rdquo; is a copyright holder who
				authorizes use under this License of the Program or a
				work on which the Program is based. The work thus
				licensed is called the contributor&rsquo;s
				&ldquo;contributor version&rdquo;.
			</para>
			<para>
				A contributor&rsquo;s &ldquo;essential patent
				claims&rdquo; are all patent claims owned or controlled
				by the contributor, whether already acquired or
				hereafter acquired, that would be infringed by some
				manner, permitted by this License, of making, using, or
				selling its contributor version, but do not include
				claims that would be infringed only as a consequence of
				further modification of the contributor version. For
				purposes of this definition, &ldquo;control&rdquo;
				includes the right to grant patent sublicenses in a
				manner consistent with the requirements of this License.
			</para>
			<para>
				Each contributor grants you a non-exclusive, worldwide,
				royalty-free patent license under the
				contributor&rsquo;s essential patent claims, to make,
				use, sell, offer for sale, import and otherwise run,
				modify and propagate the contents of its contributor
				version.
			</para>
			<para>
				In the following three paragraphs, a &ldquo;patent
				license&rdquo; is any express agreement or commitment,
				however denominated, not to enforce a patent (such as an
				express permission to practice a patent or covenant not
				to sue for patent infringement). To &ldquo;grant&rdquo;
				such a patent license to a party means to make such an
				agreement or commitment not to enforce a patent against
				the party.
			</para>
			<para>
				If you convey a covered work, knowingly relying on a
				patent license, and the Corresponding Source of the work
				is not available for anyone to copy, free of charge and
				under the terms of this License, through a publicly
				available network server or other readily accessible
				means, then you must either (1) cause the Corresponding
				Source to be so available, or (2) arrange to deprive
				yourself of the benefit of the patent license for this
				particular work, or (3) arrange, in a manner consistent
				with the requirements of this License, to extend the
				patent license to downstream recipients.
				&ldquo;Knowingly relying&rdquo; means you have actual
				knowledge that, but for the patent license, your
				conveying the covered work in a country, or your
				recipient&rsquo;s use of the covered work in a country,
				would infringe one or more identifiable patents in that
				country that you have reason to believe are valid.
			</para>
			<para>
				If, pursuant to or in connection with a single
				transaction or arrangement, you convey, or propagate by
				procuring conveyance of, a covered work, and grant a
				patent license to some of the parties receiving the
				covered work authorizing them to use, propagate, modify
				or convey a specific copy of the covered work, then the
				patent license you grant is automatically extended to
				all recipients of the covered work and works based on
				it.
			</para>
			<para>
				A patent license is &ldquo;discriminatory&rdquo; if it
				does not include within the scope of its coverage,
				prohibits the exercise of, or is conditioned on the
				non-exercise of one or more of the rights that are
				specifically granted under this License. You may not
				convey a covered work if you are a party to an
				arrangement with a third party that is in the business
				of distributing software, under which you make payment
				to the third party based on the extent of your activity
				of conveying the work, and under which the third party
				grants, to any of the parties who would receive the
				covered work from you, a discriminatory patent license
				(a) in connection with copies of the covered work
				conveyed by you (or copies made from those copies), or
				(b) primarily for and in connection with specific
				products or compilations that contain the covered work,
				unless you entered into that arrangement, or that patent
				license was granted, prior to 28 March 2007.
			</para>
			<para>
				Nothing in this License shall be construed as excluding
				or limiting any implied license or other defenses to
				infringement that may otherwise be available to you
				under applicable patent law.
			</para>
			<para>12. No Surrender of Others&rsquo; Freedom.</para>
			<para>
				If conditions are imposed on you (whether by court
				order, agreement or otherwise) that contradict the
				conditions of this License, they do not excuse you from
				the conditions of this License. If you cannot convey a
				covered work so as to satisfy simultaneously your
				obligations under this License and any other pertinent
				obligations, then as a consequence you may not convey it
				at all. For example, if you agree to terms that obligate
				you to collect a royalty for further conveying from
				those to whom you convey the Program, the only way you
				could satisfy both those terms and this License would be
				to refrain entirely from conveying the Program.
			</para>
			<para>
				13. Use with the
				<acronym>GNU</acronym>
				Affero General Public License.
			</para>
			<para>
				Notwithstanding any other provision of this License, you
				have permission to link or combine any covered work with
				a work licensed under version 3 of the
				<acronym>GNU</acronym>
				Affero General Public License into a single combined
				work, and to convey the resulting work. The terms of
				this License will continue to apply to the part which is
				the covered work, but the special requirements of the
				<acronym>GNU</acronym>
				Affero General Public License, section 13, concerning
				interaction through a network will apply to the
				combination as such.
			</para>
			<para>14. Revised Versions of this License.</para>
			<para>
				The Free Software Foundation may publish revised and/or
				new versions of the
				<acronym>GNU</acronym>
				General Public License from time to time. Such new
				versions will be similar in spirit to the present
				version, but may differ in detail to address new
				problems or concerns.
			</para>
			<para>
				Each version is given a distinguishing version number.
				If the Program specifies that a certain numbered version
				of the
				<acronym>GNU</acronym>
				General Public License &ldquo;or any later
				version&rdquo; applies to it, you have the option of
				following the terms and conditions either of that
				numbered version or of any later version published by
				the Free Software Foundation. If the Program does not
				specify a version number of the
				<acronym>GNU</acronym>
				General Public License, you may choose any version ever
				published by the Free Software Foundation.
			</para>
			<para>
				If the Program specifies that a proxy can decide which
				future versions of the
				<acronym>GNU</acronym>
				General Public License can be used, that proxy&rsquo;s
				public statement of acceptance of a version permanently
				authorizes you to choose that version for the Program.
			</para>
			<para>
				Later license versions may give you additional or
				different permissions. However, no additional
				obligations are imposed on any author or copyright
				holder as a result of your choosing to follow a later
				version.
			</para>
			<para>15. Disclaimer of Warranty.</para>
			<para>
				THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT
				PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE
				STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER
				PARTIES PROVIDE THE PROGRAM &ldquo;AS IS&rdquo; WITHOUT
				WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
				INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
				MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
				THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
				PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE,
				YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR
				OR CORRECTION.
			</para>
			<para>16. Limitation of Liability.</para>
			<para>
				IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED
				TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER
				PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS
				PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING
				ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL
				DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
				PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR
				DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
				YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO
				OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR
				OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
				DAMAGES.
			</para>
			<para>17. Interpretation of Sections 15 and 16.</para>
			<para>
				If the disclaimer of warranty and limitation of
				liability provided above cannot be given local legal
				effect according to their terms, reviewing courts shall
				apply local law that most closely approximates an
				absolute waiver of all civil liability in connection
				with the Program, unless a warranty or assumption of
				liability accompanies a copy of the Program in return
				for a fee.
			</para>
			<para>END OF TERMS AND CONDITIONS</para>
			<para>How to Apply These Terms to Your New Programs</para>
			<para>
				If you develop a new program, and you want it to be of
				the greatest possible use to the public, the best way to
				achieve this is to make it free software which everyone
				can redistribute and change under these terms.
			</para>
			<para>
				To do so, attach the following notices to the program.
				It is safest to attach them to the start of each source
				file to most effectively state the exclusion of
				warranty; and each file should have at least the
				&ldquo;copyright&rdquo; line and a pointer to where the
				full notice is found.
			</para>
			<para>
				<replaceable>
					one line to give the program&rsquo;s name and a
					brief idea of what it does.
				</replaceable>
				Copyright (C)
				<replaceable>year</replaceable>
				<replaceable>name of author</replaceable>
			</para>
			<para>
				This program is free software: you can redistribute it
				and/or modify it under the terms of the
				<acronym>GNU</acronym>
				General Public License as published by the Free Software
				Foundation, either version 3 of the License, or (at your
				option) any later version.
			</para>
			<para>
				This program is distributed in the hope that it will be
				useful, but WITHOUT ANY WARRANTY; without even the
				implied warranty of MERCHANTABILITY or FITNESS FOR A
				PARTICULAR PURPOSE. See the
				<acronym>GNU</acronym>
				General Public License for more details.
			</para>
			<para>
				You should have received a copy of the
				<acronym>GNU</acronym>
				General Public License along with this program. If not,
				see
				<ulink url="http://www.gnu.org/licenses/">
					http://www.gnu.org/licenses/
				</ulink>
				.
			</para>
			<para>
				Also add information on how to contact you by electronic
				and paper mail.
			</para>
			<para>
				If the program does terminal interaction, make it output
				a short notice like this when it starts in an
				interactive mode:
			</para>
			<para>
				<replaceable>program</replaceable>
				Copyright (C)
				<replaceable>year</replaceable>
				<replaceable>name of author</replaceable>
				This program comes with ABSOLUTELY NO WARRANTY; for
				details type &lsquo;
				<literal>show w</literal>
				&rsquo;. This is free software, and you are welcome to
				redistribute it under certain conditions; type &lsquo;
				<literal>show c</literal>
				&rsquo; for details.
			</para>
			<para>
				The hypothetical commands &lsquo;
				<literal>show w</literal>
				&rsquo; and &lsquo;
				<literal>show c</literal>
				&rsquo; should show the appropriate parts of the General
				Public License. Of course, your program&rsquo;s commands
				might be different; for a GUI interface, you would use
				an &ldquo;about box&rdquo;.
			</para>
			<para>
				You should also get your employer (if you work as a
				programmer) or school, if any, to sign a
				&ldquo;copyright disclaimer&rdquo; for the program, if
				necessary. For more information on this, and how to
				apply and follow the
				<acronym>GNU</acronym>
				<acronym>GPL</acronym>
				, see
				<ulink url="http://www.gnu.org/licenses/">
					http://www.gnu.org/licenses/
				</ulink>
				.
			</para>
			<para>
				The
				<acronym>GNU</acronym>
				General Public License does not permit incorporating
				your program into proprietary programs. If your program
				is a subroutine library, you may consider it more useful
				to permit linking proprietary applications with the
				library. If this is what you want to do, use the
				<acronym>GNU</acronym>
				Lesser General Public License instead of this License.
				But first, please read
				<ulink
					url="http://www.gnu.org/philosophy/why-not-lgpl.html">
					http://www.gnu.org/philosophy/why-not-lgpl.html
				</ulink>
				.
			</para>
		</section>

		<section id="appendices.third_party_licences">

			<title>Appendix B: Third Party Licenses</title>

			<section id="appendices.third_party_licences.silk-icons">
				<title>The FAMFAMFAM Silk Icon Set</title>

				<para>
					The Power*Architect development team is grateful to
					Mark James for the beautiful Silk icon set which is
					used extensively throughout Power*Architect's user
					interface.
				</para>

				<para>
					The Silk icons are freely available under the
					<ulink
						url="http://creativecommons.org/licenses/by/2.5/">
						Creative Commons Attribution 2.5 License
					</ulink>
					. If you want to use these icons in your own work
					(and why wouldn't you?), you can obtain the full set
					from
					<ulink
						url="http://www.famfamfam.com/lab/icons/silk/">
						the FAMFAMFAM web site
					</ulink>
					.
				</para>
			</section>

			<section id="appendices.third_party_licences.ASF">
				<title>The Apache Software Foundation</title>
				<para>
					The Power*Architect development team is grateful to
					the Apache Software Foundation and their
					contributors; their high-quality reusable Java
					libraries have been invaluable in the development of
					Power*Architect. The text of the Apache License
					follows, because we are redistributing several
					Apache libraries upon which Power*Architect depends.
				</para>

				<para>
					The following license applies to these library jar
					files, which are distributed as part of the
					Power*Architect download:
				</para>

				<itemizedlist>
					<listitem>
						<para>commons-beanutils.jar</para>
					</listitem>
					<listitem>
						<para>commons-digester.jar</para>
					</listitem>
					<listitem>
						<para>commons-logging.jar</para>
					</listitem>
					<listitem>
						<para>
							commons-beanutils-bean-collections.jar
						</para>
					</listitem>
					<listitem>
						<para>commons-beanutils-core.jar</para>
					</listitem>
					<listitem>
						<para>jakarta-regexp-1.2.jar</para>
					</listitem>
					<listitem>
						<para>commons-collections-3.1.jar</para>
					</listitem>
					<listitem>
						<para>commons-dbcp-1.2.1.jar</para>
					</listitem>
					<listitem>
						<para>commons-pool-1.3.jar</para>
					</listitem>
					<listitem>
						<para>commons-vfs-1.0.jar</para>
					</listitem>
					<listitem>
						<para>log4j.jar</para>
					</listitem>
				</itemizedlist>

				<para>Apache License Version 2.0, January 2004</para>
				<para>http://www.apache.org/licenses/</para>
				<para>
					TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND
					DISTRIBUTION
				</para>
				<para>
					<emphasis>1. Definitions</emphasis>
					.
				</para>
				<para>
					"License" shall mean the terms and conditions for
					use, reproduction, and distribution as defined by
					Sections 1 through 9 of this document.
				</para>
				<para>
					"Licensor" shall mean the copyright owner or entity
					authorized by the copyright owner that is granting
					the License.
				</para>

				<para>
					"Legal Entity" shall mean the union of the acting
					entity and all other entities that control, are
					controlled by, or are under common control with that
					entity. For the purposes of this definition,
					"control" means (i) the power, direct or indirect,
					to cause the direction or management of such entity,
					whether by contract or otherwise, or (ii) ownership
					of fifty percent (50%) or more of the outstanding
					shares, or (iii) beneficial ownership of such
					entity.
				</para>
				<para>
					"You" (or "Your") shall mean an individual or Legal
					Entity exercising permissions granted by this
					License.
				</para>
				<para>
					"Source" form shall mean the preferred form for
					making modifications, including but not limited to
					software source code, documentation source, and
					configuration files.
				</para>
				<para>
					"Object" form shall mean any form resulting from
					mechanical transformation or translation of a Source
					form, including but not limited to compiled object
					code, generated documentation, and conversions to
					other media types.
				</para>
				<para>

					"Work" shall mean the work of authorship, whether in
					Source or Object form, made available under the
					License, as indicated by a copyright notice that is
					included in or attached to the work (an example is
					provided in the Appendix below).
				</para>
				<para>
					"Derivative Works" shall mean any work, whether in
					Source or Object form, that is based on (or derived
					from) the Work and for which the editorial
					revisions, annotations, elaborations, or other
					modifications represent, as a whole, an original
					work of authorship. For the purposes of this
					License, Derivative Works shall not include works
					that remain separable from, or merely link (or bind
					by name) to the interfaces of, the Work and
					Derivative Works thereof.
				</para>
				<para>
					"Contribution" shall mean any work of authorship,
					including the original version of the Work and any
					modifications or additions to that Work or
					Derivative Works thereof, that is intentionally
					submitted to Licensor for inclusion in the Work by
					the copyright owner or by an individual or Legal
					Entity authorized to submit on behalf of the
					copyright owner. For the purposes of this
					definition, "submitted" means any form of
					electronic, verbal, or written communication sent to
					the Licensor or its representatives, including but
					not limited to communication on electronic mailing
					lists, source code control systems, and issue
					tracking systems that are managed by, or on behalf
					of, the Licensor for the purpose of discussing and
					improving the Work, but excluding communication that
					is conspicuously marked or otherwise designated in
					writing by the copyright owner as "Not a
					Contribution."
				</para>
				<para>
					"Contributor" shall mean Licensor and any individual
					or Legal Entity on behalf of whom a Contribution has
					been received by Licensor and subsequently
					incorporated within the Work.
				</para>
				<para>
					<emphasis>2. Grant of Copyright License</emphasis>
					. Subject to the terms and conditions of this
					License, each Contributor hereby grants to You a
					perpetual, worldwide, non-exclusive, no-charge,
					royalty-free, irrevocable copyright license to
					reproduce, prepare Derivative Works of, publicly
					display, publicly perform, sublicense, and
					distribute the Work and such Derivative Works in
					Source or Object form.
				</para>
				<para>
					<emphasis>3. Grant of Patent License</emphasis>
					. Subject to the terms and conditions of this
					License, each Contributor hereby grants to You a
					perpetual, worldwide, non-exclusive, no-charge,
					royalty-free, irrevocable (except as stated in this
					section) patent license to make, have made, use,
					offer to sell, sell, import, and otherwise transfer
					the Work, where such license applies only to those
					patent claims licensable by such Contributor that
					are necessarily infringed by their Contribution(s)
					alone or by combination of their Contribution(s)
					with the Work to which such Contribution(s) was
					submitted. If You institute patent litigation
					against any entity (including a cross-claim or
					counterclaim in a lawsuit) alleging that the Work or
					a Contribution incorporated within the Work
					constitutes direct or contributory patent
					infringement, then any patent licenses granted to
					You under this License for that Work shall terminate
					as of the date such litigation is filed.
				</para>
				<para>
					<emphasis>4. Redistribution</emphasis>
					. You may reproduce and distribute copies of the
					Work or Derivative Works thereof in any medium, with
					or without modifications, and in Source or Object
					form, provided that You meet the following
					conditions:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							You must give any other recipients of the
							Work or Derivative Works a copy of this
							License; and
						</para>
					</listitem>

					<listitem>
						<para>
							You must cause any modified files to carry
							prominent notices stating that You changed
							the files; and
						</para>
					</listitem>

					<listitem>
						<para>
							You must retain, in the Source form of any
							Derivative Works that You distribute, all
							copyright, patent, trademark, and
							attribution notices from the Source form of
							the Work, excluding those notices that do
							not pertain to any part of the Derivative
							Works; and
						</para>
					</listitem>

					<listitem>
						<para>
							If the Work includes a "NOTICE" text file as
							part of its distribution, then any
							Derivative Works that You distribute must
							include a readable copy of the attribution
							notices contained within such NOTICE file,
							excluding those notices that do not pertain
							to any part of the Derivative Works, in at
							least one of the following places: within a
							NOTICE text file distributed as part of the
							Derivative Works; within the Source form or
							documentation, if provided along with the
							Derivative Works; or, within a display
							generated by the Derivative Works, if and
							wherever such third-party notices normally
							appear. The contents of the NOTICE file are
							for informational purposes only and do not
							modify the License. You may add Your own
							attribution notices within Derivative Works
							that You distribute, alongside or as an
							addendum to the NOTICE text from the Work,
							provided that such additional attribution
							notices cannot be construed as modifying the
							License.
						</para>
					</listitem>
				</itemizedlist>
				<para>
					You may add Your own copyright statement to Your
					modifications and may provide additional or
					different license terms and conditions for use,
					reproduction, or distribution of Your modifications,
					or for any such Derivative Works as a whole,
					provided Your use, reproduction, and distribution of
					the Work otherwise complies with the conditions
					stated in this License.
				</para>
				<para>
					<emphasis>5. Submission of Contributions</emphasis>
					. Unless You explicitly state otherwise, any
					Contribution intentionally submitted for inclusion
					in the Work by You to the Licensor shall be under
					the terms and conditions of this License, without
					any additional terms or conditions. Notwithstanding
					the above, nothing herein shall supersede or modify
					the terms of any separate license agreement you may
					have executed with Licensor regarding such
					Contributions.
				</para>
				<para>
					<emphasis>6. Trademarks</emphasis>
					. This License does not grant permission to use the
					trade names, trademarks, service marks, or product
					names of the Licensor, except as required for
					reasonable and customary use in describing the
					origin of the Work and reproducing the content of
					the NOTICE file.
				</para>
				<para>
					<emphasis>7. Disclaimer of Warranty</emphasis>
					. Unless required by applicable law or agreed to in
					writing, Licensor provides the Work (and each
					Contributor provides its Contributions) on an "AS
					IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
					KIND, either express or implied, including, without
					limitation, any warranties or conditions of TITLE,
					NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
					PARTICULAR PURPOSE. You are solely responsible for
					determining the appropriateness of using or
					redistributing the Work and assume any risks
					associated with Your exercise of permissions under
					this License.
				</para>
				<para>
					<emphasis>8. Limitation of Liability</emphasis>
					. In no event and under no legal theory, whether in
					tort (including negligence), contract, or otherwise,
					unless required by applicable law (such as
					deliberate and grossly negligent acts) or agreed to
					in writing, shall any Contributor be liable to You
					for damages, including any direct, indirect,
					special, incidental, or consequential damages of any
					character arising as a result of this License or out
					of the use or inability to use the Work (including
					but not limited to damages for loss of goodwill,
					work stoppage, computer failure or malfunction, or
					any and all other commercial damages or losses),
					even if such Contributor has been advised of the
					possibility of such damages.

				</para>
				<para>
					<emphasis>
						9. Accepting Warranty or Additional Liability
					</emphasis>
					. While redistributing the Work or Derivative Works
					thereof, You may choose to offer, and charge a fee
					for, acceptance of support, warranty, indemnity, or
					other liability obligations and/or rights consistent
					with this License. However, in accepting such
					obligations, You may act only on Your own behalf and
					on Your sole responsibility, not on behalf of any
					other Contributor, and only if You agree to
					indemnify, defend, and hold each Contributor
					harmless for any liability incurred by, or claims
					asserted against, such Contributor by reason of your
					accepting any such warranty or additional liability.
				</para>
				<para>END OF TERMS AND CONDITIONS</para>

				<section
					id="appendices.third_party_licences.ASF.apply_to_own_work">
					<title>
						APPENDIX: How to apply the Apache License to
						your work
					</title>
					<para>
						To apply the Apache License to your work, attach
						the following boilerplate notice, with the
						fields enclosed by brackets "[]" replaced with
						your own identifying information. (Don't include
						the brackets!) The text should be enclosed in
						the appropriate comment syntax for the file
						format. We also recommend that a file or class
						name and description of purpose be included on
						the same "printed page" as the copyright notice
						for easier identification within third-party
						archives.

					</para>
					<literallayout>
						Copyright [yyyy] [name of copyright owner]

						Licensed under the Apache License, Version 2.0
						(the &quot;License&quot;); you may not use this
						file except in compliance with the License. You
						may obtain a copy of the License at

						http://www.apache.org/licenses/LICENSE-2.0

						Unless required by applicable law or agreed to
						in writing, software distributed under the
						License is distributed on an &quot;AS IS&quot;
						BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
						KIND, either express or implied. See the License
						for the specific language governing permissions
						and limitations under the License.
					</literallayout>
				</section>
			</section>

			<section id="appendices.third_party_licences.JGoodies">
				<title>JGoodies Karsten Lentzsch</title>

				<para>
					The Power*Architect team is also grateful to
					JGoodies for their excellent forms layout manager
					for Swing. JGoodies forms is released under the BSD
					license, reproduced below.
				</para>

				<para>
					The following license applies to these library jar
					files, which are distributed as part of the
					Power*Architect download:
				</para>

				<itemizedlist>
					<listitem>
						<para>forms-1.1.0.jar</para>
					</listitem>
				</itemizedlist>

				<para>The BSD License for the JGoodies Forms</para>
				<para>
					Copyright (c) 2002-2006 JGoodies Karsten Lentzsch.
					All rights reserved.
				</para>
				<para>
					Redistribution and use in source and binary forms,
					with or without modification, are permitted provided
					that the following conditions are met:
				</para>
				<itemizedlist>
					<listitem>
						<para>
							Redistributions of source code must retain
							the above copyright notice, this list of
							conditions and the following disclaimer.
						</para>
					</listitem>
					<listitem>
						<para>
							Redistributions in binary form must
							reproduce the above copyright notice, this
							list of conditions and the following
							disclaimer in the documentation and/or other
							materials provided with the distribution.
						</para>
					</listitem>
					<listitem>
						<para>
							Neither the name of JGoodies Karsten
							Lentzsch nor the names of its contributors
							may be used to endorse or promote products
							derived from this software without specific
							prior written permission.
						</para>
					</listitem>
				</itemizedlist>
				<para>
					THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS
					AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
					WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
					IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
					FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
					SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
					FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
					EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
					NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
					SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
					INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
					LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
					TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
					ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
					ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
				</para>
			</section>

			<section
				id="appendices.third_party_licences.PostgreSqlJdbcDriver">
				<title>PostgreSQL JDBC Driver</title>

				<para>
					The Power*Architect team would like to thank the
					PostgreSQL JDBC Driver team for their JDBC driver.
				</para>

				<para>
					The following license applies to these library jar
					files, which are distributed as part of the
					Power*Architect download:
				</para>

				<itemizedlist>
					<listitem>
						<para>postgresql_8.jar</para>
					</listitem>
				</itemizedlist>

				<para>
					Copyright (c) 1997-2005, PostgreSQL Global
					Development Group. All rights reserved.
				</para>
				<para>
					Redistribution and use in source and binary forms,
					with or without modification, are permitted provided
					that the following conditions are met:
				</para>
				<orderedlist>
					<listitem>
						<para>
							Redistributions of source code must retain
							the above copyright notice, this list of
							conditions and the following disclaimer.
						</para>
					</listitem>
					<listitem>
						<para>
							Redistributions in binary form must
							reproduce the above copyright notice, this
							list of conditions and the following
							disclaimer in the documentation and/or other
							materials provided with the distribution.
						</para>
					</listitem>
					<listitem>
						<para>
							Neither the name of the PostgreSQL Global
							Development Group nor the names of its
							contributors may be used to endorse or
							promote products derived from this software
							without specific prior written permission.
						</para>
					</listitem>
				</orderedlist>
				<para>
					THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS
					AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
					WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
					IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
					FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
					SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
					FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
					EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
					NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
					SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
					INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
					LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
					TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
					ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
					ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
				</para>
			</section>

			<section id="appendices.third_party_licences.iText">
				<title>iText</title>
				<para>
					The Power*Architect team is also grateful to Bruno
					Lowagie and Paulo Soares for their excellent Java
					PDF library. iText is released under the MPL
					license, reproduced below.
				</para>

				<para>
					The following license applies to these library jar
					files, which are distributed as part of the
					Power*Architect download:
				</para>

				<itemizedlist>
					<listitem>
						<para>itext-1.4.8.jar</para>
					</listitem>
				</itemizedlist>

				<para>MOZILLA PUBLIC LICENSE Version 1.1</para>
				<para>1. Definitions.</para>
				<para>
					1.0.1. "Commercial Use" means distribution or
					otherwise making the Covered Code available to a
					third party.
				</para>
				<para>
					1.1. "Contributor" means each entity that creates or
					contributes to the creation of Modifications.
				</para>
				<para>
					1.2. "Contributor Version" means the combination of
					the Original Code, prior Modifications used by a
					Contributor, and the Modifications made by that
					particular Contributor.
				</para>
				<para>
					1.3. "Covered Code" means the Original Code or
					Modifications or the combination of the Original
					Code and Modifications, in each case including
					portions thereof.
				</para>
				<para>
					1.4. "Electronic Distribution Mechanism" means a
					mechanism generally accepted in the software
					development community for the electronic transfer of
					data.
				</para>
				<para>
					1.5. "Executable" means Covered Code in any form
					other than Source Code.
				</para>
				<para>
					1.6. "Initial Developer" means the individual or
					entity identified as the Initial Developer in the
					Source Code notice required by Exhibit A.
				</para>
				<para>
					1.7. "Larger Work" means a work which combines
					Covered Code or portions thereof with code not
					governed by the terms of this License.
				</para>
				<para>1.8. "License" means this document.</para>
				<para>
					1.8.1. "Licensable" means having the right to grant,
					to the maximum extent possible, whether at the time
					of the initial grant or subsequently acquired, any
					and all of the rights conveyed herein.
				</para>
				<para>
					1.9. "Modifications" means any addition to or
					deletion from the substance or structure of either
					the Original Code or any previous Modifications.
					When Covered Code is released as a series of files,
					a Modification is: A. Any addition to or deletion
					from the contents of a file containing Original Code
					or previous Modifications.
				</para>
				<para>
					B. Any new file that contains any part of the
					Original Code or previous Modifications.
				</para>
				<para>
					1.10. "Original Code" means Source Code of computer
					software code which is described in the Source Code
					notice required by Exhibit A as Original Code, and
					which, at the time of its release under this License
					is not already Covered Code governed by this
					License.
				</para>
				<para>
					1.10.1. "Patent Claims" means any patent claim(s),
					now owned or hereafter acquired, including without
					limitation, method, process, and apparatus claims,
					in any patent Licensable by grantor.
				</para>
				<para>
					1.11. "Source Code" means the preferred form of the
					Covered Code for making modifications to it,
					including all modules it contains, plus any
					associated interface definition files, scripts used
					to control compilation and installation of an
					Executable, or source code differential comparisons
					against either the Original Code or another well
					known, available Covered Code of the Contributor's
					choice. The Source Code can be in a compressed or
					archival form, provided the appropriate
					decompression or de-archiving software is widely
					available for no charge.
				</para>
				<para>
					1.12. "You" (or "Your") means an individual or a
					legal entity exercising rights under, and complying
					with all of the terms of, this License or a future
					version of this License issued under Section 6.1.
					For legal entities, "You" includes any entity which
					controls, is controlled by, or is under common
					control with You. For purposes of this definition,
					"control" means (a) the power, direct or indirect,
					to cause the direction or management of such entity,
					whether by contract or otherwise, or (b) ownership
					of more than fifty percent (50%) of the outstanding
					shares or beneficial ownership of such entity.
				</para>
				<para>2. Source Code License.</para>
				<para>
					2.1. The Initial Developer Grant. The Initial
					Developer hereby grants You a world-wide,
					royalty-free, non-exclusive license, subject to
					third party intellectual property claims: (a) under
					intellectual property rights (other than patent or
					trademark) Licensable by Initial Developer to use,
					reproduce, modify, display, perform, sublicense and
					distribute the Original Code (or portions thereof)
					with or without Modifications, and/or as part of a
					Larger Work; and
				</para>
				<para>
					(b) under Patents Claims infringed by the making,
					using or selling of Original Code, to make, have
					made, use, practice, sell, and offer for sale,
					and/or otherwise dispose of the Original Code (or
					portions thereof).
				</para>
				<para>
					(c) the licenses granted in this Section 2.1(a) and
					(b) are effective on the date Initial Developer
					first distributes Original Code under the terms of
					this License.
				</para>
				<para>
					(d) Notwithstanding Section 2.1(b) above, no patent
					license is granted: 1) for code that You delete from
					the Original Code; 2) separate from the Original
					Code; or 3) for infringements caused by: i) the
					modification of the Original Code or ii) the
					combination of the Original Code with other software
					or devices.
				</para>
				<para>
					2.2. Contributor Grant. Subject to third party
					intellectual property claims, each Contributor
					hereby grants You a world-wide, royalty-free,
					non-exclusive license
				</para>
				<para>
					(a) under intellectual property rights (other than
					patent or trademark) Licensable by Contributor, to
					use, reproduce, modify, display, perform, sublicense
					and distribute the Modifications created by such
					Contributor (or portions thereof) either on an
					unmodified basis, with other Modifications, as
					Covered Code and/or as part of a Larger Work; and
				</para>
				<para>
					(b) under Patent Claims infringed by the making,
					using, or selling of Modifications made by that
					Contributor either alone and/or in combination with
					its Contributor Version (or portions of such
					combination), to make, use, sell, offer for sale,
					have made, and/or otherwise dispose of: 1)
					Modifications made by that Contributor (or portions
					thereof); and 2) the combination of Modifications
					made by that Contributor with its Contributor
					Version (or portions of such combination).
				</para>
				<para>
					(c) the licenses granted in Sections 2.2(a) and
					2.2(b) are effective on the date Contributor first
					makes Commercial Use of the Covered Code.
				</para>
				<para>
					(d) Notwithstanding Section 2.2(b) above, no patent
					license is granted: 1) for any code that Contributor
					has deleted from the Contributor Version; 2)
					separate from the Contributor Version; 3) for
					infringements caused by: i) third party
					modifications of Contributor Version or ii) the
					combination of Modifications made by that
					Contributor with other software (except as part of
					the Contributor Version) or other devices; or 4)
					under Patent Claims infringed by Covered Code in the
					absence of Modifications made by that Contributor.
				</para>
				<para>3. Distribution Obligations.</para>
				<para>
					3.1. Application of License. The Modifications which
					You create or to which You contribute are governed
					by the terms of this License, including without
					limitation Section 2.2. The Source Code version of
					Covered Code may be distributed only under the terms
					of this License or a future version of this License
					released under Section 6.1, and You must include a
					copy of this License with every copy of the Source
					Code You distribute. You may not offer or impose any
					terms on any Source Code version that alters or
					restricts the applicable version of this License or
					the recipients' rights hereunder. However, You may
					include an additional document offering the
					additional rights described in Section 3.5.
				</para>
				<para>
					3.2. Availability of Source Code. Any Modification
					which You create or to which You contribute must be
					made available in Source Code form under the terms
					of this License either on the same media as an
					Executable version or via an accepted Electronic
					Distribution Mechanism to anyone to whom you made an
					Executable version available; and if made available
					via Electronic Distribution Mechanism, must remain
					available for at least twelve (12) months after the
					date it initially became available, or at least six
					(6) months after a subsequent version of that
					particular Modification has been made available to
					such recipients. You are responsible for ensuring
					that the Source Code version remains available even
					if the Electronic Distribution Mechanism is
					maintained by a third party.
				</para>
				<para>
					3.3. Description of Modifications. You must cause
					all Covered Code to which You contribute to contain
					a file documenting the changes You made to create
					that Covered Code and the date of any change. You
					must include a prominent statement that the
					Modification is derived, directly or indirectly,
					from Original Code provided by the Initial Developer
					and including the name of the Initial Developer in
					(a) the Source Code, and (b) in any notice in an
					Executable version or related documentation in which
					You describe the origin or ownership of the Covered
					Code.
				</para>
				<para>
					3.4. Intellectual Property Matters (a) Third Party
					Claims. If Contributor has knowledge that a license
					under a third party's intellectual property rights
					is required to exercise the rights granted by such
					Contributor under Sections 2.1 or 2.2, Contributor
					must include a text file with the Source Code
					distribution titled "LEGAL" which describes the
					claim and the party making the claim in sufficient
					detail that a recipient will know whom to contact.
					If Contributor obtains such knowledge after the
					Modification is made available as described in
					Section 3.2, Contributor shall promptly modify the
					LEGAL file in all copies Contributor makes available
					thereafter and shall take other steps (such as
					notifying appropriate mailing lists or newsgroups)
					reasonably calculated to inform those who received
					the Covered Code that new knowledge has been
					obtained.
				</para>
				<para>
					(b) Contributor APIs. If Contributor's Modifications
					include an application programming interface and
					Contributor has knowledge of patent licenses which
					are reasonably necessary to implement that API,
					Contributor must also include this information in
					the LEGAL file.
				</para>
				<para>
					(c) Representations. Contributor represents that,
					except as disclosed pursuant to Section 3.4(a)
					above, Contributor believes that Contributor's
					Modifications are Contributor's original creation(s)
					and/or Contributor has sufficient rights to grant
					the rights conveyed by this License.
				</para>
				<para>
					3.5. Required Notices. You must duplicate the notice
					in Exhibit A in each file of the Source Code. If it
					is not possible to put such notice in a particular
					Source Code file due to its structure, then You must
					include such notice in a location (such as a
					relevant directory) where a user would be likely to
					look for such a notice. If You created one or more
					Modification(s) You may add your name as a
					Contributor to the notice described in Exhibit A.
					You must also duplicate this License in any
					documentation for the Source Code where You describe
					recipients' rights or ownership rights relating to
					Covered Code. You may choose to offer, and to charge
					a fee for, warranty, support, indemnity or liability
					obligations to one or more recipients of Covered
					Code. However, You may do so only on Your own
					behalf, and not on behalf of the Initial Developer
					or any Contributor. You must make it absolutely
					clear than any such warranty, support, indemnity or
					liability obligation is offered by You alone, and
					You hereby agree to indemnify the Initial Developer
					and every Contributor for any liability incurred by
					the Initial Developer or such Contributor as a
					result of warranty, support, indemnity or liability
					terms You offer.
				</para>
				<para>
					3.6. Distribution of Executable Versions. You may
					distribute Covered Code in Executable form only if
					the requirements of Section 3.1-3.5 have been met
					for that Covered Code, and if You include a notice
					stating that the Source Code version of the Covered
					Code is available under the terms of this License,
					including a description of how and where You have
					fulfilled the obligations of Section 3.2. The notice
					must be conspicuously included in any notice in an
					Executable version, related documentation or
					collateral in which You describe recipients' rights
					relating to the Covered Code. You may distribute the
					Executable version of Covered Code or ownership
					rights under a license of Your choice, which may
					contain terms different from this License, provided
					that You are in compliance with the terms of this
					License and that the license for the Executable
					version does not attempt to limit or alter the
					recipient's rights in the Source Code version from
					the rights set forth in this License. If You
					distribute the Executable version under a different
					license You must make it absolutely clear that any
					terms which differ from this License are offered by
					You alone, not by the Initial Developer or any
					Contributor. You hereby agree to indemnify the
					Initial Developer and every Contributor for any
					liability incurred by the Initial Developer or such
					Contributor as a result of any such terms You offer.
				</para>
				<para>
					3.7. Larger Works. You may create a Larger Work by
					combining Covered Code with other code not governed
					by the terms of this License and distribute the
					Larger Work as a single product. In such a case, You
					must make sure the requirements of this License are
					fulfilled for the Covered Code.
				</para>
				<para>
					4. Inability to Comply Due to Statute or Regulation.
				</para>
				<para>
					If it is impossible for You to comply with any of
					the terms of this License with respect to some or
					all of the Covered Code due to statute, judicial
					order, or regulation then You must: (a) comply with
					the terms of this License to the maximum extent
					possible; and (b) describe the limitations and the
					code they affect. Such description must be included
					in the LEGAL file described in Section 3.4 and must
					be included with all distributions of the Source
					Code. Except to the extent prohibited by statute or
					regulation, such description must be sufficiently
					detailed for a recipient of ordinary skill to be
					able to understand it.
				</para>
				<para>5. Application of this License.</para>
				<para>
					This License applies to code to which the Initial
					Developer has attached the notice in Exhibit A and
					to related Covered Code.
				</para>
				<para>6. Versions of the License.</para>
				<para>
					6.1. New Versions. Netscape Communications
					Corporation ("Netscape") may publish revised and/or
					new versions of the License from time to time. Each
					version will be given a distinguishing version
					number.
				</para>
				<para>
					6.2. Effect of New Versions. Once Covered Code has
					been published under a particular version of the
					License, You may always continue to use it under the
					terms of that version. You may also choose to use
					such Covered Code under the terms of any subsequent
					version of the License published by Netscape. No one
					other than Netscape has the right to modify the
					terms applicable to Covered Code created under this
					License.
				</para>
				<para>
					6.3. Derivative Works. If You create or use a
					modified version of this License (which you may only
					do in order to apply it to code which is not already
					Covered Code governed by this License), You must (a)
					rename Your license so that the phrases "Mozilla",
					"MOZILLAPL", "MOZPL", "Netscape", "MPL", "NPL" or
					any confusingly similar phrase do not appear in your
					license (except to note that your license differs
					from this License) and (b) otherwise make it clear
					that Your version of the license contains terms
					which differ from the Mozilla Public License and
					Netscape Public License. (Filling in the name of the
					Initial Developer, Original Code or Contributor in
					the notice described in Exhibit A shall not of
					themselves be deemed to be modifications of this
					License.)
				</para>
				<para>7. DISCLAIMER OF WARRANTY.</para>
				<para>
					COVERED CODE IS PROVIDED UNDER THIS LICENSE ON AN
					"AS IS" BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER
					EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION,
					WARRANTIES THAT THE COVERED CODE IS FREE OF DEFECTS,
					MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR
					NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY
					AND PERFORMANCE OF THE COVERED CODE IS WITH YOU.
					SHOULD ANY COVERED CODE PROVE DEFECTIVE IN ANY
					RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER
					CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY
					SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF
					WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS
					LICENSE. NO USE OF ANY COVERED CODE IS AUTHORIZED
					HEREUNDER EXCEPT UNDER THIS DISCLAIMER.
				</para>
				<para>8. TERMINATION.</para>
				<para>
					8.1. This License and the rights granted hereunder
					will terminate automatically if You fail to comply
					with terms herein and fail to cure such breach
					within 30 days of becoming aware of the breach. All
					sublicenses to the Covered Code which are properly
					granted shall survive any termination of this
					License. Provisions which, by their nature, must
					remain in effect beyond the termination of this
					License shall survive.
				</para>
				<para>
					8.2. If You initiate litigation by asserting a
					patent infringement claim (excluding declatory
					judgment actions) against Initial Developer or a
					Contributor (the Initial Developer or Contributor
					against whom You file such action is referred to as
					"Participant") alleging that:
				</para>
				<para>
					(a) such Participant's Contributor Version directly
					or indirectly infringes any patent, then any and all
					rights granted by such Participant to You under
					Sections 2.1 and/or 2.2 of this License shall, upon
					60 days notice from Participant terminate
					prospectively, unless if within 60 days after
					receipt of notice You either: (i) agree in writing
					to pay Participant a mutually agreeable reasonable
					royalty for Your past and future use of
					Modifications made by such Participant, or (ii)
					withdraw Your litigation claim with respect to the
					Contributor Version against such Participant. If
					within 60 days of notice, a reasonable royalty and
					payment arrangement are not mutually agreed upon in
					writing by the parties or the litigation claim is
					not withdrawn, the rights granted by Participant to
					You under Sections 2.1 and/or 2.2 automatically
					terminate at the expiration of the 60 day notice
					period specified above.
				</para>
				<para>
					(b) any software, hardware, or device, other than
					such Participant's Contributor Version, directly or
					indirectly infringes any patent, then any rights
					granted to You by such Participant under Sections
					2.1(b) and 2.2(b) are revoked effective as of the
					date You first made, used, sold, distributed, or had
					made, Modifications made by that Participant.
				</para>
				<para>
					8.3. If You assert a patent infringement claim
					against Participant alleging that such Participant's
					Contributor Version directly or indirectly infringes
					any patent where such claim is resolved (such as by
					license or settlement) prior to the initiation of
					patent infringement litigation, then the reasonable
					value of the licenses granted by such Participant
					under Sections 2.1 or 2.2 shall be taken into
					account in determining the amount or value of any
					payment or license.
				</para>
				<para>
					8.4. In the event of termination under Sections 8.1
					or 8.2 above, all end user license agreements
					(excluding distributors and resellers) which have
					been validly granted by You or any distributor
					hereunder prior to termination shall survive
					termination.
				</para>
				<para>9. LIMITATION OF LIABILITY.</para>
				<para>
					UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY,
					WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR
					OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY
					OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED
					CODE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE
					LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL,
					INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY
					CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR
					LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR
					MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES
					OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN
					INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS
					LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY
					FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH
					PARTY'S NEGLIGENCE TO THE EXTENT APPLICABLE LAW
					PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT
					ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR
					CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND
					LIMITATION MAY NOT APPLY TO YOU.
				</para>
				<para>10. U.S. GOVERNMENT END USERS.</para>
				<para>
					The Covered Code is a "commercial item," as that
					term is defined in 48 C.F.R. 2.101 (Oct. 1995),
					consisting of "commercial computer software" and
					"commercial computer software documentation," as
					such terms are used in 48 C.F.R. 12.212 (Sept.
					1995). Consistent with 48 C.F.R. 12.212 and 48
					C.F.R. 227.7202-1 through 227.7202-4 (June 1995),
					all U.S. Government End Users acquire Covered Code
					with only those rights set forth herein.
				</para>
				<para>11. MISCELLANEOUS.</para>
				<para>
					This License represents the complete agreement
					concerning subject matter hereof. If any provision
					of this License is held to be unenforceable, such
					provision shall be reformed only to the extent
					necessary to make it enforceable. This License shall
					be governed by California law provisions (except to
					the extent applicable law, if any, provides
					otherwise), excluding its conflict-of-law
					provisions. With respect to disputes in which at
					least one party is a citizen of, or an entity
					chartered or registered to do business in the United
					States of America, any litigation relating to this
					License shall be subject to the jurisdiction of the
					Federal Courts of the Northern District of
					California, with venue lying in Santa Clara County,
					California, with the losing party responsible for
					costs, including without limitation, court costs and
					reasonable attorneys' fees and expenses. The
					application of the United Nations Convention on
					Contracts for the International Sale of Goods is
					expressly excluded. Any law or regulation which
					provides that the language of a contract shall be
					construed against the drafter shall not apply to
					this License.
				</para>
				<para>12. RESPONSIBILITY FOR CLAIMS.</para>
				<para>
					As between Initial Developer and the Contributors,
					each party is responsible for claims and damages
					arising, directly or indirectly, out of its
					utilization of rights under this License and You
					agree to work with Initial Developer and
					Contributors to distribute such responsibility on an
					equitable basis. Nothing herein is intended or shall
					be deemed to constitute any admission of liability.
				</para>
				<para>13. MULTIPLE-LICENSED CODE.</para>
				<para>
					Initial Developer may designate portions of the
					Covered Code as "Multiple-Licensed".
					"Multiple-Licensed" means that the Initial Developer
					permits you to utilize portions of the Covered Code
					under Your choice of the NPL or the alternative
					licenses, if any, specified by the Initial Developer
					in the file described in Exhibit A.
				</para>
				<para>EXHIBIT A -Mozilla Public License.</para>
				<para>
					``The contents of this file are subject to the
					Mozilla Public License Version 1.1 (the "License");
					you may not use this file except in compliance with
					the License. You may obtain a copy of the License at
					http://www.mozilla.org/MPL/
				</para>
				<para>
					Software distributed under the License is
					distributed on an "AS IS" basis, WITHOUT WARRANTY OF
					ANY KIND, either express or implied. See the License
					for the specific language governing rights and
					limitations under the License.
				</para>
				<para>
					The Original Code is
					______________________________________.
				</para>
				<para>
					The Initial Developer of the Original Code is
					________________________. Portions created by
					______________________ are Copyright (C) ______
					_______________________. All Rights Reserved.
				</para>
				<para>
					Contributor(s):
					______________________________________.
				</para>
				<para>
					Alternatively, the contents of this file may be used
					under the terms of the _____ license (the "[___]
					License"), in which case the provisions of [______]
					License are applicable instead of those above. If
					you wish to allow use of your version of this file
					only under the terms of the [____] License and not
					to allow others to use your version of this file
					under the MPL, indicate your decision by deleting
					the provisions above and replace them with the
					notice and other provisions required by the [___]
					License. If you do not delete the provisions above,
					a recipient may use your version of this file under
					either the MPL or the [___] License."
				</para>
				<para>
					[NOTE: The text of this Exhibit A may differ
					slightly from the text of the notices in the Source
					Code files of the Original Code. You should use the
					text of this Exhibit A rather than the text found in
					the Original Code Source Code for Your
					Modifications.]
				</para>
			</section>

			<section id="appendices.third_party_licences.JFree">
				<title>JFree</title>
				<para>
					The Power*Architect team is also grateful to the
					JFree team for their top-notch charting library,
					which has a nice API as well as nice-looking output.
				</para>

				<para>
					The following license applies to these library jar
					files, which are distributed as part of the
					Power*Architect download:
				</para>

				<itemizedlist>
					<listitem>
						<para>jcommon-1.0.0.jar</para>
					</listitem>
					<listitem>
						<para>jfreechart-1.0.1.jar</para>
					</listitem>
				</itemizedlist>

				<para>
					<acronym>GNU</acronym>
					Lesser General Public License version 3
				</para>
				<para>Version 3, 29 June 2007</para>
				<para>
					Copyright &copy; 2007 Free Software Foundation, Inc.
					<ulink url="http://fsf.org/">http://fsf.org/</ulink>
				</para>
				<para>
					Everyone is permitted to copy and distribute
					verbatim copies of this license document, but
					changing it is not allowed.
				</para>
				<para>
					This version of the
					<acronym>GNU</acronym>
					Lesser General Public License incorporates the terms
					and conditions of version 3 of the
					<acronym>GNU</acronym>
					General Public License, supplemented by the
					additional permissions listed below.
				</para>
				<para id="AdditionalDefinitions">
					0. Additional Definitions.
				</para>
				<para>
					As used herein, &ldquo;this License&rdquo; refers to
					version 3 of the
					<acronym>GNU</acronym>
					Lesser General Public License, and the &ldquo;
					<acronym>GNU</acronym>
					<acronym>GPL</acronym>
					&rdquo; refers to version 3 of the
					<acronym>GNU</acronym>
					General Public License.
				</para>
				<para>
					&ldquo;The Library&rdquo; refers to a covered work
					governed by this License, other than an Application
					or a Combined Work as defined below.
				</para>
				<para>
					An &ldquo;Application&rdquo; is any work that makes
					use of an interface provided by the Library, but
					which is not otherwise based on the Library.
					Defining a subclass of a class defined by the
					Library is deemed a mode of using an interface
					provided by the Library.
				</para>
				<para>
					A &ldquo;Combined Work&rdquo; is a work produced by
					combining or linking an Application with the
					Library. The particular version of the Library with
					which the Combined Work was made is also called the
					&ldquo;Linked Version&rdquo;.
				</para>
				<para>
					The &ldquo;Minimal Corresponding Source&rdquo; for a
					Combined Work means the Corresponding Source for the
					Combined Work, excluding any source code for
					portions of the Combined Work that, considered in
					isolation, are based on the Application, and not on
					the Linked Version.
				</para>
				<para>
					The &ldquo;Corresponding Application Code&rdquo; for
					a Combined Work means the object code and/or source
					code for the Application, including any data and
					utility programs needed for reproducing the Combined
					Work from the Application, but excluding the System
					Libraries of the Combined Work.
				</para>
				<para id="ExceptionSec3">
					1. Exception to Section 3 of the
					<acronym>GNU</acronym>
					<acronym>GPL</acronym>
					.
				</para>
				<para>
					You may convey a covered work under sections 3 and 4
					of this License without being bound by section 3 of
					the
					<acronym>GNU</acronym>
					<acronym>GPL</acronym>
					.
				</para>
				<para id="ConveyingModified">
					2. Conveying Modified Versions.
				</para>
				<para>
					If you modify a copy of the Library, and, in your
					modifications, a facility refers to a function or
					data to be supplied by an Application that uses the
					facility (other than as an argument passed when the
					facility is invoked), then you may convey a copy of
					the modified version:
				</para>
				<orderedlist numeration="loweralpha">
					<listitem>
						<para>
							under this License, provided that you make a
							good faith effort to ensure that, in the
							event an Application does not supply the
							function or data, the facility still
							operates, and performs whatever part of its
							purpose remains meaningful, or
						</para>
					</listitem>
					<listitem>
						<para>
							under the
							<acronym>GNU</acronym>
							<acronym>GPL</acronym>
							, with none of the additional permissions of
							this License applicable to that copy.
						</para>
					</listitem>
				</orderedlist>
				<para id="ObjectCodeIncorporating">
					3. Object Code Incorporating Material from Library
					Header Files.
				</para>
				<para>
					The object code form of an Application may
					incorporate material from a header file that is part
					of the Library. You may convey such object code
					under terms of your choice, provided that, if the
					incorporated material is not limited to numerical
					parameters, data structure layouts and accessors, or
					small macros, inline functions and templates (ten or
					fewer lines in length), you do both of the
					following:
				</para>
				<orderedlist numeration="loweralpha">
					<listitem>
						<para>
							Give prominent notice with each copy of the
							object code that the Library is used in it
							and that the Library and its use are covered
							by this License.
						</para>
					</listitem>
					<listitem>
						<para>
							Accompany the object code with a copy of the
							<acronym>GNU</acronym>
							<acronym>GPL</acronym>
							and this license document.
						</para>
					</listitem>
				</orderedlist>
				<para id="CombinedWorks">4. Combined Works.</para>
				<para>
					You may convey a Combined Work under terms of your
					choice that, taken together, effectively do not
					restrict modification of the portions of the Library
					contained in the Combined Work and reverse
					engineering for debugging such modifications, if you
					also do each of the following:
				</para>
				<orderedlist numeration="loweralpha">
					<listitem>
						<para>
							Give prominent notice with each copy of the
							Combined Work that the Library is used in it
							and that the Library and its use are covered
							by this License.
						</para>
					</listitem>
					<listitem>
						<para>
							Accompany the Combined Work with a copy of
							the
							<acronym>GNU</acronym>
							<acronym>GPL</acronym>
							and this license document.
						</para>
					</listitem>
					<listitem>
						<para>
							For a Combined Work that displays copyright
							notices during execution, include the
							copyright notice for the Library among these
							notices, as well as a reference directing
							the user to the copies of the
							<acronym>GNU</acronym>
							<acronym>GPL</acronym>
							and this license document.
						</para>
					</listitem>
					<listitem>
						<para>Do one of the following:</para>
						<orderedlist numeration="arabic" role="0">
							<listitem>
								<para>
									Convey the Minimal Corresponding
									Source under the terms of this
									License, and the Corresponding
									Application Code in a form suitable
									for, and under terms that permit,
									the user to recombine or relink the
									Application with a modified version
									of the Linked Version to produce a
									modified Combined Work, in the
									manner specified by section 6 of the
									<acronym>GNU</acronym>
									<acronym>GPL</acronym>
									for conveying Corresponding Source.
								</para>
							</listitem>
							<listitem>
								<para>
									Use a suitable shared library
									mechanism for linking with the
									Library. A suitable mechanism is one
									that (a) uses at run time a copy of
									the Library already present on the
									user&rsquo;s computer system, and
									(b) will operate properly with a
									modified version of the Library that
									is interface-compatible with the
									Linked Version.
								</para>
							</listitem>
						</orderedlist>
					</listitem>
					<listitem>
						<para>
							Provide Installation Information, but only
							if you would otherwise be required to
							provide such information under section 6 of
							the
							<acronym>GNU</acronym>
							<acronym>GPL</acronym>
							, and only to the extent that such
							information is necessary to install and
							execute a modified version of the Combined
							Work produced by recombining or relinking
							the Application with a modified version of
							the Linked Version. (If you use option 4d0,
							the Installation Information must accompany
							the Minimal Corresponding Source and
							Corresponding Application Code. If you use
							option 4d1, you must provide the
							Installation Information in the manner
							specified by section 6 of the
							<acronym>GNU</acronym>
							<acronym>GPL</acronym>
							for conveying Corresponding Source.)
						</para>
					</listitem>
				</orderedlist>
				<para id="CombinedLibraries">
					5. Combined Libraries.
				</para>
				<para>
					You may place library facilities that are a work
					based on the Library side by side in a single
					library together with other library facilities that
					are not Applications and are not covered by this
					License, and convey such a combined library under
					terms of your choice, if you do both of the
					following:
				</para>
				<orderedlist numeration="loweralpha">
					<listitem>
						<para>
							Accompany the combined library with a copy
							of the same work based on the Library,
							uncombined with any other library
							facilities, conveyed under the terms of this
							License.
						</para>
					</listitem>
					<listitem>
						<para>
							Give prominent notice with the combined
							library that part of it is a work based on
							the Library, and explaining where to find
							the accompanying uncombined form of the same
							work.
						</para>
					</listitem>
				</orderedlist>
				<para id="RevisedVersions">
					6. Revised Versions of the
					<acronym>GNU</acronym>
					Lesser General Public License.
				</para>
				<para>
					The Free Software Foundation may publish revised
					and/or new versions of the
					<acronym>GNU</acronym>
					Lesser General Public License from time to time.
					Such new versions will be similar in spirit to the
					present version, but may differ in detail to address
					new problems or concerns.
				</para>
				<para>
					Each version is given a distinguishing version
					number. If the Library as you received it specifies
					that a certain numbered version of the
					<acronym>GNU</acronym>
					Lesser General Public License &ldquo;or any later
					version&rdquo; applies to it, you have the option of
					following the terms and conditions either of that
					published version or of any later version published
					by the Free Software Foundation. If the Library as
					you received it does not specify a version number of
					the
					<acronym>GNU</acronym>
					Lesser General Public License, you may choose any
					version of the
					<acronym>GNU</acronym>
					Lesser General Public License ever published by the
					Free Software Foundation.
				</para>
				<para>
					If the Library as you received it specifies that a
					proxy can decide whether future versions of the
					<acronym>GNU</acronym>
					Lesser General Public License shall apply, that
					proxy&rsquo;s public statement of acceptance of any
					version is permanent authorization for you to choose
					that version for the Library.
				</para>
			</section>

			<section id="appendices.third_party_licences.darwinsys">
				<title>Darwin Systems</title>
				<para>
					Thanks to Ian Darwin of Darwin Systems for his many
					contributions to Power*Architect.
				</para>

				<para>The following license applies to:</para>

				<itemizedlist>
					<listitem>
						<para>darwinsys.jar</para>
					</listitem>
				</itemizedlist>

				<para>
					Copyright (c) Ian F. Darwin,
					http://www.darwinsys.com/, 1996-2006. All rights
					reserved. Software written by Ian F. Darwin and
					others.
				</para>
				<para>
					Redistribution and use in source and binary forms,
					with or without modification, are permitted provided
					that the following conditions are met:
				</para>
				<orderedlist>
					<listitem>
						<para>
							Redistributions of source code must retain
							the above copyright notice, this list of
							conditions and the following disclaimer.
						</para>
					</listitem>
					<listitem>
						<para>
							Redistributions in binary form must
							reproduce the above copyright notice, this
							list of conditions and the following
							disclaimer in the documentation and/or other
							materials provided with the distribution.
						</para>
					</listitem>
					<listitem>
						<para>
							Neither the name of the author nor the names
							of any contributors may be used to endorse
							or promote products derived from this
							software without specific prior written
							permission.
						</para>
					</listitem>
				</orderedlist>
				<para>
					THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND
					CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED
					WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
					IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
					FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
					SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY
					DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
					CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
					TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
					LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
					INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
					LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
					TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
					ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
					ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
				</para>
			</section>


			<section id="appendices.third_party_licences.JUnit">
				<title>JUnit</title>
				<para>
					The Power*Architect team would also like to extend
					our sincere thanks to the JUnit.org team. JUnit
					forms an invaluable part of our development process,
					but it is not redistributed as part of the
					Power*Architect download so its license is not
					reproduced here.
				</para>

				<para>
					If you develop software, you should become test
					infected too! Learn about JUnit at
					<ulink url="http://www.junit.org/">
						http://www.junit.org/
					</ulink>
					.
				</para>

			</section>

			<section id="intro.third_party_licences.kettle">
				<title>Pentaho Data Integration</title>
				<para>
					The Power*Architect provides ETL integration
					features with Pentaho Data Integration (the tool
					formerly known as Kettle), and we redistribute a
					portion of the Kettle library along with the
					Architect in order to support those features.
				</para>

				<para>
					We gratefully acknowlegde the work of Matt Casters
					and the Pentaho corporation for their support and
					hard work on this product.
				</para>

				<para>
					We redistribute kettle (kettle.jar), and edtftpj
					(edtftpj-1.5.4.jar), an FTP library upon which it
					depends, under the terms of the GNU LGPL, which is
					reproduced in full elsewhere in this section.
				</para>

			</section>

			<section id="appendices.third_party_licences.eclipse">
				<title>The Eclipse Foundation</title>
				<para>
					The Power*Architect was primarily developed and
					tested using the
					<ulink url="http://www.eclipse.org/">Eclipse</ulink>
					Java Development Tools, one of the more productive
					Java environments around.
				</para>
			</section>

			<section id="appendices.third_party_licences.SUNW">
				<title>Sun Microsystems</title>

				<para>
					Last but not least, many thanks to
					<ulink url="http://java.sun.com/">
						Sun Microsystems
					</ulink>
					and their various Java development teams for
					creating, extending, bugfixing, documenting, and
					supporting the Java platform over the past
					<emphasis>N</emphasis>
					years!
				</para>

				<para>
					We redistribute the JavaHelp runtime library with
					Power*Architect. Although the JavaHelp website says
					that the system will be redistributable
					royalty-free, it does not actually link to the
					specific license terms. If someone can point us to
					the license text for JavaHelp redistributions, we
					would be grateful!
				</para>

				<para>
					The portion of JavaHelp that we redistribute is in
					the following JAR file:
				</para>

				<itemizedlist>
					<listitem>
						<para>jhall.jar</para>
					</listitem>
				</itemizedlist>

				<para>
					We also redistribute the JavaMail library and the
					JavaBeans Activation Framework, on which it depends
					(Kettle depends on JavaMail).
				</para>

				<para>
					The following JAR files are covered by the CDDL,
					reproduced below:
				</para>

				<itemizedlist>
					<listitem>
						<para>mail.jar</para>
					</listitem>
					<listitem>
						<para>activation.jar</para>
					</listitem>
				</itemizedlist>

				<para>
					COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)
					Version 1.0
				</para>
				<para>1. Definitions.</para>
				<para>
					1.1. Contributor means each individual or entity
					that creates or contributes to the creation of
					Modifications.
				</para>
				<para>
					1.2. Contributor Version means the combination of
					the Original Software, prior Modifications used by a
					Contributor (if any), and the Modifications made by
					that particular Contributor.
				</para>
				<para>
					1.3. Covered Software means (a) the Original
					Software, or (b) Modifications, or (c) the
					combination of files containing Original Software
					with files containing Modifications, in each case
					including portions thereof.
				</para>
				<para>
					1.4. Executable means the Covered Software in any
					form other than Source Code.
				</para>
				<para>
					1.5. Initial Developer means the individual or
					entity that first makes Original Software available
					under this License.
				</para>
				<para>
					1.6. Larger Work means a work which combines Covered
					Software or portions thereof with code not governed
					by the terms of this License.
				</para>
				<para>1.7. License means this document.</para>
				<para>
					1.8. Licensable means having the right to grant, to
					the maximum extent possible, whether at the time of
					the initial grant or subsequently acquired, any and
					all of the rights conveyed herein.
				</para>
				<para>
					1.9. Modifications means the Source Code and
					Executable form of any of the following: A. Any file
					that results from an addition to, deletion from or
					modification of the contents of a file containing
					Original Software or previous Modifications; B. Any
					new file that contains any part of the Original
					Software or previous Modification; or C. Any new
					file that is contributed or otherwise made available
					under the terms of this License.
				</para>
				<para>
					1.10. Original Software means the Source Code and
					Executable form of computer software code that is
					originally released under this License.
				</para>
				<para>
					1.11. Patent Claims means any patent claim(s), now
					owned or hereafter acquired, including without
					limitation, method, process, and apparatus claims,
					in any patent Licensable by grantor.
				</para>
				<para>
					1.12. Source Code means (a) the common form of
					computer software code in which modifications are
					made and (b) associated documentation included in or
					with such code.
				</para>
				<para>
					1.13. You (or Your) means an individual or a legal
					entity exercising rights under, and complying with
					all of the terms of, this License. For legal
					entities, You includes any entity which controls, is
					controlled by, or is under common control with You.
					For purposes of this definition, control means (a)
					the power, direct or indirect, to cause the
					direction or management of such entity, whether by
					contract or otherwise, or (b) ownership of more than
					fifty percent (50%) of the outstanding shares or
					beneficial ownership of such entity.
				</para>
				<para>2. License Grants.</para>
				<para>
					2.1. The Initial Developer Grant. Conditioned upon
					Your compliance with Section 3.1 below and subject
					to third party intellectual property claims, the
					Initial Developer hereby grants You a world-wide,
					royalty-free, non-exclusive license:
				</para>
				<para>
					(a) under intellectual property rights (other than
					patent or trademark) Licensable by Initial
					Developer, to use, reproduce, modify, display,
					perform, sublicense and distribute the Original
					Software (or portions thereof), with or without
					Modifications, and/or as part of a Larger Work; and
				</para>
				<para>
					(b) under Patent Claims infringed by the making,
					using or selling of Original Software, to make, have
					made, use, practice, sell, and offer for sale,
					and/or otherwise dispose of the Original Software
					(or portions thereof);
				</para>
				<para>
					(c) The licenses granted in Sections 2.1(a) and (b)
					are effective on the date Initial Developer first
					distributes or otherwise makes the Original Software
					available to a third party under the terms of this
					License;
				</para>
				<para>
					(d) Notwithstanding Section 2.1(b) above, no patent
					license is granted: (1) for code that You delete
					from the Original Software, or (2) for infringements
					caused by: (i) the modification of the Original
					Software, or (ii) the combination of the Original
					Software with other software or devices.
				</para>
				<para>
					2.2. Contributor Grant. Conditioned upon Your
					compliance with Section 3.1 below and subject to
					third party intellectual property claims, each
					Contributor hereby grants You a world-wide,
					royalty-free, non-exclusive license:
				</para>
				<para>
					(a) under intellectual property rights (other than
					patent or trademark) Licensable by Contributor to
					use, reproduce, modify, display, perform, sublicense
					and distribute the Modifications created by such
					Contributor (or portions thereof), either on an
					unmodified basis, with other Modifications, as
					Covered Software and/or as part of a Larger Work;
					and
				</para>
				<para>
					(b) under Patent Claims infringed by the making,
					using, or selling of Modifications made by that
					Contributor either alone and/or in combination with
					its Contributor Version (or portions of such
					combination), to make, use, sell, offer for sale,
					have made, and/or otherwise dispose of: (1)
					Modifications made by that Contributor (or portions
					thereof); and (2) the combination of Modifications
					made by that Contributor with its Contributor
					Version (or portions of such combination).
				</para>
				<para>
					(c) The licenses granted in Sections 2.2(a) and
					2.2(b) are effective on the date Contributor first
					distributes or otherwise makes the Modifications
					available to a third party.
				</para>
				<para>
					(d) Notwithstanding Section 2.2(b) above, no patent
					license is granted: (1) for any code that
					Contributor has deleted from the Contributor
					Version; (2) for infringements caused by: (i) third
					party modifications of Contributor Version, or (ii)
					the combination of Modifications made by that
					Contributor with other software (except as part of
					the Contributor Version) or other devices; or (3)
					under Patent Claims infringed by Covered Software in
					the absence of Modifications made by that
					Contributor.
				</para>
				<para>3. Distribution Obligations.</para>
				<para>
					3.1. Availability of Source Code. Any Covered
					Software that You distribute or otherwise make
					available in Executable form must also be made
					available in Source Code form and that Source Code
					form must be distributed only under the terms of
					this License. You must include a copy of this
					License with every copy of the Source Code form of
					the Covered Software You distribute or otherwise
					make available. You must inform recipients of any
					such Covered Software in Executable form as to how
					they can obtain such Covered Software in Source Code
					form in a reasonable manner on or through a medium
					customarily used for software exchange.
				</para>
				<para>
					3.2. Modifications. The Modifications that You
					create or to which You contribute are governed by
					the terms of this License. You represent that You
					believe Your Modifications are Your original
					creation(s) and/or You have sufficient rights to
					grant the rights conveyed by this License.
				</para>
				<para>
					3.3. Required Notices. You must include a notice in
					each of Your Modifications that identifies You as
					the Contributor of the Modification. You may not
					remove or alter any copyright, patent or trademark
					notices contained within the Covered Software, or
					any notices of licensing or any descriptive text
					giving attribution to any Contributor or the Initial
					Developer.
				</para>
				<para>
					3.4. Application of Additional Terms. You may not
					offer or impose any terms on any Covered Software in
					Source Code form that alters or restricts the
					applicable version of this License or the recipients
					rights hereunder. You may choose to offer, and to
					charge a fee for, warranty, support, indemnity or
					liability obligations to one or more recipients of
					Covered Software. However, you may do so only on
					Your own behalf, and not on behalf of the Initial
					Developer or any Contributor. You must make it
					absolutely clear that any such warranty, support,
					indemnity or liability obligation is offered by You
					alone, and You hereby agree to indemnify the Initial
					Developer and every Contributor for any liability
					incurred by the Initial Developer or such
					Contributor as a result of warranty, support,
					indemnity or liability terms You offer.
				</para>
				<para>
					3.5. Distribution of Executable Versions. You may
					distribute the Executable form of the Covered
					Software under the terms of this License or under
					the terms of a license of Your choice, which may
					contain terms different from this License, provided
					that You are in compliance with the terms of this
					License and that the license for the Executable form
					does not attempt to limit or alter the recipients
					rights in the Source Code form from the rights set
					forth in this License. If You distribute the Covered
					Software in Executable form under a different
					license, You must make it absolutely clear that any
					terms which differ from this License are offered by
					You alone, not by the Initial Developer or
					Contributor. You hereby agree to indemnify the
					Initial Developer and every Contributor for any
					liability incurred by the Initial Developer or such
					Contributor as a result of any such terms You offer.
				</para>
				<para>
					3.6. Larger Works. You may create a Larger Work by
					combining Covered Software with other code not
					governed by the terms of this License and distribute
					the Larger Work as a single product. In such a case,
					You must make sure the requirements of this License
					are fulfilled for the Covered Software.
				</para>
				<para>4. Versions of the License.</para>
				<para>
					4.1. New Versions. Sun Microsystems, Inc. is the
					initial license steward and may publish revised
					and/or new versions of this License from time to
					time. Each version will be given a distinguishing
					version number. Except as provided in Section 4.3,
					no one other than the license steward has the right
					to modify this License.
				</para>
				<para>
					4.2. Effect of New Versions. You may always continue
					to use, distribute or otherwise make the Covered
					Software available under the terms of the version of
					the License under which You originally received the
					Covered Software. If the Initial Developer includes
					a notice in the Original Software prohibiting it
					from being distributed or otherwise made available
					under any subsequent version of the License, You
					must distribute and make the Covered Software
					available under the terms of the version of the
					License under which You originally received the
					Covered Software. Otherwise, You may also choose to
					use, distribute or otherwise make the Covered
					Software available under the terms of any subsequent
					version of the License published by the license
					steward.
				</para>
				<para>
					4.3. Modified Versions. When You are an Initial
					Developer and You want to create a new license for
					Your Original Software, You may create and use a
					modified version of this License if You: (a) rename
					the license and remove any references to the name of
					the license steward (except to note that the license
					differs from this License); and (b) otherwise make
					it clear that the license contains terms which
					differ from this License.
				</para>
				<para>
					5. DISCLAIMER OF WARRANTY. COVERED SOFTWARE IS
					PROVIDED UNDER THIS LICENSE ON AN AS IS BASIS,
					WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR
					IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES
					THAT THE COVERED SOFTWARE IS FREE OF DEFECTS,
					MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR
					NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY
					AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU.
					SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY
					RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER
					CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY
					SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF
					WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS
					LICENSE. NO USE OF ANY COVERED SOFTWARE IS
					AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.
				</para>
				<para>6. TERMINATION.</para>
				<para>
					6.1. This License and the rights granted hereunder
					will terminate automatically if You fail to comply
					with terms herein and fail to cure such breach
					within 30 days of becoming aware of the breach.
					Provisions which, by their nature, must remain in
					effect beyond the termination of this License shall
					survive.
				</para>
				<para>
					6.2. If You assert a patent infringement claim
					(excluding declaratory judgment actions) against
					Initial Developer or a Contributor (the Initial
					Developer or Contributor against whom You assert
					such claim is referred to as Participant) alleging
					that the Participant Software (meaning the
					Contributor Version where the Participant is a
					Contributor or the Original Software where the
					Participant is the Initial Developer) directly or
					indirectly infringes any patent, then any and all
					rights granted directly or indirectly to You by such
					Participant, the Initial Developer (if the Initial
					Developer is not the Participant) and all
					Contributors under Sections 2.1 and/or 2.2 of this
					License shall, upon 60 days notice from Participant
					terminate prospectively and automatically at the
					expiration of such 60 day notice period, unless if
					within such 60 day period You withdraw Your claim
					with respect to the Participant Software against
					such Participant either unilaterally or pursuant to
					a written agreement with Participant.
				</para>
				<para>
					6.3. In the event of termination under Sections 6.1
					or 6.2 above, all end user licenses that have been
					validly granted by You or any distributor hereunder
					prior to termination (excluding licenses granted to
					You by any distributor) shall survive termination.
				</para>
				<para>
					7. LIMITATION OF LIABILITY. UNDER NO CIRCUMSTANCES
					AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING
					NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE
					INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY
					DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF
					ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY
					INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL
					DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT
					LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF
					GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR
					MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES
					OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN
					INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS
					LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY
					FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH
					PARTYS NEGLIGENCE TO THE EXTENT APPLICABLE LAW
					PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT
					ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR
					CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND
					LIMITATION MAY NOT APPLY TO YOU.
				</para>
				<para>
					8. U.S. GOVERNMENT END USERS. The Covered Software
					is a commercial item, as that term is defined in 48
					C.F.R. 2.101 (Oct. 1995), consisting of commercial
					computer software (as that term is defined at 48
					C.F.R. 252.227-7014(a)(1)) and commercial computer
					software documentation as such terms are used in 48
					C.F.R. 12.212 (Sept. 1995). Consistent with 48
					C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through
					227.7202-4 (June 1995), all U.S. Government End
					Users acquire Covered Software with only those
					rights set forth herein. This U.S. Government Rights
					clause is in lieu of, and supersedes, any other FAR,
					DFAR, or other clause or provision that addresses
					Government rights in computer software under this
					License.
				</para>
				<para>
					9. MISCELLANEOUS. This License represents the
					complete agreement concerning subject matter hereof.
					If any provision of this License is held to be
					unenforceable, such provision shall be reformed only
					to the extent necessary to make it enforceable. This
					License shall be governed by the law of the
					jurisdiction specified in a notice contained within
					the Original Software (except to the extent
					applicable law, if any, provides otherwise),
					excluding such jurisdictions conflict-of-law
					provisions. Any litigation relating to this License
					shall be subject to the jurisdiction of the courts
					located in the jurisdiction and venue specified in a
					notice contained within the Original Software, with
					the losing party responsible for costs, including,
					without limitation, court costs and reasonable
					attorneys fees and expenses. The application of the
					United Nations Convention on Contracts for the
					International Sale of Goods is expressly excluded.
					Any law or regulation which provides that the
					language of a contract shall be construed against
					the drafter shall not apply to this License. You
					agree that You alone are responsible for compliance
					with the United States export administration
					regulations (and the export control laws and
					regulation of any other countries) when You use,
					distribute or otherwise make available any Covered
					Software.
				</para>
				<para>
					10. RESPONSIBILITY FOR CLAIMS. As between Initial
					Developer and the Contributors, each party is
					responsible for claims and damages arising, directly
					or indirectly, out of its utilization of rights
					under this License and You agree to work with
					Initial Developer and Contributors to distribute
					such responsibility on an equitable basis. Nothing
					herein is intended or shall be deemed to constitute
					any admission of liability.
				</para>
				<para>
					NOTICE PURSUANT TO SECTION 9 OF THE COMMON
					DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) The code
					released under the CDDL shall be governed by the
					laws of the State of California (excluding
					conflict-of-law provisions). Any litigation relating
					to this License shall be subject to the jurisdiction
					of the Federal Courts of the Northern District of
					California and the state courts of the State of
					California, with venue lying in Santa Clara County,
					California.
				</para>
			</section>

		</section>

	</chapter>

</book>