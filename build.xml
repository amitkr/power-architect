<project name="architect" default="dist" basedir=".">

	<!-- $Id$ -->
	<!-- get the version number from source code ArchitectUtils -->

	<property file="user.properties" />

	<property name="src" value="src"/>
	<property name="build" value="build"/>
	<property name="build.compiler" value="modern"/>
	<property name="installer.dir" value="installer"/>
	<property name="izpack.dir" value="IzPack"/>
	<property name="deploy.dir" value="deploy"/>
	
	<taskdef name="izpack" classpath="${izpack.dir}/lib/compiler.jar" classname="com.izforge.izpack.ant.IzPackTask"/>
	<taskdef name="jarbundler" classpath="osx_packaging_utils/jarbundler.jar:osx_packaging_utils/xercesImpl.jar:osx_packaging_utils/xml-apis.jar" classname="net.sourceforge.jarbundler.JarBundler"/>
	
	<target name="init">
		<tstamp/>
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init,copyicons,copylog4jprops">
		<javac srcdir="${src}" destdir="${build}" classpathref="compile.classpath" debug="true" deprecation="true">
          <!-- <compilerarg compiler="jikes" value="+Pno-naming-convention"/> -->
        </javac>
	</target>

    <!-- copies our custom icon files to the build dir so
         they will be in the classpath at runtime. -->
	<target name="copyicons" depends="init">
		<mkdir dir="${build}/icons"/>
        <copy todir="${build}/icons">
			<fileset dir="src/icons">
				<include name="*.gif"/>
				<include name="*.png"/>				
			</fileset>
		</copy>
    </target>

    <!-- Deploy the log4j.properties.example file to log4j.properties -->

	<target name="copylog4jprops" depends="init">
	    <!-- copies the template log4j config file into the build dir -->
	    <copy tofile="${build}/log4j.properties"
    	        file="src/log4j.properties.example"/>
    </target>

	<!-- DOCUMENTATION -->

	<!-- NOTE: All steps currently require xalan on classpath since JDK1.5 is behind -->

	<target name="userguide" depends="html,pdf" description="Create user guide in HTML and PDF">
	</target>
	
	<!-- First the HTML -->
	<target name="html" depends="init" description="Create user guide in HTML">
		<mkdir dir="${build}/ca/sqlpower/architect/doc/" />
		
		<!-- Create an intermediate docbook document with no width attributes on the images
		     (the swing html browser chokes when there is width but not height in an img tag) -->
		<xslt
			style="doc/tools/strip-width.xsl"
			in="doc/PowerArchitectUserGuide.xml"
			out="${build}/ca/sqlpower/architect/doc/PowerArchitectUserGuide-nowidth.xml">
			<classpath>
		    	<fileset dir="doc/tools/xalan">
		    	  <include name="*.jar"/>
		    	</fileset>
			</classpath>
		</xslt>
		<xslt
			style="doc/tools/xslt/html/chunk.xsl"
			in="${build}/ca/sqlpower/architect/doc/PowerArchitectUserGuide-nowidth.xml"
			out="${build}/ca/sqlpower/architect/doc/PowerArchitectUserGuide.html">
			<classpath>
			    <fileset dir="doc/tools/xalan">
			      <include name="*.jar"/>
			    </fileset>
			</classpath>
		</xslt>
		
		<!-- Warning: This is an extremely evil hack to get the product out the door!
		              See bugzilla 1195 for details -->
		<mkdir dir="${build}/ca/sqlpower/architect/doc/doc/images" />		
		<copy todir="${build}/ca/sqlpower/architect/doc/doc/images" overwrite="true">
			<fileset dir="doc/images">
				<include name="*.png"/>
			</fileset>
		</copy>
		<mkdir dir="${build}/ca/sqlpower/architect/doc/src/icons" />		
		<copy todir="${build}/ca/sqlpower/architect/doc/src/icons" overwrite="true">
			<fileset dir="src/icons">
				<include name="*.gif"/>
				<include name="*.png"/>				
			</fileset>
		</copy>
	</target>

	<!-- Convert User Manual from XML to FO -->
	<target name="fo" depends="init" description="Create user guide in XML Formatting Objects">
		<mkdir dir="${build}/doc/" />
        <xslt 
			style="doc/tools/xslt/fo/docbook.xsl"
			in="doc/PowerArchitectUserGuide.xml" 
			out="${build}/doc/PowerArchitectUserGuide.fo">
			<classpath>
			    <fileset dir="doc/tools/xalan">
			      <include name="*.jar"/>
			    </fileset>
			</classpath>
		</xslt>
	</target>

	<!-- Now finish it, from FO to PDF -->
	<target name="pdf" depends="fo" description="Create user guide in PDF">
		<path id="fop-classpath">
			<fileset dir="doc/tools/xalan">
			  <include name="*.jar"/>
			</fileset>
			<fileset dir="doc/tools/fop">
			  <include name="*.jar"/>
			</fileset>
		</path>
		<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop" classpathref="fop-classpath"/>
        <fop format="application/pdf" messagelevel="info" relativebase="true" >
			<fileset dir=".">
				<include name="${build}/doc/*.fo"/>
			</fileset>
		</fop>

    </target>
	
    <!-- Creates a WebStart distribution under the webstart/ directory -->
	<target name="webstart_dist" depends="compile,userguide">
        <mkdir dir="webstart/lib"/>
		<jar destfile="webstart/lib/architect.jar" update="no"
			basedir="${build}" includes="ca/** icons/** log4j.properties" 
			manifest="manifest">
		</jar>
        <copy todir="webstart/lib">
            <fileset dir="lib" includes="*.jar"/>
        </copy>
		<!-- No point in signing until we have a certificate that's signed by a CA
        <signjar alias="sqlpower" keystore="keystore" storepass="low_security" keypass="low_security">
            <fileset dir="webstart/lib"/>
        </signjar>
        -->
	</target>

    <!-- Copy the main Jar file, and dependent libs, to the deploy dir. 
     -->
    <target name="deploy" depends="webstart_dist">
        <mkdir dir="${deploy.dir}"/>
        <mkdir dir="${deploy.dir}/lib"/>
        <copy file="webstart/lib/architect.jar" todir="${deploy.dir}"/>
        <copy todir="${deploy.dir}/lib">
            <fileset dir="webstart/lib" excludes="architect.jar"/>
        </copy>
	</target>

	<target name="run" depends="compile">
		<java fork="true" classname="ca.sqlpower.architect.swingui.ArchitectFrame" classpathref="test.classpath">
			<jvmarg value="-Dlog4j.configuration=file:log4j.properties"/>
		</java>
	</target>

	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${deploy.dir}"/>
		<delete dir="webstart/lib"/>
	</target>

	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="buildlib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="build"/>
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="buildlib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="docs" depends="compile">
		<mkdir dir="${build}/docs/api"/>
		<javadoc sourcepath="${src}" destdir="${build}/docs/api"
			packagenames="ca.sqlpower.*"
			maxmemory="100m" 
			windowtitle="ca.sqlpower.architect.* Power*Architect"
			Version="true" Author="true" Use="true"
			Overview="html/overview.html"
			classpathref="test.classpath"
			>
			<packageset dir="${src}" defaultexcludes="yes">
				<include name="ca/sqlpower/**" />
				<exclude name="regress/**"/>
			</packageset>
			<bottom><![CDATA[<i>Copyright &#169; 2003-2006 SQL Power Group Inc. <a href="http://www.sqlpower.ca/">www.sqlpower.ca</a>]]></bottom>
		</javadoc>
		<copy file="html/index.html" todir="${build}/docs"/>

	</target>
	
	<!-- generate version number, get the version number from the code - ArchitectUtils -->
	<target name="gen_version" depends="compile">
		<taskdef name="genVersion"
			classname="ca.sqlpower.architect.ArchitectVersion"
	        classpath="build"/>
		<genVersion message="Architect!"/>
		<echo message="Building Architect version: ${app_ver_major}.${app_ver_minor}.${app_ver_tiny}"> </echo>
	</target>
		
	<target name="windows_installer" depends="deploy,gen_version">
		<izpack input="${installer.dir}/Architect-install.xml"
		        output="${deploy.dir}/Architect-Setup-Windows-${app_ver_major}.${app_ver_minor}.${app_ver_tiny}.jar"
		        installerType="standard"
			    basedir="${installer.dir}"
		        izPackDir="${izpack.dir}/"/>
	</target>

	<target name="osx_dist" depends="deploy,gen_version">
		
		<!-- The pre-compiled osx adapter class (it only compiles on OS X) -->
		<copy file="osx_packaging_utils/osx_adapter.jar" todir="${deploy.dir}/lib"/>
		
		<!-- jarbundler is from sourceforge, defined near top of file -->
		<jarbundler dir="deploy"
           name="Power*Architect"
           version="${app_ver_major}.${app_ver_minor}.${app_ver_tiny}"
           mainclass="ca.sqlpower.architect.swingui.ArchitectFrame"
           icon="src/icons/Power Architect.icns"
           jvmversion="1.5+"
           shortname="Architect"
           stubfile="osx_packaging_utils/PowerArchitectStub"
           vmoptions="-Xmx600m">
			<jarfileset dir="${deploy.dir}/lib" includes="*.jar"/>
			<jarfileset dir="${deploy.dir}" includes="architect.jar"/>
		</jarbundler>
	</target>
	
	<!-- This target will only work on OS X (it needs the hdiutil command) -->
	<target name="osx_dmg" depends="osx_dist,gen_version">
		<exec executable="hdiutil">
			<arg value="create"/>
			<arg value="-srcfolder"/>
			<arg value="${deploy.dir}/Power*Architect.app"/>
			<arg value="${deploy.dir}/Power_Architect-${app_ver_major}.${app_ver_minor}.${app_ver_tiny}.dmg"/>
		</exec>
	</target>
	
	<!-- Build a "generic" (e.g., UNIX) install that users will just un-tar -->
    <target name="generic_install" depends="deploy,gen_version">
		<tar destfile="${deploy.dir}/Architect-generic-${app_ver_major}.${app_ver_minor}.${app_ver_tiny}.tar.gz"
			compression="gzip">
			<tarfileset dir="${deploy.dir}" includes="lib/*.jar"/>
			<tarfileset dir="${deploy.dir}" includes="architect.jar"/>
		</tar>
    </target>
	
	<target name="dist" depends="windows_installer,generic_install"><!-- ,osx_dmg -->
	</target>
</project>
